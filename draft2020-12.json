{"implementations": {"python-jsonschema": {"name": "jsonschema", "language": "python", "homepage": "https://python-jsonschema.readthedocs.io/", "issues": "https://github.com/python-jsonschema/jsonschema/issues", "source": "https://github.com/python-jsonschema/jsonschema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#", "http://json-schema.org/draft-03/schema#"], "version": "4.23.0", "language_version": "3.13.2", "os": "Linux", "os_version": "6.8.0-1021-azure", "documentation": "https://python-jsonschema.readthedocs.io/", "links": []}, "rust-jsonschema": {"name": "jsonschema", "language": "rust", "homepage": "https://docs.rs/jsonschema", "issues": "https://github.com/Stranger6667/jsonschema-rs/issues", "source": "https://github.com/Stranger6667/jsonschema-rs", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.28.3", "language_version": "1.84.1", "os": "Alpine", "os_version": "3.21.2", "documentation": "https://docs.rs/jsonschema", "links": []}, "cpp-jsoncons": {"name": "jsoncons", "language": "c++", "homepage": "https://danielaparker.github.io/jsoncons/", "issues": "https://github.com/danielaparker/jsoncons/issues", "source": "https://github.com/danielaparker/jsoncons", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.177.0", "links": []}, "rust-boon": {"name": "boon", "language": "rust", "homepage": "https://github.com/santhosh-tekuri/boon", "issues": "htps://github.com/santhosh-tekuri/boon/issues", "source": "https://github.com/santhosh-tekuri/boon", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.6.1", "language_version": "1.84.1", "os": "Alpine", "os_version": "3.21.2", "documentation": "https://docs.rs/boon", "links": []}, "php-opis-json-schema": {"name": "opis-json-schema", "language": "php", "homepage": "https://opis.io/json-schema", "issues": "https://github.com/opis/json-schema/issues", "source": "https://github.com/opis/json-schema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#"], "version": "2.4.1", "language_version": "8.4.3", "os": "Linux", "os_version": "6.8.0-1021-azure", "documentation": "https://opis.io/json-schema/2.x/", "links": []}, "cpp-blaze": {"name": "blaze", "language": "c++", "homepage": "https://github.com/sourcemeta/blaze", "issues": "https://github.com/sourcemeta/blaze/issues", "source": "https://github.com/sourcemeta/blaze", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "43cac42d", "links": []}, "python-jschon": {"name": "jschon", "language": "python", "homepage": "https://jschon.readthedocs.io/", "issues": "https://github.com/marksparkza/jschon/issues", "source": "https://github.com/marksparkza/jschon", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema"], "version": "0.11.1", "language_version": "3.13.2", "os": "Linux", "os_version": "6.8.0-1021-azure", "documentation": "https://jschon.readthedocs.io/", "links": []}, "go-jsonschema": {"name": "jsonschema", "language": "go", "homepage": "https://github.com/santhosh-tekuri/jsonschema", "issues": "https://github.com/santhosh-tekuri/jsonschema/issues", "source": "https://github.com/santhosh-tekuri/jsonschema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "v6.0.1", "language_version": "go1.23.6", "os": "linux", "os_version": "6.8.0-1021-azure", "links": []}, "kotlin-kmp-json-schema-validator": {"name": "kmp-json-schema-validator", "language": "kotlin", "homepage": "https://github.com/OptimumCode/json-schema-validator", "issues": "https://github.com/OptimumCode/json-schema-validator/issues", "source": "https://github.com/OptimumCode/json-schema-validator", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.3.1", "language_version": "2.1.10", "os": "Linux", "os_version": "6.8.0-1021-azure", "links": []}, "java-json-schema": {"name": "dev.harrel.json-schema", "language": "java", "homepage": "https://github.com/harrel56/json-schema", "issues": "https://github.com/harrel56/json-schema/issues", "source": "https://github.com/harrel56/json-schema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#"], "version": "1.7.3", "language_version": "23.0.2+9", "os": "Linux", "os_version": "6.8.0-1021-azure", "documentation": "https://javadoc.io/doc/dev.harrel/json-schema/latest/dev/harrel/jsonschema/package-summary.html", "links": [{"description": "Group homepage", "url": "https://harrel.dev/"}, {"description": "Maven Central - implementation", "url": "https://mvnrepository.com/artifact/dev.harrel/json-schema/1.7.3"}, {"description": "Maven Central - used JSON provider", "url": "https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind/2.18.2"}]}, "java-networknt-json-schema-validator": {"name": "com.networknt-json-schema-validator", "language": "java", "homepage": "https://github.com/networknt/json-schema-validator/", "issues": "https://github.com/networknt/json-schema-validator/issues", "source": "https://github.com/networknt/json-schema-validator/", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "1.5.5", "language_version": "23.0.2+9", "os": "Linux", "os_version": "6.8.0-1021-azure", "documentation": "https://doc.networknt.com/library/json-schema-validator/", "links": []}, "dotnet-jsonschema-net": {"name": "JsonSchema.Net", "language": "dotnet", "homepage": "https://json-everything.net/json-schema/", "issues": "https://github.com/gregsdennis/json-everything/issues", "source": "https://github.com/gregsdennis/json-everything", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#"], "version": "1.0.0", "language_version": "9.0.1", "os": "Unix", "os_version": "6.8.0.1021", "documentation": "https://docs.json-everything.net/schema/basics/", "links": []}, "scala-rc-circe-json-validator": {"name": "rc-circe-json-validator", "language": "scala", "homepage": "https://github.com/reactivecore/rc-circe-json-schema", "issues": "https://github.com/reactivecore/rc-circe-json-schema/issues", "source": "https://github.com/reactivecore/rc-circe-json-schema", "dialects": ["https://json-schema.org/draft/2020-12/schema"], "version": "0.4.1", "language_version": "23.0.2+9", "os": "Linux", "os_version": "6.8.0-1021-azure", "links": []}, "scala-mjs-validator": {"name": "mjs", "language": "scala", "homepage": "https://gitlab.lip6.fr/jsonschema/modernjsonschemavalidator", "issues": "https://gitlab.lip6.fr/jsonschema/modernjsonschemavalidator/issues", "source": "https://gitlab.lip6.fr/jsonschema/modernjsonschemavalidator", "dialects": ["https://json-schema.org/draft/2020-12/schema"], "version": "v0.1.0", "language_version": "23.0.2+9", "os": "Linux", "os_version": "6.8.0-1021-azure", "links": []}, "java-jsonschemafriend": {"name": "jsonschemafriend", "language": "java", "homepage": "https://github.com/jimblackler/jsonschemafriend", "issues": "https://github.com/jimblackler/jsonschemafriend/issues", "source": "https://github.com/jimblackler/jsonschemafriend", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#", "http://json-schema.org/draft-03/schema#"], "version": "0.12.4", "language_version": "23.0.2+9", "os": "Linux", "os_version": "6.8.0-1021-azure", "links": [{"description": "Maven Central - used JSON provider", "url": "https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind/2.18.2"}]}, "java-openapiprocessor": {"name": "io.openapiprocessor.json-schema-validator", "language": "java", "homepage": "https://github.com/openapi-processor/openapi-parser", "issues": "https://github.com/openapi-processor/openapi-parser/issues", "source": "https://github.com/openapi-processor/openapi-parser", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "2025.1", "language_version": "23.0.2+9", "links": []}, "dotnet-corvus-jsonschema": {"name": "Corvus.JsonSchema", "language": "dotnet", "homepage": "https://github.com/corvus-dotnet/corvus.jsonschema", "issues": "https://github.com/corvus-dotnet/corvus.jsonschema/issues", "source": "https://github.com/corvus-dotnet/corvus.jsonschema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "4.2.3", "language_version": "9.0.1", "os": "Unix", "os_version": "6.8.0.1021", "documentation": "https://github.com/corvus-dotnet/Corvus.JsonSchema/blob/main/README.md", "links": []}, "js-schemasafe": {"name": "schemasafe", "language": "javascript", "homepage": "https://github.com/ExodusMovement/schemasafe", "issues": "https://github.com/ExodusMovement/schemasafe/issues", "source": "https://github.com/ExodusMovement/schemasafe", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "1.3.0", "language_version": "v23.7.0", "os": "linux", "os_version": "6.8.0-1021-azure", "links": []}, "js-json-schema": {"name": "cfworker-json-schema", "language": "javascript", "homepage": "https://github.com/cfworker/cfworker/blob/main/packages/json-schema/README.md", "issues": "https://github.com/cfworker/cfworker/issues", "source": "https://github.com/cfworker/cfworker", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-04/schema#"], "version": "4.1.1", "language_version": "v23.7.0", "os": "linux", "os_version": "6.8.0-1021-azure", "links": []}, "js-ajv": {"name": "ajv", "language": "javascript", "homepage": "https://ajv.js.org/", "issues": "https://github.com/ajv-validator/ajv/issues", "source": "https://github.com/ajv-validator/ajv", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "8.17.1", "language_version": "v23.7.0", "os": "linux", "os_version": "6.8.0-1021-azure", "documentation": "https://ajv.js.org/json-schema.html", "links": []}, "ts-vscode-json-languageservice": {"name": "vscode-json-language-service", "language": "typescript", "homepage": "https://github.com/microsoft/vscode-json-languageservice", "issues": "https://github.com/microsoft/vscode-json-languageservice/issues", "source": "https://github.com/microsoft/vscode-json-languageservice", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "5.4.3", "language_version": "v23.7.0", "os": "linux", "os_version": "6.8.0-1021-azure", "links": []}, "js-hyperjump": {"name": "hyperjump-json-schema", "language": "javascript", "homepage": "https://json-schema.hyperjump.io/", "issues": "https://github.com/hyperjump-io/json-schema/issues", "source": "https://github.com/hyperjump-io/json-schema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "1.11.0", "language_version": "v23.7.0", "os": "linux", "os_version": "6.8.0-1021-azure", "links": []}, "ruby-json_schemer": {"name": "json_schemer", "language": "ruby", "homepage": "https://github.com/davishmcclurg/json_schemer", "issues": "https://github.com/davishmcclurg/json_schemer/issues", "source": "https://github.com/davishmcclurg/json_schemer", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "2.3.0", "language_version": "3.4.1", "os": "Linux", "os_version": "6.8.0-1021-azure", "links": []}, "elixir-jsv": {"name": "jsv", "language": "elixir", "homepage": "https://github.com/lud/jsv", "issues": "https://github.com/lud/jsv/issues", "source": "https://github.com/lud/jsv", "dialects": ["https://json-schema.org/draft/2020-12/schema", "http://json-schema.org/draft-07/schema#"], "version": "0.3.0", "documentation": "https://hexdocs.pm/jsv/", "links": []}}, "bowtie_version": "2025.2.5", "metadata": {"Commit": {"text": "39002ae", "href": "https://github.com/json-schema-org/JSON-Schema-Test-Suite/commit/39002ae7135d11711ced15e88d7ff60d8457eb5b"}}, "dialect": "https://json-schema.org/draft/2020-12/schema", "started": "2025-02-12T12:51:50.535666+00:00"}
{"seq": 1, "case": {"description": "additionalProperties being false does not allow other properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {}, "bar": {}}, "patternProperties": {"^v": {}}, "additionalProperties": false}, "tests": [{"description": "no additional properties is valid", "instance": {"foo": 1}, "valid": true}, {"description": "an additional property is invalid", "instance": {"foo": 1, "bar": 2, "quux": "boom"}, "valid": false}, {"description": "ignores arrays", "instance": [1, 2, 3], "valid": true}, {"description": "ignores strings", "instance": "foobarbaz", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}, {"description": "patternProperties are not additional properties", "instance": {"foo": 1, "vroom": 2}, "valid": true}]}}
{"seq": 1, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "cpp-blaze", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "js-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "cpp-jsoncons", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "rust-boon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "python-jschon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "elixir-jsv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "js-ajv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "scala-mjs-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "java-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 2, "case": {"description": "non-ASCII pattern with additionalProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "patternProperties": {"^\u00e1": {}}, "additionalProperties": false}, "tests": [{"description": "matching the pattern is valid", "instance": {"\u00e1rm\u00e1nyos": 2}, "valid": true}, {"description": "not matching the pattern is invalid", "instance": {"\u00e9lm\u00e9ny": 2}, "valid": false}]}}
{"seq": 2, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 3, "case": {"description": "additionalProperties with schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {}, "bar": {}}, "additionalProperties": {"type": "boolean"}}, "tests": [{"description": "no additional properties is valid", "instance": {"foo": 1}, "valid": true}, {"description": "an additional valid property is valid", "instance": {"foo": 1, "bar": 2, "quux": true}, "valid": true}, {"description": "an additional invalid property is invalid", "instance": {"foo": 1, "bar": 2, "quux": 12}, "valid": false}]}}
{"seq": 3, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 3, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "case": {"description": "additionalProperties can exist by itself", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "additionalProperties": {"type": "boolean"}}, "tests": [{"description": "an additional valid property is valid", "instance": {"foo": true}, "valid": true}, {"description": "an additional invalid property is invalid", "instance": {"foo": 1}, "valid": false}]}}
{"seq": 4, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 5, "case": {"description": "additionalProperties are allowed by default", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {}, "bar": {}}}, "tests": [{"description": "additional properties are allowed", "instance": {"foo": 1, "bar": 2, "quux": true}, "valid": true}]}}
{"seq": 5, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 5, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "case": {"description": "additionalProperties does not look in applicators", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"properties": {"foo": {}}}], "additionalProperties": {"type": "boolean"}}, "tests": [{"description": "properties defined in allOf are not examined", "instance": {"foo": 1, "bar": true}, "valid": false}]}}
{"seq": 6, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 6, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 7, "case": {"description": "additionalProperties with null valued instance properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "additionalProperties": {"type": "null"}}, "tests": [{"description": "allows null values", "instance": {"foo": null}, "valid": true}]}}
{"seq": 7, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 8, "case": {"description": "additionalProperties with propertyNames", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "propertyNames": {"maxLength": 5}, "additionalProperties": {"type": "number"}}, "tests": [{"description": "Valid against both keywords", "instance": {"apple": 4}, "valid": true}, {"description": "Valid against propertyNames, but not additionalProperties", "instance": {"fig": 2, "pear": "available"}, "valid": false}]}}
{"seq": 8, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 8, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "case": {"description": "dependentSchemas with additionalProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo2": {}}, "dependentSchemas": {"foo": {}, "foo2": {"properties": {"bar": {}}}}, "additionalProperties": false}, "tests": [{"description": "additionalProperties doesn't consider dependentSchemas", "instance": {"foo": ""}, "valid": false}, {"description": "additionalProperties can't see bar", "instance": {"bar": ""}, "valid": false}, {"description": "additionalProperties can't see bar even when foo2 is present", "instance": {"foo2": "", "bar": ""}, "valid": false}]}}
{"seq": 9, "implementation": "python-jsonschema", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "js-json-schema", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "rust-boon", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "go-jsonschema", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "cpp-jsoncons", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "elixir-jsv", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "php-opis-json-schema", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "js-hyperjump", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "ruby-json_schemer", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "js-ajv", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "cpp-blaze", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "js-schemasafe", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "java-openapiprocessor", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "scala-mjs-validator", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "java-jsonschemafriend", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "rust-jsonschema", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "java-json-schema", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "python-jschon", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 9, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "case": {"description": "allOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"properties": {"bar": {"type": "integer"}}, "required": ["bar"]}, {"properties": {"foo": {"type": "string"}}, "required": ["foo"]}]}, "tests": [{"description": "allOf", "instance": {"foo": "baz", "bar": 2}, "valid": true}, {"description": "mismatch second", "instance": {"foo": "baz"}, "valid": false}, {"description": "mismatch first", "instance": {"bar": 2}, "valid": false}, {"description": "wrong type", "instance": {"foo": "baz", "bar": "quux"}, "valid": false}]}}
{"seq": 10, "implementation": "python-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "php-opis-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "js-hyperjump", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "elixir-jsv", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "go-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "ruby-json_schemer", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "js-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "rust-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "cpp-jsoncons", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "rust-boon", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "js-ajv", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "cpp-blaze", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "js-schemasafe", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "scala-mjs-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "java-openapiprocessor", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "java-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "python-jschon", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 10, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "case": {"description": "allOf with base schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"bar": {"type": "integer"}}, "required": ["bar"], "allOf": [{"properties": {"foo": {"type": "string"}}, "required": ["foo"]}, {"properties": {"baz": {"type": "null"}}, "required": ["baz"]}]}, "tests": [{"description": "valid", "instance": {"foo": "quux", "bar": 2, "baz": null}, "valid": true}, {"description": "mismatch base schema", "instance": {"foo": "quux", "baz": null}, "valid": false}, {"description": "mismatch first allOf", "instance": {"bar": 2, "baz": null}, "valid": false}, {"description": "mismatch second allOf", "instance": {"foo": "quux", "bar": 2}, "valid": false}, {"description": "mismatch both", "instance": {"bar": 2}, "valid": false}]}}
{"seq": 11, "implementation": "python-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "rust-boon", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "js-json-schema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "elixir-jsv", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "rust-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "go-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "js-hyperjump", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "js-schemasafe", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "cpp-jsoncons", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "cpp-blaze", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "scala-mjs-validator", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "js-ajv", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "java-json-schema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "python-jschon", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 11, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 12, "case": {"description": "allOf simple types", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"maximum": 30}, {"minimum": 20}]}, "tests": [{"description": "valid", "instance": 25, "valid": true}, {"description": "mismatch one", "instance": 35, "valid": false}]}}
{"seq": 12, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 12, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "case": {"description": "allOf with boolean schemas, all true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [true, true]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 13, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 13, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 14, "case": {"description": "allOf with boolean schemas, some false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [true, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 14, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "allOf contains false schema", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/AllOfKeywordParser.php(60): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\AllOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 14, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 14, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "case": {"description": "allOf with boolean schemas, all false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [false, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 15, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "allOf contains false schema", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/AllOfKeywordParser.php(60): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\AllOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 15, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 15, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 16, "case": {"description": "allOf with one empty schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{}]}, "tests": [{"description": "any data is valid", "instance": 1, "valid": true}]}}
{"seq": 16, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "case": {"description": "allOf with two empty schemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{}, {}]}, "tests": [{"description": "any data is valid", "instance": 1, "valid": true}]}}
{"seq": 17, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "case": {"description": "allOf with the first empty schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{}, {"type": "number"}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is invalid", "instance": "foo", "valid": false}]}}
{"seq": 18, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 18, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "case": {"description": "allOf with the last empty schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"type": "number"}, {}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is invalid", "instance": "foo", "valid": false}]}}
{"seq": 19, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 19, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "case": {"description": "nested allOf, to check validation semantics", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"allOf": [{"type": "null"}]}]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "anything non-null is invalid", "instance": 123, "valid": false}]}}
{"seq": 20, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 20, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "case": {"description": "allOf combined with anyOf, oneOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"multipleOf": 2}], "anyOf": [{"multipleOf": 3}], "oneOf": [{"multipleOf": 5}]}, "tests": [{"description": "allOf: false, anyOf: false, oneOf: false", "instance": 1, "valid": false}, {"description": "allOf: false, anyOf: false, oneOf: true", "instance": 5, "valid": false}, {"description": "allOf: false, anyOf: true, oneOf: false", "instance": 3, "valid": false}, {"description": "allOf: false, anyOf: true, oneOf: true", "instance": 15, "valid": false}, {"description": "allOf: true, anyOf: false, oneOf: false", "instance": 2, "valid": false}, {"description": "allOf: true, anyOf: false, oneOf: true", "instance": 10, "valid": false}, {"description": "allOf: true, anyOf: true, oneOf: false", "instance": 6, "valid": false}, {"description": "allOf: true, anyOf: true, oneOf: true", "instance": 30, "valid": true}]}}
{"seq": 21, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "js-json-schema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "cpp-jsoncons", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "elixir-jsv", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "cpp-blaze", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "scala-mjs-validator", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "java-json-schema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "python-jschon", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 21, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 22, "case": {"description": "Location-independent identifier", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "#foo", "$defs": {"A": {"$anchor": "foo", "type": "integer"}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "mismatch", "instance": "a", "valid": false}]}}
{"seq": 22, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 22, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "case": {"description": "Location-independent identifier with absolute URI", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/draft2020-12/bar#foo", "$defs": {"A": {"$id": "http://localhost:1234/draft2020-12/bar", "$anchor": "foo", "type": "integer"}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "mismatch", "instance": "a", "valid": false}]}}
{"seq": 23, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 23, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 23, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 23, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "case": {"description": "Location-independent identifier with base URI change in subschema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/root", "$ref": "http://localhost:1234/draft2020-12/nested.json#foo", "$defs": {"A": {"$id": "nested.json", "$defs": {"B": {"$anchor": "foo", "type": "integer"}}}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "mismatch", "instance": "a", "valid": false}]}}
{"seq": 24, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 24, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 24, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 24, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "case": {"description": "same $anchor with different base uri", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/foobar", "$defs": {"A": {"$id": "child1", "allOf": [{"$id": "child2", "$anchor": "my_anchor", "type": "number"}, {"$anchor": "my_anchor", "type": "string"}]}}, "$ref": "child1#my_anchor"}, "tests": [{"description": "$ref resolves to /$defs/A/allOf/1", "instance": "a", "valid": true}, {"description": "$ref does not resolve to /$defs/A/allOf/0", "instance": 1, "valid": false}]}}
{"seq": 25, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "js-json-schema", "expected": [true, false], "context": {"traceback": "Error: Duplicate schema URI \"http://localhost:1234/draft2020-12/child2\".\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:87:15)\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:77:21)\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:129:21)\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:135:17)\n    at new Validator (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:12:23)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:70:25)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Duplicate schema URI \"http://localhost:1234/draft2020-12/child2\"."}, "message": "", "caught": true, "errored": true}
{"seq": 25, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 25, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 25, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 25, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 26, "case": {"description": "anyOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "anyOf": [{"type": "integer"}, {"minimum": 2}]}, "tests": [{"description": "first anyOf valid", "instance": 1, "valid": true}, {"description": "second anyOf valid", "instance": 2.5, "valid": true}, {"description": "both anyOf valid", "instance": 3, "valid": true}, {"description": "neither anyOf valid", "instance": 1.5, "valid": false}]}}
{"seq": 26, "implementation": "python-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "go-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "php-opis-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "ruby-json_schemer", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "cpp-jsoncons", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "elixir-jsv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "js-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "rust-boon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "cpp-blaze", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "js-hyperjump", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "js-ajv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "rust-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "js-schemasafe", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "java-openapiprocessor", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "scala-mjs-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "python-jschon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "java-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 26, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 27, "case": {"description": "anyOf with base schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string", "anyOf": [{"maxLength": 2}, {"minLength": 4}]}, "tests": [{"description": "mismatch base schema", "instance": 3, "valid": false}, {"description": "one anyOf valid", "instance": "foobar", "valid": true}, {"description": "both anyOf invalid", "instance": "foo", "valid": false}]}}
{"seq": 27, "implementation": "python-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-hyperjump", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "php-opis-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "ruby-json_schemer", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "java-jsonschemafriend", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "elixir-jsv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "rust-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "rust-boon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "cpp-jsoncons", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "cpp-blaze", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-schemasafe", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-ajv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "go-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "java-openapiprocessor", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "scala-mjs-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "java-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "python-jschon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 28, "case": {"description": "anyOf with boolean schemas, all true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "anyOf": [true, true]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 28, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 28, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "case": {"description": "anyOf with boolean schemas, some true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "anyOf": [true, false]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 29, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 29, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 30, "case": {"description": "anyOf with boolean schemas, all false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "anyOf": [false, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 30, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 30, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 31, "case": {"description": "anyOf complex types", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "anyOf": [{"properties": {"bar": {"type": "integer"}}, "required": ["bar"]}, {"properties": {"foo": {"type": "string"}}, "required": ["foo"]}]}, "tests": [{"description": "first anyOf valid (complex)", "instance": {"bar": 2}, "valid": true}, {"description": "second anyOf valid (complex)", "instance": {"foo": "baz"}, "valid": true}, {"description": "both anyOf valid (complex)", "instance": {"foo": "baz", "bar": 2}, "valid": true}, {"description": "neither anyOf valid (complex)", "instance": {"foo": 2, "bar": "quux"}, "valid": false}]}}
{"seq": 31, "implementation": "python-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "go-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-hyperjump", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "cpp-jsoncons", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "elixir-jsv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "php-opis-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "ruby-json_schemer", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "rust-boon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "cpp-blaze", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-schemasafe", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "scala-mjs-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-ajv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "rust-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "java-openapiprocessor", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "java-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "python-jschon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 32, "case": {"description": "anyOf with one empty schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "anyOf": [{"type": "number"}, {}]}, "tests": [{"description": "string is valid", "instance": "foo", "valid": true}, {"description": "number is valid", "instance": 123, "valid": true}]}}
{"seq": 32, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 32, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 33, "case": {"description": "nested anyOf, to check validation semantics", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "anyOf": [{"anyOf": [{"type": "null"}]}]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "anything non-null is invalid", "instance": 123, "valid": false}]}}
{"seq": 33, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 33, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 34, "case": {"description": "boolean schema 'true'", "schema": true, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is valid", "instance": "foo", "valid": true}, {"description": "boolean true is valid", "instance": true, "valid": true}, {"description": "boolean false is valid", "instance": false, "valid": true}, {"description": "null is valid", "instance": null, "valid": true}, {"description": "object is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "empty object is valid", "instance": {}, "valid": true}, {"description": "array is valid", "instance": ["foo"], "valid": true}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 34, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 34, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 35, "case": {"description": "boolean schema 'false'", "schema": false, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "boolean true is invalid", "instance": true, "valid": false}, {"description": "boolean false is invalid", "instance": false, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}, {"description": "object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 35, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "cpp-blaze", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "js-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "cpp-jsoncons", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "elixir-jsv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 35, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "scala-mjs-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "java-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 35, "implementation": "python-jschon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 36, "case": {"description": "const validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": 2}, "tests": [{"description": "same value is valid", "instance": 2, "valid": true}, {"description": "another value is invalid", "instance": 5, "valid": false}, {"description": "another type is invalid", "instance": "a", "valid": false}]}}
{"seq": 36, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "case": {"description": "const with object", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": {"foo": "bar", "baz": "bax"}}, "tests": [{"description": "same object is valid", "instance": {"foo": "bar", "baz": "bax"}, "valid": true}, {"description": "same object with different property order is valid", "instance": {"baz": "bax", "foo": "bar"}, "valid": true}, {"description": "another object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "another type is invalid", "instance": [1, 2], "valid": false}]}}
{"seq": 37, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 37, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "case": {"description": "const with array", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": [{"foo": "bar"}]}, "tests": [{"description": "same array is valid", "instance": [{"foo": "bar"}], "valid": true}, {"description": "another array item is invalid", "instance": [2], "valid": false}, {"description": "array with additional items is invalid", "instance": [1, 2, 3], "valid": false}]}}
{"seq": 38, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 39, "case": {"description": "const with null", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": null}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "not null is invalid", "instance": 0, "valid": false}]}}
{"seq": 39, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 40, "case": {"description": "const with false does not match 0", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": false}, "tests": [{"description": "false is valid", "instance": false, "valid": true}, {"description": "integer zero is invalid", "instance": 0, "valid": false}, {"description": "float zero is invalid", "instance": 0.0, "valid": false}]}}
{"seq": 40, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "case": {"description": "const with true does not match 1", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": true}, "tests": [{"description": "true is valid", "instance": true, "valid": true}, {"description": "integer one is invalid", "instance": 1, "valid": false}, {"description": "float one is invalid", "instance": 1.0, "valid": false}]}}
{"seq": 41, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "case": {"description": "const with [false] does not match [0]", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": [false]}, "tests": [{"description": "[false] is valid", "instance": [false], "valid": true}, {"description": "[0] is invalid", "instance": [0], "valid": false}, {"description": "[0.0] is invalid", "instance": [0.0], "valid": false}]}}
{"seq": 42, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "case": {"description": "const with [true] does not match [1]", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": [true]}, "tests": [{"description": "[true] is valid", "instance": [true], "valid": true}, {"description": "[1] is invalid", "instance": [1], "valid": false}, {"description": "[1.0] is invalid", "instance": [1.0], "valid": false}]}}
{"seq": 43, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "case": {"description": "const with {\"a\": false} does not match {\"a\": 0}", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": {"a": false}}, "tests": [{"description": "{\"a\": false} is valid", "instance": {"a": false}, "valid": true}, {"description": "{\"a\": 0} is invalid", "instance": {"a": 0}, "valid": false}, {"description": "{\"a\": 0.0} is invalid", "instance": {"a": 0.0}, "valid": false}]}}
{"seq": 44, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "case": {"description": "const with {\"a\": true} does not match {\"a\": 1}", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": {"a": true}}, "tests": [{"description": "{\"a\": true} is valid", "instance": {"a": true}, "valid": true}, {"description": "{\"a\": 1} is invalid", "instance": {"a": 1}, "valid": false}, {"description": "{\"a\": 1.0} is invalid", "instance": {"a": 1.0}, "valid": false}]}}
{"seq": 45, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "case": {"description": "const with 0 does not match other zero-like types", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": 0}, "tests": [{"description": "false is invalid", "instance": false, "valid": false}, {"description": "integer zero is valid", "instance": 0, "valid": true}, {"description": "float zero is valid", "instance": 0.0, "valid": true}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}, {"description": "empty string is invalid", "instance": "", "valid": false}]}}
{"seq": 46, "implementation": "python-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "php-opis-json-schema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "rust-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "ruby-json_schemer", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-ajv", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-schemasafe", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "go-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-json-schema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "rust-boon", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "cpp-jsoncons", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "elixir-jsv", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "cpp-blaze", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-hyperjump", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "scala-mjs-validator", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "java-jsonschemafriend", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "java-openapiprocessor", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "java-json-schema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "python-jschon", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 47, "case": {"description": "const with 1 does not match true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": 1}, "tests": [{"description": "true is invalid", "instance": true, "valid": false}, {"description": "integer one is valid", "instance": 1, "valid": true}, {"description": "float one is valid", "instance": 1.0, "valid": true}]}}
{"seq": 47, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "scala-mjs-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "cpp-blaze", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "js-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "cpp-jsoncons", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "elixir-jsv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "java-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "python-jschon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 48, "case": {"description": "const with -2.0 matches integer and float types", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": -2.0}, "tests": [{"description": "integer -2 is valid", "instance": -2, "valid": true}, {"description": "integer 2 is invalid", "instance": 2, "valid": false}, {"description": "float -2.0 is valid", "instance": -2.0, "valid": true}, {"description": "float 2.0 is invalid", "instance": 2.0, "valid": false}, {"description": "float -2.00001 is invalid", "instance": -2.00001, "valid": false}]}}
{"seq": 48, "implementation": "python-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "php-opis-json-schema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "rust-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-schemasafe", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "rust-boon", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "go-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "ruby-json_schemer", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-ajv", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "cpp-jsoncons", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "cpp-blaze", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-json-schema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-hyperjump", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "elixir-jsv", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "scala-mjs-validator", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "java-openapiprocessor", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "java-json-schema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "python-jschon", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "case": {"description": "float and integers are equal up to 64-bit representation limits", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": 9007199254740992}, "tests": [{"description": "integer is valid", "instance": 9007199254740992, "valid": true}, {"description": "integer minus one is invalid", "instance": 9007199254740991, "valid": false}, {"description": "float is valid", "instance": 9007199254740992.0, "valid": true}, {"description": "float minus one is invalid", "instance": 9007199254740991.0, "valid": false}]}}
{"seq": 49, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "cpp-jsoncons", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "cpp-blaze", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "js-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "elixir-jsv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "scala-mjs-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "java-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "python-jschon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 49, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 50, "case": {"description": "nul characters in strings", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "const": "hello\u0000there"}, "tests": [{"description": "match string with nul", "instance": "hello\u0000there", "valid": true}, {"description": "do not match string lacking nul", "instance": "hellothere", "valid": false}]}}
{"seq": 50, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 50, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 51, "case": {"description": "contains keyword validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"minimum": 5}}, "tests": [{"description": "array with item matching schema (5) is valid", "instance": [3, 4, 5], "valid": true}, {"description": "array with item matching schema (6) is valid", "instance": [3, 4, 6], "valid": true}, {"description": "array with two items matching schema (5, 6) is valid", "instance": [3, 4, 5, 6], "valid": true}, {"description": "array without items matching schema is invalid", "instance": [2, 3, 4], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}, {"description": "not array is valid", "instance": {}, "valid": true}]}}
{"seq": 51, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "js-json-schema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "cpp-blaze", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "cpp-jsoncons", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "rust-boon", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "js-ajv", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "elixir-jsv", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "scala-mjs-validator", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "python-jschon", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "java-json-schema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 51, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 52, "case": {"description": "contains keyword with const keyword", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 5}}, "tests": [{"description": "array with item 5 is valid", "instance": [3, 4, 5], "valid": true}, {"description": "array with two items 5 is valid", "instance": [3, 4, 5, 5], "valid": true}, {"description": "array without item 5 is invalid", "instance": [1, 2, 3, 4], "valid": false}]}}
{"seq": 52, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 52, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 53, "case": {"description": "contains keyword with boolean schema true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": true}, "tests": [{"description": "any non-empty array is valid", "instance": ["foo"], "valid": true}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 53, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 53, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 54, "case": {"description": "contains keyword with boolean schema false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": false}, "tests": [{"description": "any non-empty array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}, {"description": "non-arrays are valid", "instance": "contains does not apply to strings", "valid": true}]}}
{"seq": 54, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 54, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 55, "case": {"description": "items + contains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "items": {"multipleOf": 2}, "contains": {"multipleOf": 3}}, "tests": [{"description": "matches items, does not match contains", "instance": [2, 4, 8], "valid": false}, {"description": "does not match items, matches contains", "instance": [3, 6, 9], "valid": false}, {"description": "matches both items and contains", "instance": [6, 12], "valid": true}, {"description": "matches neither items nor contains", "instance": [1, 5], "valid": false}]}}
{"seq": 55, "implementation": "python-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-schemasafe", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "ruby-json_schemer", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-ajv", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "go-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "cpp-blaze", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "rust-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-json-schema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "rust-boon", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "cpp-jsoncons", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "php-opis-json-schema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-hyperjump", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "elixir-jsv", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "java-openapiprocessor", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "java-jsonschemafriend", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "scala-mjs-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "java-json-schema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "python-jschon", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 56, "case": {"description": "contains with false if subschema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"if": false, "else": true}}, "tests": [{"description": "any non-empty array is valid", "instance": ["foo"], "valid": true}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 56, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 57, "case": {"description": "contains with null instance elements", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"type": "null"}}, "tests": [{"description": "allows null items", "instance": [null], "valid": true}]}}
{"seq": 57, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 57, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 58, "case": {"description": "validation of string-encoded content based on media type", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contentMediaType": "application/json"}, "tests": [{"description": "a valid JSON document", "instance": "{\"foo\": \"bar\"}", "valid": true}, {"description": "an invalid JSON document; validates true", "instance": "{:}", "valid": true}, {"description": "ignores non-strings", "instance": 100, "valid": true}]}}
{"seq": 58, "implementation": "python-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "php-opis-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "js-schemasafe", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "ruby-json_schemer", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "rust-boon", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "cpp-jsoncons", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "elixir-jsv", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "scala-mjs-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "js-hyperjump", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "js-ajv", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "js-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "rust-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "go-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "cpp-blaze", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "java-jsonschemafriend", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "java-openapiprocessor", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "java-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "python-jschon", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "case": {"description": "validation of binary string-encoding", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contentEncoding": "base64"}, "tests": [{"description": "a valid base64 string", "instance": "eyJmb28iOiAiYmFyIn0K", "valid": true}, {"description": "an invalid base64 string (% is not a valid character); validates true", "instance": "eyJmb28iOi%iYmFyIn0K", "valid": true}, {"description": "ignores non-strings", "instance": 100, "valid": true}]}}
{"seq": 59, "implementation": "python-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "go-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "rust-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "js-schemasafe", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "java-jsonschemafriend", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "ruby-json_schemer", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "js-ajv", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "js-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "js-hyperjump", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "cpp-blaze", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "cpp-jsoncons", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "rust-boon", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "elixir-jsv", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "php-opis-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "java-openapiprocessor", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "scala-mjs-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "java-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "python-jschon", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "case": {"description": "validation of binary-encoded media type documents", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contentMediaType": "application/json", "contentEncoding": "base64"}, "tests": [{"description": "a valid base64-encoded JSON document", "instance": "eyJmb28iOiAiYmFyIn0K", "valid": true}, {"description": "a validly-encoded invalid JSON document; validates true", "instance": "ezp9Cg==", "valid": true}, {"description": "an invalid base64 string that is valid JSON; validates true", "instance": "{}", "valid": true}, {"description": "ignores non-strings", "instance": 100, "valid": true}]}}
{"seq": 60, "implementation": "python-jsonschema", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "rust-jsonschema", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "js-json-schema", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "cpp-jsoncons", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "js-ajv", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "elixir-jsv", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "php-opis-json-schema", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "cpp-blaze", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "go-jsonschema", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "ruby-json_schemer", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "rust-boon", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "js-schemasafe", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "scala-mjs-validator", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "js-hyperjump", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "java-openapiprocessor", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "java-json-schema", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "python-jschon", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "case": {"description": "validation of binary-encoded media type documents with schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contentMediaType": "application/json", "contentEncoding": "base64", "contentSchema": {"type": "object", "required": ["foo"], "properties": {"foo": {"type": "string"}}}}, "tests": [{"description": "a valid base64-encoded JSON document", "instance": "eyJmb28iOiAiYmFyIn0K", "valid": true}, {"description": "another valid base64-encoded JSON document", "instance": "eyJib28iOiAyMCwgImZvbyI6ICJiYXoifQ==", "valid": true}, {"description": "an invalid base64-encoded JSON document; validates true", "instance": "eyJib28iOiAyMH0=", "valid": true}, {"description": "an empty object as a base64-encoded JSON document; validates true", "instance": "e30=", "valid": true}, {"description": "an empty array as a base64-encoded JSON document", "instance": "W10=", "valid": true}, {"description": "a validly-encoded invalid JSON document; validates true", "instance": "ezp9Cg==", "valid": true}, {"description": "an invalid base64 string that is valid JSON; validates true", "instance": "{}", "valid": true}, {"description": "ignores non-strings", "instance": 100, "valid": true}]}}
{"seq": 61, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 61, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 62, "case": {"description": "invalid type for default", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"type": "integer", "default": []}}}, "tests": [{"description": "valid when property is specified", "instance": {"foo": 13}, "valid": true}, {"description": "still valid when the invalid default is used", "instance": {}, "valid": true}]}}
{"seq": 62, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "case": {"description": "invalid string value for default", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"bar": {"type": "string", "minLength": 4, "default": "bad"}}}, "tests": [{"description": "valid when property is specified", "instance": {"bar": "good"}, "valid": true}, {"description": "still valid when the invalid default is used", "instance": {}, "valid": true}]}}
{"seq": 63, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 64, "case": {"description": "the default keyword does not do anything if the property is missing", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"alpha": {"type": "number", "maximum": 3, "default": 5}}}, "tests": [{"description": "an explicit property value is checked against maximum (passing)", "instance": {"alpha": 1}, "valid": true}, {"description": "an explicit property value is checked against maximum (failing)", "instance": {"alpha": 5}, "valid": false}, {"description": "missing properties are not filled in with the default", "instance": {}, "valid": true}]}}
{"seq": 64, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "elixir-jsv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "cpp-jsoncons", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "cpp-blaze", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "scala-mjs-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "java-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "python-jschon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 65, "case": {"description": "validate definition against metaschema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "https://json-schema.org/draft/2020-12/schema"}, "tests": [{"description": "valid definition schema", "instance": {"$defs": {"foo": {"type": "integer"}}}, "valid": true}, {"description": "invalid definition schema", "instance": {"$defs": {"foo": {"type": 1}}}, "valid": false}]}}
{"seq": 65, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 65, "implementation": "js-json-schema", "expected": [true, false], "results": [{"context": {"traceback": "Error: Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:74:19)\n    at Validator.validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:15:16)\n    at file:///usr/app/bowtie_json_schema.js:77:36\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:75:38)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker"}, "errored": true, "skipped": false}, {"context": {"traceback": "Error: Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:74:19)\n    at Validator.validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:15:16)\n    at file:///usr/app/bowtie_json_schema.js:77:36\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:75:38)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker"}, "errored": true, "skipped": false}]}
{"seq": 65, "implementation": "js-schemasafe", "expected": [true, false], "context": {"traceback": "Error: failed to resolve $ref: \"https://json-schema.org/draft/2020-12/schema\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1194:11\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at writeMain (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1190:7)\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at visit (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1297:13)\n    at compileSchema (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1342:27)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:50\n    at Array.map (<anonymous>)\n    at compile (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:26)", "message": "failed to resolve $ref: \"https://json-schema.org/draft/2020-12/schema\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 65, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "Unresolved reference: https://json-schema.org/draft/2020-12/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(165): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(148): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '2020-12')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "Unresolved reference: https://json-schema.org/draft/2020-12/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(165): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(148): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '2020-12')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}]}
{"seq": 65, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 65, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "context": {"message": "Either.right.get on Left", "traceback": "scala.util.Either$RightProjection.get(Either.scala:696)\nBowtieRcCirceJsonValidator.run(Harness.scala:74)\nBowtieRcCirceJsonValidator.operate(Harness.scala:25)\nBowtieRcCirceJsonValidator$.main(Harness.scala:150)\nBowtieRcCirceJsonValidator.main(Harness.scala)"}, "message": "", "caught": true, "errored": true}
{"seq": 65, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 66, "case": {"description": "single dependency", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "dependentRequired": {"bar": ["foo"]}}, "tests": [{"description": "neither", "instance": {}, "valid": true}, {"description": "nondependant", "instance": {"foo": 1}, "valid": true}, {"description": "with dependency", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "missing dependency", "instance": {"bar": 2}, "valid": false}, {"description": "ignores arrays", "instance": ["bar"], "valid": true}, {"description": "ignores strings", "instance": "foobar", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 66, "implementation": "python-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-ajv", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-schemasafe", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "cpp-jsoncons", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "go-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "rust-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-hyperjump", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "cpp-blaze", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "rust-boon", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "elixir-jsv", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-json-schema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "scala-mjs-validator", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "java-json-schema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "python-jschon", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "case": {"description": "empty dependents", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "dependentRequired": {"bar": []}}, "tests": [{"description": "empty object", "instance": {}, "valid": true}, {"description": "object with one property", "instance": {"bar": 2}, "valid": true}, {"description": "non-object is valid", "instance": 1, "valid": true}]}}
{"seq": 67, "implementation": "python-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "scala-mjs-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-hyperjump", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "rust-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "rust-boon", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "cpp-jsoncons", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "elixir-jsv", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "go-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-schemasafe", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-ajv", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "java-jsonschemafriend", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "php-opis-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "ruby-json_schemer", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "cpp-blaze", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "java-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "java-openapiprocessor", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "python-jschon", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 68, "case": {"description": "multiple dependents required", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "dependentRequired": {"quux": ["foo", "bar"]}}, "tests": [{"description": "neither", "instance": {}, "valid": true}, {"description": "nondependants", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "with dependencies", "instance": {"foo": 1, "bar": 2, "quux": 3}, "valid": true}, {"description": "missing dependency", "instance": {"foo": 1, "quux": 2}, "valid": false}, {"description": "missing other dependency", "instance": {"bar": 1, "quux": 2}, "valid": false}, {"description": "missing both dependencies", "instance": {"quux": 1}, "valid": false}]}}
{"seq": 68, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-ajv", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "cpp-jsoncons", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "rust-boon", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "scala-mjs-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "cpp-blaze", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "elixir-jsv", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "java-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "python-jschon", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "case": {"description": "dependencies with escaped characters", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "dependentRequired": {"foo\nbar": ["foo\rbar"], "foo\"bar": ["foo'bar"]}}, "tests": [{"description": "CRLF", "instance": {"foo\nbar": 1, "foo\rbar": 2}, "valid": true}, {"description": "quoted quotes", "instance": {"foo'bar": 1, "foo\"bar": 2}, "valid": true}, {"description": "CRLF missing dependent", "instance": {"foo\nbar": 1, "foo": 2}, "valid": false}, {"description": "quoted quotes missing dependent", "instance": {"foo\"bar": 2}, "valid": false}]}}
{"seq": 69, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 70, "case": {"description": "single dependency", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "dependentSchemas": {"bar": {"properties": {"foo": {"type": "integer"}, "bar": {"type": "integer"}}}}}, "tests": [{"description": "valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "no dependency", "instance": {"foo": "quux"}, "valid": true}, {"description": "wrong type", "instance": {"foo": "quux", "bar": 2}, "valid": false}, {"description": "wrong type other", "instance": {"foo": 2, "bar": "quux"}, "valid": false}, {"description": "wrong type both", "instance": {"foo": "quux", "bar": "quux"}, "valid": false}, {"description": "ignores arrays", "instance": ["bar"], "valid": true}, {"description": "ignores strings", "instance": "foobar", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 70, "implementation": "python-jsonschema", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "rust-boon", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "go-jsonschema", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "js-schemasafe", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "js-ajv", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "js-hyperjump", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "js-json-schema", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "cpp-blaze", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "elixir-jsv", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "java-json-schema", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "python-jschon", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 70, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 71, "case": {"description": "boolean subschemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "dependentSchemas": {"foo": true, "bar": false}}, "tests": [{"description": "object with property having schema true is valid", "instance": {"foo": 1}, "valid": true}, {"description": "object with property having schema false is invalid", "instance": {"bar": 2}, "valid": false}, {"description": "object with both properties is invalid", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 71, "implementation": "python-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "cpp-jsoncons", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "rust-boon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "ruby-json_schemer", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 71, "implementation": "js-hyperjump", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "rust-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "js-ajv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "go-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "php-opis-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "js-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "cpp-blaze", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "elixir-jsv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "java-openapiprocessor", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "js-schemasafe", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "scala-mjs-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "java-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "python-jschon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 72, "case": {"description": "dependencies with escaped characters", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "dependentSchemas": {"foo\tbar": {"minProperties": 4}, "foo'bar": {"required": ["foo\"bar"]}}}, "tests": [{"description": "quoted tab", "instance": {"foo\tbar": 1, "a": 2, "b": 3, "c": 4}, "valid": true}, {"description": "quoted quote", "instance": {"foo'bar": {"foo\"bar": 1}}, "valid": false}, {"description": "quoted tab invalid under dependent schema", "instance": {"foo\tbar": 1, "a": 2}, "valid": false}, {"description": "quoted quote invalid under dependent schema", "instance": {"foo'bar": 1}, "valid": false}]}}
{"seq": 72, "implementation": "python-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "rust-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "go-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "ruby-json_schemer", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "cpp-blaze", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "php-opis-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "js-hyperjump", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "js-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "rust-boon", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "js-ajv", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "js-schemasafe", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "cpp-jsoncons", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "elixir-jsv", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "scala-mjs-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "java-openapiprocessor", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "java-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "python-jschon", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 73, "case": {"description": "dependent subschema incompatible with root", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {}}, "dependentSchemas": {"foo": {"properties": {"bar": {}}, "additionalProperties": false}}}, "tests": [{"description": "matches root", "instance": {"foo": 1}, "valid": false}, {"description": "matches dependency", "instance": {"bar": 1}, "valid": true}, {"description": "matches both", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "no dependency", "instance": {"baz": 1}, "valid": true}]}}
{"seq": 73, "implementation": "python-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "js-hyperjump", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "cpp-jsoncons", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "go-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "rust-boon", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "js-json-schema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "php-opis-json-schema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "elixir-jsv", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "js-schemasafe", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "js-ajv", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "ruby-json_schemer", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "scala-mjs-validator", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "java-openapiprocessor", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "cpp-blaze", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "java-json-schema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "rust-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "java-jsonschemafriend", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "python-jschon", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 74, "case": {"description": "A $dynamicRef to a $dynamicAnchor in the same schema resource behaves like a normal $ref to an $anchor", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamicRef-dynamicAnchor-same-schema/root", "type": "array", "items": {"$dynamicRef": "#items"}, "$defs": {"foo": {"$dynamicAnchor": "items", "type": "string"}}}, "tests": [{"description": "An array of strings is valid", "instance": ["foo", "bar"], "valid": true}, {"description": "An array containing non-strings is invalid", "instance": ["foo", 42], "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 74, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 74, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 74, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 74, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 74, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "case": {"description": "A $dynamicRef to an $anchor in the same schema resource behaves like a normal $ref to an $anchor", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamicRef-anchor-same-schema/root", "type": "array", "items": {"$dynamicRef": "#items"}, "$defs": {"foo": {"$anchor": "items", "type": "string"}}}, "tests": [{"description": "An array of strings is valid", "instance": ["foo", "bar"], "valid": true}, {"description": "An array containing non-strings is invalid", "instance": ["foo", 42], "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 75, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 75, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 75, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 75, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 75, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "case": {"description": "A $ref to a $dynamicAnchor in the same schema resource behaves like a normal $ref to an $anchor", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/ref-dynamicAnchor-same-schema/root", "type": "array", "items": {"$ref": "#items"}, "$defs": {"foo": {"$dynamicAnchor": "items", "type": "string"}}}, "tests": [{"description": "An array of strings is valid", "instance": ["foo", "bar"], "valid": true}, {"description": "An array containing non-strings is invalid", "instance": ["foo", 42], "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 76, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "Unresolved reference: https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#items", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/IterableDataValidationTrait.php(55): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/IterableDataValidationTrait.php(102): Opis\\JsonSchema\\Keywords\\ItemsKeyword->iterateAndValidate(Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), Object(Opis\\JsonSchema\\ValidationContext), Object(Generator), Object(ArrayObject))\n#6 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/ItemsKeyword.php(141): Opis\\JsonSchema\\Keywords\\ItemsKeyword->validateIterableData(Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), Object(Opis\\JsonSchema\\ValidationContext), Object(Generator), 'items', 'All array items...', Array, Object(ArrayObject))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\ItemsKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#8 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(85): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#10 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(165): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#11 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(148): Opis\\JsonSchema\\Validator->schemaValidation(Array, Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#12 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '2020-12')\n#13 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#14 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "Unresolved reference: https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#items", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/IterableDataValidationTrait.php(55): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/IterableDataValidationTrait.php(102): Opis\\JsonSchema\\Keywords\\ItemsKeyword->iterateAndValidate(Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), Object(Opis\\JsonSchema\\ValidationContext), Object(Generator), Object(ArrayObject))\n#6 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/ItemsKeyword.php(141): Opis\\JsonSchema\\Keywords\\ItemsKeyword->validateIterableData(Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), Object(Opis\\JsonSchema\\ValidationContext), Object(Generator), 'items', 'All array items...', Array, Object(ArrayObject))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\ItemsKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#8 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(85): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#10 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(165): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#11 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(148): Opis\\JsonSchema\\Validator->schemaValidation(Array, Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#12 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '2020-12')\n#13 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#14 {main}"}, "errored": true, "skipped": false}]}
{"seq": 76, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 76, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "js-json-schema", "expected": [true, false], "results": [{"context": {"traceback": "Error: Unresolved $ref \"#items\".  Absolute URI \"https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#items\".\nKnown schemas:\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/items\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/$defs/foo\n- http://localhost:1234/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/nested-absolute-ref-to-string.json\n- http://localhost:1234/the-nested-id.json\n- http://localhost:1234/nested-absolute-ref-to-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/ref-and-defs.json\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/baseUriChange/folderInteger.json\n- http://localhost:1234/tree.json\n- http://localhost:1234/tree.json#/properties/data\n- http://localhost:1234/tree.json#/properties/children\n- http://localhost:1234/tree.json#/properties/children/items\n- http://localhost:1234/nested/string.json\n- http://localhost:1234/urn-ref-string.json\n- http://localhost:1234/urn-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/prefixItems.json\n- http://localhost:1234/draft2020-12/prefixItems.json#/prefixItems/0\n- http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json\n- http://localhost:1234/ref-and-defs.json\n- http://localhost:1234/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/extendible-dynamic-ref.json\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/draft2020-12/subSchemas.json\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/integer\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/nested/string.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/1\n- http://localhost:1234/nested/foo-ref-string.json\n- http://localhost:1234/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/draft2020-12/format-assertion-true.json\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/1\n- http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/draft2020-12/detached-ref.json\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/detached-ref.json#detached\n- http://localhost:1234/integer.json\n- http://localhost:1234/draft2020-12/tree.json\n- http://localhost:1234/draft2020-12/tree.json#/properties/data\n- http://localhost:1234/draft2020-12/tree.json#/properties/children\n- http://localhost:1234/draft2020-12/tree.json#/properties/children/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/different-id-ref-string.json\n- http://localhost:1234/different-id-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/1\n- http://localhost:1234/draft2020-12/format-assertion-false.json\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/1\n- http://localhost:1234/draft2020-12/integer.json\n- http://localhost:1234/draft2020-12/name-defs.json\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#foo\n- http://localhost:1234/name-defs.json\n- http://localhost:1234/name-defs.json#/$defs/orNull\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/locationIndependentIdentifier.json\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/locationIndependentIdentifier.json#foo\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:74:19)\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:556:36)\n    at Validator.validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:15:16)\n    at file:///usr/app/bowtie_json_schema.js:77:36\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:75:38)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Unresolved $ref \"#items\".  Absolute URI \"https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#items\".\nKnown schemas:\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/items\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/$defs/foo\n- http://localhost:1234/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/nested-absolute-ref-to-string.json\n- http://localhost:1234/the-nested-id.json\n- http://localhost:1234/nested-absolute-ref-to-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/ref-and-defs.json\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/baseUriChange/folderInteger.json\n- http://localhost:1234/tree.json\n- http://localhost:1234/tree.json#/properties/data\n- http://localhost:1234/tree.json#/properties/children\n- http://localhost:1234/tree.json#/properties/children/items\n- http://localhost:1234/nested/string.json\n- http://localhost:1234/urn-ref-string.json\n- http://localhost:1234/urn-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/prefixItems.json\n- http://localhost:1234/draft2020-12/prefixItems.json#/prefixItems/0\n- http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json\n- http://localhost:1234/ref-and-defs.json\n- http://localhost:1234/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/extendible-dynamic-ref.json\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/draft2020-12/subSchemas.json\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/integer\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/nested/string.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/1\n- http://localhost:1234/nested/foo-ref-string.json\n- http://localhost:1234/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/draft2020-12/format-assertion-true.json\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/1\n- http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/draft2020-12/detached-ref.json\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/detached-ref.json#detached\n- http://localhost:1234/integer.json\n- http://localhost:1234/draft2020-12/tree.json\n- http://localhost:1234/draft2020-12/tree.json#/properties/data\n- http://localhost:1234/draft2020-12/tree.json#/properties/children\n- http://localhost:1234/draft2020-12/tree.json#/properties/children/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/different-id-ref-string.json\n- http://localhost:1234/different-id-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/1\n- http://localhost:1234/draft2020-12/format-assertion-false.json\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/1\n- http://localhost:1234/draft2020-12/integer.json\n- http://localhost:1234/draft2020-12/name-defs.json\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#foo\n- http://localhost:1234/name-defs.json\n- http://localhost:1234/name-defs.json#/$defs/orNull\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/locationIndependentIdentifier.json\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/locationIndependentIdentifier.json#foo"}, "errored": true, "skipped": false}, {"context": {"traceback": "Error: Unresolved $ref \"#items\".  Absolute URI \"https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#items\".\nKnown schemas:\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/items\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/$defs/foo\n- http://localhost:1234/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/nested-absolute-ref-to-string.json\n- http://localhost:1234/the-nested-id.json\n- http://localhost:1234/nested-absolute-ref-to-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/ref-and-defs.json\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/baseUriChange/folderInteger.json\n- http://localhost:1234/tree.json\n- http://localhost:1234/tree.json#/properties/data\n- http://localhost:1234/tree.json#/properties/children\n- http://localhost:1234/tree.json#/properties/children/items\n- http://localhost:1234/nested/string.json\n- http://localhost:1234/urn-ref-string.json\n- http://localhost:1234/urn-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/prefixItems.json\n- http://localhost:1234/draft2020-12/prefixItems.json#/prefixItems/0\n- http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json\n- http://localhost:1234/ref-and-defs.json\n- http://localhost:1234/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/extendible-dynamic-ref.json\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/draft2020-12/subSchemas.json\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/integer\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/nested/string.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/1\n- http://localhost:1234/nested/foo-ref-string.json\n- http://localhost:1234/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/draft2020-12/format-assertion-true.json\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/1\n- http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/draft2020-12/detached-ref.json\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/detached-ref.json#detached\n- http://localhost:1234/integer.json\n- http://localhost:1234/draft2020-12/tree.json\n- http://localhost:1234/draft2020-12/tree.json#/properties/data\n- http://localhost:1234/draft2020-12/tree.json#/properties/children\n- http://localhost:1234/draft2020-12/tree.json#/properties/children/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/different-id-ref-string.json\n- http://localhost:1234/different-id-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/1\n- http://localhost:1234/draft2020-12/format-assertion-false.json\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/1\n- http://localhost:1234/draft2020-12/integer.json\n- http://localhost:1234/draft2020-12/name-defs.json\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#foo\n- http://localhost:1234/name-defs.json\n- http://localhost:1234/name-defs.json#/$defs/orNull\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/locationIndependentIdentifier.json\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/locationIndependentIdentifier.json#foo\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:74:19)\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:556:36)\n    at Validator.validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:15:16)\n    at file:///usr/app/bowtie_json_schema.js:77:36\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:75:38)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Unresolved $ref \"#items\".  Absolute URI \"https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#items\".\nKnown schemas:\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/items\n- https://test.json-schema.org/ref-dynamicAnchor-same-schema/root#/$defs/foo\n- http://localhost:1234/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/nested-absolute-ref-to-string.json\n- http://localhost:1234/the-nested-id.json\n- http://localhost:1234/nested-absolute-ref-to-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/ref-and-defs.json\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/draft2020-12/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/baseUriChange/folderInteger.json\n- http://localhost:1234/tree.json\n- http://localhost:1234/tree.json#/properties/data\n- http://localhost:1234/tree.json#/properties/children\n- http://localhost:1234/tree.json#/properties/children/items\n- http://localhost:1234/nested/string.json\n- http://localhost:1234/urn-ref-string.json\n- http://localhost:1234/urn-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/prefixItems.json\n- http://localhost:1234/draft2020-12/prefixItems.json#/prefixItems/0\n- http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json\n- http://localhost:1234/ref-and-defs.json\n- http://localhost:1234/ref-and-defs.json#/$defs/inner\n- http://localhost:1234/ref-and-defs.json#/$defs/inner/properties/bar\n- http://localhost:1234/extendible-dynamic-ref.json\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/draft2020-12/subSchemas.json\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/integer\n- http://localhost:1234/draft2020-12/subSchemas.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/nested/string.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-no-validation.json#/allOf/1\n- http://localhost:1234/nested/foo-ref-string.json\n- http://localhost:1234/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/draft2020-12/format-assertion-true.json\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-true.json#/allOf/1\n- http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json\n- http://localhost:1234/draft2020-12/detached-ref.json\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/foo\n- http://localhost:1234/draft2020-12/detached-ref.json#/$defs/detached\n- http://localhost:1234/draft2020-12/detached-ref.json#detached\n- http://localhost:1234/integer.json\n- http://localhost:1234/draft2020-12/tree.json\n- http://localhost:1234/draft2020-12/tree.json#/properties/data\n- http://localhost:1234/draft2020-12/tree.json#/properties/children\n- http://localhost:1234/draft2020-12/tree.json#/properties/children/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/properties/elements/items\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/additionalProperties\n- http://localhost:1234/draft2020-12/extendible-dynamic-ref.json#/$defs/elements\n- http://localhost:1234/different-id-ref-string.json\n- http://localhost:1234/different-id-ref-string.json#/$defs/bar\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/0\n- http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json#/allOf/1\n- http://localhost:1234/draft2020-12/format-assertion-false.json\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/0\n- http://localhost:1234/draft2020-12/format-assertion-false.json#/allOf/1\n- http://localhost:1234/draft2020-12/integer.json\n- http://localhost:1234/draft2020-12/name-defs.json\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/draft2020-12/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#foo\n- http://localhost:1234/name-defs.json\n- http://localhost:1234/name-defs.json#/$defs/orNull\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/0\n- http://localhost:1234/name-defs.json#/$defs/orNull/anyOf/1\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json\n- http://localhost:1234/draft2020-12/nested/foo-ref-string.json#/properties/foo\n- http://localhost:1234/locationIndependentIdentifier.json\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/refToInteger\n- http://localhost:1234/locationIndependentIdentifier.json#/$defs/A\n- http://localhost:1234/locationIndependentIdentifier.json#foo"}, "errored": true, "skipped": false}]}
{"seq": 76, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 76, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "case": {"description": "A $dynamicRef resolves to the first $dynamicAnchor still in scope that is encountered when the schema is evaluated", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/typical-dynamic-resolution/root", "$ref": "list", "$defs": {"foo": {"$dynamicAnchor": "items", "type": "string"}, "list": {"$id": "list", "type": "array", "items": {"$dynamicRef": "#items"}, "$defs": {"items": {"$comment": "This is only needed to satisfy the bookending requirement", "$dynamicAnchor": "items"}}}}}, "tests": [{"description": "An array of strings is valid", "instance": ["foo", "bar"], "valid": true}, {"description": "An array containing non-strings is invalid", "instance": ["foo", 42], "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 77, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 77, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 77, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 77, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 77, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 78, "case": {"description": "A $dynamicRef without anchor in fragment behaves identical to $ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamicRef-without-anchor/root", "$ref": "list", "$defs": {"foo": {"$dynamicAnchor": "items", "type": "string"}, "list": {"$id": "list", "type": "array", "items": {"$dynamicRef": "#/$defs/items"}, "$defs": {"items": {"$comment": "This is only needed to satisfy the bookending requirement", "$dynamicAnchor": "items", "type": "number"}}}}}, "tests": [{"description": "An array of strings is invalid", "instance": ["foo", "bar"], "valid": false}, {"description": "An array of numbers is valid", "instance": [24, 42], "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 78, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 78, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 78, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 79, "case": {"description": "A $dynamicRef with intermediate scopes that don't include a matching $dynamicAnchor does not affect dynamic scope resolution", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamic-resolution-with-intermediate-scopes/root", "$ref": "intermediate-scope", "$defs": {"foo": {"$dynamicAnchor": "items", "type": "string"}, "intermediate-scope": {"$id": "intermediate-scope", "$ref": "list"}, "list": {"$id": "list", "type": "array", "items": {"$dynamicRef": "#items"}, "$defs": {"items": {"$comment": "This is only needed to satisfy the bookending requirement", "$dynamicAnchor": "items"}}}}}, "tests": [{"description": "An array of strings is valid", "instance": ["foo", "bar"], "valid": true}, {"description": "An array containing non-strings is invalid", "instance": ["foo", 42], "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 79, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 79, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 79, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 80, "case": {"description": "An $anchor with the same name as a $dynamicAnchor is not used for dynamic scope resolution", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamic-resolution-ignores-anchors/root", "$ref": "list", "$defs": {"foo": {"$anchor": "items", "type": "string"}, "list": {"$id": "list", "type": "array", "items": {"$dynamicRef": "#items"}, "$defs": {"items": {"$comment": "This is only needed to satisfy the bookending requirement", "$dynamicAnchor": "items"}}}}}, "tests": [{"description": "Any array is valid", "instance": ["foo", 42], "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 80, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": false}]}
{"seq": 80, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": false}]}
{"seq": 80, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "js-ajv", "expected": [true], "results": [{"valid": false}]}
{"seq": 80, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "dotnet-jsonschema-net", "expected": [true], "context": {"message": "System.Collections.Generic.KeyNotFoundException: The given key 'https://test.json-schema.org/dynamic-resolution-ignores-anchors/root' was not present in the dictionary.\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(Uri uri) in /source/Program.cs:line 98\n   at Json.Schema.SchemaRegistry.Get(Uri baseUri, String anchor, Boolean isDynamic, Boolean allowLegacy)\n   at Json.Schema.SchemaRegistry.Get(DynamicScope scope, Uri baseUri, String anchor, Boolean requireLocalAnchor)\n   at Json.Schema.DynamicRefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.ItemsKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.RefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.Evaluate(JsonNode root, EvaluationOptions options)\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111", "traceback": "   at System.Environment.get_StackTrace()\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111"}, "message": "", "caught": true, "errored": true}
{"seq": 80, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 80, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "case": {"description": "A $dynamicRef without a matching $dynamicAnchor in the same schema resource behaves like a normal $ref to $anchor", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamic-resolution-without-bookend/root", "$ref": "list", "$defs": {"foo": {"$dynamicAnchor": "items", "type": "string"}, "list": {"$id": "list", "type": "array", "items": {"$dynamicRef": "#items"}, "$defs": {"items": {"$comment": "This is only needed to give the reference somewhere to resolve to when it behaves like $ref", "$anchor": "items"}}}}}, "tests": [{"description": "Any array is valid", "instance": ["foo", 42], "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 81, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": false}]}
{"seq": 81, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "js-ajv", "expected": [true], "results": [{"valid": false}]}
{"seq": 81, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": false}]}
{"seq": 81, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 81, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "case": {"description": "A $dynamicRef with a non-matching $dynamicAnchor in the same schema resource behaves like a normal $ref to $anchor", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/unmatched-dynamic-anchor/root", "$ref": "list", "$defs": {"foo": {"$dynamicAnchor": "items", "type": "string"}, "list": {"$id": "list", "type": "array", "items": {"$dynamicRef": "#items"}, "$defs": {"items": {"$comment": "This is only needed to give the reference somewhere to resolve to when it behaves like $ref", "$anchor": "items", "$dynamicAnchor": "foo"}}}}}, "tests": [{"description": "Any array is valid", "instance": ["foo", 42], "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 82, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": false}]}
{"seq": 82, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": false}]}
{"seq": 82, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "js-ajv", "expected": [true], "results": [{"valid": false}]}
{"seq": 82, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 82, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 83, "case": {"description": "A $dynamicRef that initially resolves to a schema with a matching $dynamicAnchor resolves to the first $dynamicAnchor in the dynamic scope", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/relative-dynamic-reference/root", "$dynamicAnchor": "meta", "type": "object", "properties": {"foo": {"const": "pass"}}, "$ref": "extended", "$defs": {"extended": {"$id": "extended", "$dynamicAnchor": "meta", "type": "object", "properties": {"bar": {"$ref": "bar"}}}, "bar": {"$id": "bar", "type": "object", "properties": {"baz": {"$dynamicRef": "extended#meta"}}}}}, "tests": [{"description": "The recursive part is valid against the root", "instance": {"foo": "pass", "bar": {"baz": {"foo": "pass"}}}, "valid": true}, {"description": "The recursive part is not valid against the root", "instance": {"foo": "pass", "bar": {"baz": {"foo": "fail"}}}, "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 83, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: \"$dynamicRef\" only supports hash fragment reference\n    at dynamicRef (/usr/app/node_modules/ajv/dist/vocabularies/dynamic/dynamicRef.js:15:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/dynamic/dynamicRef.js:10:20)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "\"$dynamicRef\" only supports hash fragment reference"}, "message": "", "caught": true, "errored": true}
{"seq": 83, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 83, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 84, "case": {"description": "A $dynamicRef that initially resolves to a schema without a matching $dynamicAnchor behaves like a normal $ref to $anchor", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/relative-dynamic-reference-without-bookend/root", "$dynamicAnchor": "meta", "type": "object", "properties": {"foo": {"const": "pass"}}, "$ref": "extended", "$defs": {"extended": {"$id": "extended", "$anchor": "meta", "type": "object", "properties": {"bar": {"$ref": "bar"}}}, "bar": {"$id": "bar", "type": "object", "properties": {"baz": {"$dynamicRef": "extended#meta"}}}}}, "tests": [{"description": "The recursive part doesn't need to validate against the root", "instance": {"foo": "pass", "bar": {"baz": {"foo": "fail"}}}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 84, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": false}]}
{"seq": 84, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "js-ajv", "expected": [true], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at validateFunctionCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:19:9)\n    at Ajv2020.compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:80:45)\n    at Ajv2020.inlineOrCompile (/usr/app/node_modules/ajv/dist/compile/index.js:148:47)\n    at Ajv2020.resolveRef (/usr/app/node_modules/ajv/dist/compile/index.js:142:46)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:19:47)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 84, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 84, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 85, "case": {"description": "multiple dynamic paths to the $dynamicRef keyword", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamic-ref-with-multiple-paths/main", "if": {"properties": {"kindOfList": {"const": "numbers"}}, "required": ["kindOfList"]}, "then": {"$ref": "numberList"}, "else": {"$ref": "stringList"}, "$defs": {"genericList": {"$id": "genericList", "properties": {"list": {"items": {"$dynamicRef": "#itemType"}}}, "$defs": {"defaultItemType": {"$comment": "Only needed to satisfy bookending requirement", "$dynamicAnchor": "itemType"}}}, "numberList": {"$id": "numberList", "$defs": {"itemType": {"$dynamicAnchor": "itemType", "type": "number"}}, "$ref": "genericList"}, "stringList": {"$id": "stringList", "$defs": {"itemType": {"$dynamicAnchor": "itemType", "type": "string"}}, "$ref": "genericList"}}}, "tests": [{"description": "number list with number values", "instance": {"kindOfList": "numbers", "list": [1.1]}, "valid": true}, {"description": "number list with string values", "instance": {"kindOfList": "numbers", "list": ["foo"]}, "valid": false}, {"description": "string list with number values", "instance": {"kindOfList": "strings", "list": [1.1]}, "valid": false}, {"description": "string list with string values", "instance": {"kindOfList": "strings", "list": ["foo"]}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 85, "implementation": "python-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true], "context": {"message": "System.Collections.Generic.KeyNotFoundException: The given key 'https://test.json-schema.org/dynamic-ref-with-multiple-paths/main' was not present in the dictionary.\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(Uri uri) in /source/Program.cs:line 98\n   at Json.Schema.SchemaRegistry.Get(Uri baseUri, String anchor, Boolean isDynamic, Boolean allowLegacy)\n   at Json.Schema.SchemaRegistry.Get(DynamicScope scope, Uri baseUri, String anchor, Boolean requireLocalAnchor)\n   at Json.Schema.DynamicRefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.ItemsKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.PropertiesKeyword.<>c__DisplayClass9_0.<GetConstraint>b__0(KeyValuePair`2 x)\n   at System.Linq.Enumerable.IEnumerableSelectIterator`2.ToArray()\n   at Json.Schema.PropertiesKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.RefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.RefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.ThenKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.Evaluate(JsonNode root, EvaluationOptions options)\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111", "traceback": "   at System.Environment.get_StackTrace()\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111"}, "message": "", "caught": true, "errored": true}
{"seq": 85, "implementation": "rust-boon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "js-hyperjump", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "cpp-jsoncons", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "js-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "php-opis-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "go-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "js-ajv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "java-openapiprocessor", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "elixir-jsv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "java-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "scala-mjs-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 85, "implementation": "ruby-json_schemer", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "js-schemasafe", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "cpp-blaze", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "rust-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "python-jschon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 85, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "case": {"description": "after leaving a dynamic scope, it is not used by a $dynamicRef", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamic-ref-leaving-dynamic-scope/main", "if": {"$id": "first_scope", "$defs": {"thingy": {"$comment": "this is first_scope#thingy", "$dynamicAnchor": "thingy", "type": "number"}}}, "then": {"$id": "second_scope", "$ref": "start", "$defs": {"thingy": {"$comment": "this is second_scope#thingy, the final destination of the $dynamicRef", "$dynamicAnchor": "thingy", "type": "null"}}}, "$defs": {"start": {"$comment": "this is the landing spot from $ref", "$id": "start", "$dynamicRef": "inner_scope#thingy"}, "thingy": {"$comment": "this is the first stop for the $dynamicRef", "$id": "inner_scope", "$dynamicAnchor": "thingy", "type": "string"}}}, "tests": [{"description": "string matches /$defs/thingy, but the $dynamicRef does not stop here", "instance": "a string", "valid": false}, {"description": "first_scope is not in dynamic scope for the $dynamicRef", "instance": 42, "valid": false}, {"description": "/then/$defs/thingy is the final stop for the $dynamicRef", "instance": null, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 86, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "context": {"message": "System.Collections.Generic.KeyNotFoundException: The given key 'https://test.json-schema.org/dynamic-ref-leaving-dynamic-scope/main' was not present in the dictionary.\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(Uri uri) in /source/Program.cs:line 98\n   at Json.Schema.SchemaRegistry.Get(Uri baseUri, String anchor, Boolean isDynamic, Boolean allowLegacy)\n   at Json.Schema.SchemaRegistry.Get(DynamicScope scope, Uri baseUri, String anchor, Boolean requireLocalAnchor)\n   at Json.Schema.DynamicRefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.RefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.ThenKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.Evaluate(JsonNode root, EvaluationOptions options)\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111", "traceback": "   at System.Environment.get_StackTrace()\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111"}, "message": "", "caught": true, "errored": true}
{"seq": 86, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 86, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 86, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "js-ajv", "expected": [false, false, true], "context": {"traceback": "Error: \"$dynamicRef\" only supports hash fragment reference\n    at dynamicRef (/usr/app/node_modules/ajv/dist/vocabularies/dynamic/dynamicRef.js:15:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/dynamic/dynamicRef.js:10:20)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "\"$dynamicRef\" only supports hash fragment reference"}, "message": "", "caught": true, "errored": true}
{"seq": 86, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 86, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 86, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "case": {"description": "strict-tree schema, guards against misspelled properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/strict-tree.json", "$dynamicAnchor": "node", "$ref": "tree.json", "unevaluatedProperties": false}, "tests": [{"description": "instance with misspelled field", "instance": {"children": [{"daat": 1}]}, "valid": false}, {"description": "instance with correct field", "instance": {"children": [{"data": 1}]}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 87, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 87, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": false}]}
{"seq": 87, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 88, "case": {"description": "tests for implementation dynamic anchor and reference link", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/strict-extendible.json", "$ref": "extendible-dynamic-ref.json", "$defs": {"elements": {"$dynamicAnchor": "elements", "properties": {"a": true}, "required": ["a"], "additionalProperties": false}}}, "tests": [{"description": "incorrect parent schema", "instance": {"a": true}, "valid": false}, {"description": "incorrect extended schema", "instance": {"elements": [{"b": 1}]}, "valid": false}, {"description": "correct extended schema", "instance": {"elements": [{"a": 1}]}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 88, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 88, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 88, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 88, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 88, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "case": {"description": "$ref and $dynamicAnchor are independent of order - $defs first", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/strict-extendible-allof-defs-first.json", "allOf": [{"$ref": "extendible-dynamic-ref.json"}, {"$defs": {"elements": {"$dynamicAnchor": "elements", "properties": {"a": true}, "required": ["a"], "additionalProperties": false}}}]}, "tests": [{"description": "incorrect parent schema", "instance": {"a": true}, "valid": false}, {"description": "incorrect extended schema", "instance": {"elements": [{"b": 1}]}, "valid": false}, {"description": "correct extended schema", "instance": {"elements": [{"a": 1}]}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 89, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 89, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 89, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "case": {"description": "$ref and $dynamicAnchor are independent of order - $ref first", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/strict-extendible-allof-ref-first.json", "allOf": [{"$defs": {"elements": {"$dynamicAnchor": "elements", "properties": {"a": true}, "required": ["a"], "additionalProperties": false}}}, {"$ref": "extendible-dynamic-ref.json"}]}, "tests": [{"description": "incorrect parent schema", "instance": {"a": true}, "valid": false}, {"description": "incorrect extended schema", "instance": {"elements": [{"b": 1}]}, "valid": false}, {"description": "correct extended schema", "instance": {"elements": [{"a": 1}]}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 90, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 90, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 90, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 90, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 91, "case": {"description": "$ref to $dynamicRef finds detached $dynamicAnchor", "schema": {"$ref": "http://localhost:1234/draft2020-12/detached-dynamicref.json#/$defs/foo"}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 91, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "context": {"message": "System.Collections.Generic.KeyNotFoundException: The given key 'https://json-everything.net/8d324af001' was not present in the dictionary.\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(Uri uri) in /source/Program.cs:line 98\n   at Json.Schema.SchemaRegistry.Get(Uri baseUri, String anchor, Boolean isDynamic, Boolean allowLegacy)\n   at Json.Schema.SchemaRegistry.Get(DynamicScope scope, Uri baseUri, String anchor, Boolean requireLocalAnchor)\n   at Json.Schema.DynamicRefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.RefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.Evaluate(JsonNode root, EvaluationOptions options)\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111", "traceback": "   at System.Environment.get_StackTrace()\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111"}, "message": "", "caught": true, "errored": true}
{"seq": 91, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 91, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "js-ajv", "expected": [true, false], "results": [{"context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:367)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)", "message": "Maximum call stack size exceeded"}, "errored": true, "skipped": false}, {"context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:367)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate148 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)", "message": "Maximum call stack size exceeded"}, "errored": true, "skipped": false}]}
{"seq": 91, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 91, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "case": {"description": "$dynamicRef points to a boolean schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"true": true, "false": false}, "properties": {"true": {"$dynamicRef": "#/$defs/true"}, "false": {"$dynamicRef": "#/$defs/false"}}}, "tests": [{"description": "follow $dynamicRef to a true schema", "instance": {"true": 1}, "valid": true}, {"description": "follow $dynamicRef to a false schema", "instance": {"false": 1}, "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 92, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 92, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 92, "implementation": "python-jschon", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_jschon.py\", line 96, in cmd_run\n    schema = jschon.JSONSchema(\n        case[\"schema\"],\n        catalog=catalog,\n        metaschema_uri=self._metaschema_uri,\n    )\n  File \"/usr/local/lib/python3.13/site-packages/jschon/jsonschema.py\", line 122, in __init__\n    self._resolve_references()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/usr/local/lib/python3.13/site-packages/jschon/jsonschema.py\", line 166, in _resolve_references\n    item._resolve_references()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/usr/local/lib/python3.13/site-packages/jschon/jsonschema.py\", line 156, in _resolve_references\n    kw.resolve()\n    ~~~~~~~~~~^^\n  File \"/usr/local/lib/python3.13/site-packages/jschon/vocabulary/core.py\", line 142, in resolve\n    if (dynamic_anchor := self.refschema.get(\"$dynamicAnchor\")) and dynamic_anchor.data == self.fragment:\n                          ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\n  File \"<frozen _collections_abc>\", line 811, in get\n  File \"/usr/local/lib/python3.13/site-packages/jschon/json.py\", line 234, in __getitem__\n    return self.data[index]\n           ~~~~~~~~~^^^^^^^\nTypeError: 'bool' object is not subscriptable\n"}, "message": "", "caught": true, "errored": true}
{"seq": 92, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "case": {"description": "$dynamicRef skips over intermediate resources - direct reference", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://test.json-schema.org/dynamic-ref-skips-intermediate-resource/main", "type": "object", "properties": {"bar-item": {"$ref": "item"}}, "$defs": {"bar": {"$id": "bar", "type": "array", "items": {"$ref": "item"}, "$defs": {"item": {"$id": "item", "type": "object", "properties": {"content": {"$dynamicRef": "#content"}}, "$defs": {"defaultContent": {"$dynamicAnchor": "content", "type": "integer"}}}, "content": {"$dynamicAnchor": "content", "type": "string"}}}}}, "tests": [{"description": "integer property passes", "instance": {"bar-item": {"content": 42}}, "valid": true}, {"description": "string property fails", "instance": {"bar-item": {"content": "value"}}, "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 93, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "context": {"message": "System.Collections.Generic.KeyNotFoundException: The given key 'https://test.json-schema.org/dynamic-ref-skips-intermediate-resource/main' was not present in the dictionary.\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(Uri uri) in /source/Program.cs:line 98\n   at Json.Schema.SchemaRegistry.Get(Uri baseUri, String anchor, Boolean isDynamic, Boolean allowLegacy)\n   at Json.Schema.SchemaRegistry.Get(DynamicScope scope, Uri baseUri, String anchor, Boolean requireLocalAnchor)\n   at Json.Schema.DynamicRefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.PropertiesKeyword.<>c__DisplayClass9_0.<GetConstraint>b__0(KeyValuePair`2 x)\n   at System.Linq.Enumerable.IEnumerableSelectIterator`2.ToArray()\n   at Json.Schema.PropertiesKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.RefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.PropertiesKeyword.<>c__DisplayClass9_0.<GetConstraint>b__0(KeyValuePair`2 x)\n   at System.Linq.Enumerable.IEnumerableSelectIterator`2.ToArray()\n   at Json.Schema.PropertiesKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.Evaluate(JsonNode root, EvaluationOptions options)\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111", "traceback": "   at System.Environment.get_StackTrace()\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111"}, "message": "", "caught": true, "errored": true}
{"seq": 93, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "js-json-schema", "expected": [true, false], "context": {"traceback": "Error: Duplicate schema URI \"https://test.json-schema.org/dynamic-ref-skips-intermediate-resource/item\".\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:87:15)\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:77:21)\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:135:17)\n    at dereference (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/dereference.js:135:17)\n    at new Validator (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:12:23)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:70:25)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Duplicate schema URI \"https://test.json-schema.org/dynamic-ref-skips-intermediate-resource/item\"."}, "message": "", "caught": true, "errored": true}
{"seq": 93, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 93, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 93, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 93, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 93, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "case": {"description": "simple enum validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [1, 2, 3]}, "tests": [{"description": "one of the enum is valid", "instance": 1, "valid": true}, {"description": "something else is invalid", "instance": 4, "valid": false}]}}
{"seq": 94, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 94, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 95, "case": {"description": "heterogeneous enum validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [6, "foo", [], true, {"foo": 12}]}, "tests": [{"description": "one of the enum is valid", "instance": [], "valid": true}, {"description": "something else is invalid", "instance": null, "valid": false}, {"description": "objects are deep compared", "instance": {"foo": false}, "valid": false}, {"description": "valid object matches", "instance": {"foo": 12}, "valid": true}, {"description": "extra properties in object is invalid", "instance": {"foo": 12, "boo": 42}, "valid": false}]}}
{"seq": 95, "implementation": "python-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "js-json-schema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "rust-boon", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "js-ajv", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "go-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "cpp-jsoncons", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "scala-mjs-validator", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "js-hyperjump", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "js-schemasafe", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "rust-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "cpp-blaze", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "elixir-jsv", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "java-json-schema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "python-jschon", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 95, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 96, "case": {"description": "heterogeneous enum-with-null validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [6, null]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "number is valid", "instance": 6, "valid": true}, {"description": "something else is invalid", "instance": "test", "valid": false}]}}
{"seq": 96, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 96, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 97, "case": {"description": "enums in properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"enum": ["foo"]}, "bar": {"enum": ["bar"]}}, "required": ["bar"]}, "tests": [{"description": "both properties are valid", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "wrong foo value", "instance": {"foo": "foot", "bar": "bar"}, "valid": false}, {"description": "wrong bar value", "instance": {"foo": "foo", "bar": "bart"}, "valid": false}, {"description": "missing optional property is valid", "instance": {"bar": "bar"}, "valid": true}, {"description": "missing required property is invalid", "instance": {"foo": "foo"}, "valid": false}, {"description": "missing all properties is invalid", "instance": {}, "valid": false}]}}
{"seq": 97, "implementation": "python-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "js-hyperjump", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "cpp-jsoncons", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "rust-boon", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "js-json-schema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "scala-mjs-validator", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "js-ajv", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "go-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "rust-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "elixir-jsv", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "js-schemasafe", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "cpp-blaze", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "java-json-schema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "python-jschon", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 97, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 98, "case": {"description": "enum with escaped characters", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": ["foo\nbar", "foo\rbar"]}, "tests": [{"description": "member 1 is valid", "instance": "foo\nbar", "valid": true}, {"description": "member 2 is valid", "instance": "foo\rbar", "valid": true}, {"description": "another string is invalid", "instance": "abc", "valid": false}]}}
{"seq": 98, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 99, "case": {"description": "enum with false does not match 0", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [false]}, "tests": [{"description": "false is valid", "instance": false, "valid": true}, {"description": "integer zero is invalid", "instance": 0, "valid": false}, {"description": "float zero is invalid", "instance": 0.0, "valid": false}]}}
{"seq": 99, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 99, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "case": {"description": "enum with [false] does not match [0]", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [[false]]}, "tests": [{"description": "[false] is valid", "instance": [false], "valid": true}, {"description": "[0] is invalid", "instance": [0], "valid": false}, {"description": "[0.0] is invalid", "instance": [0.0], "valid": false}]}}
{"seq": 100, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 100, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "case": {"description": "enum with true does not match 1", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [true]}, "tests": [{"description": "true is valid", "instance": true, "valid": true}, {"description": "integer one is invalid", "instance": 1, "valid": false}, {"description": "float one is invalid", "instance": 1.0, "valid": false}]}}
{"seq": 101, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 101, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "case": {"description": "enum with [true] does not match [1]", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [[true]]}, "tests": [{"description": "[true] is valid", "instance": [true], "valid": true}, {"description": "[1] is invalid", "instance": [1], "valid": false}, {"description": "[1.0] is invalid", "instance": [1.0], "valid": false}]}}
{"seq": 102, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 102, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 103, "case": {"description": "enum with 0 does not match false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [0]}, "tests": [{"description": "false is invalid", "instance": false, "valid": false}, {"description": "integer zero is valid", "instance": 0, "valid": true}, {"description": "float zero is valid", "instance": 0.0, "valid": true}]}}
{"seq": 103, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "cpp-blaze", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "cpp-jsoncons", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "js-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "elixir-jsv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "scala-mjs-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "java-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "python-jschon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "case": {"description": "enum with [0] does not match [false]", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [[0]]}, "tests": [{"description": "[false] is invalid", "instance": [false], "valid": false}, {"description": "[0] is valid", "instance": [0], "valid": true}, {"description": "[0.0] is valid", "instance": [0.0], "valid": true}]}}
{"seq": 104, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "cpp-blaze", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "js-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "elixir-jsv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "cpp-jsoncons", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "scala-mjs-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 104, "implementation": "java-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "python-jschon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 104, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "case": {"description": "enum with 1 does not match true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [1]}, "tests": [{"description": "true is invalid", "instance": true, "valid": false}, {"description": "integer one is valid", "instance": 1, "valid": true}, {"description": "float one is valid", "instance": 1.0, "valid": true}]}}
{"seq": 105, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "scala-mjs-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "elixir-jsv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "js-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "cpp-jsoncons", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "cpp-blaze", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "java-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "python-jschon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 105, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "case": {"description": "enum with [1] does not match [true]", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": [[1]]}, "tests": [{"description": "[true] is invalid", "instance": [true], "valid": false}, {"description": "[1] is valid", "instance": [1], "valid": true}, {"description": "[1.0] is valid", "instance": [1.0], "valid": true}]}}
{"seq": 106, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "cpp-jsoncons", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "scala-mjs-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "cpp-blaze", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "js-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "elixir-jsv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "java-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 106, "implementation": "python-jschon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 106, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 107, "case": {"description": "nul characters in strings", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "enum": ["hello\u0000there"]}, "tests": [{"description": "match string with nul", "instance": "hello\u0000there", "valid": true}, {"description": "do not match string lacking nul", "instance": "hellothere", "valid": false}]}}
{"seq": 107, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 107, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 108, "case": {"description": "exclusiveMaximum validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "exclusiveMaximum": 3.0}, "tests": [{"description": "below the exclusiveMaximum is valid", "instance": 2.2, "valid": true}, {"description": "boundary point is invalid", "instance": 3.0, "valid": false}, {"description": "above the exclusiveMaximum is invalid", "instance": 3.5, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 108, "implementation": "python-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-hyperjump", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "elixir-jsv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "ruby-json_schemer", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "scala-mjs-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "rust-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-schemasafe", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "go-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-ajv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "php-opis-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "cpp-jsoncons", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "java-openapiprocessor", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "rust-boon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "cpp-blaze", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "java-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "python-jschon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "case": {"description": "exclusiveMinimum validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "exclusiveMinimum": 1.1}, "tests": [{"description": "above the exclusiveMinimum is valid", "instance": 1.2, "valid": true}, {"description": "boundary point is invalid", "instance": 1.1, "valid": false}, {"description": "below the exclusiveMinimum is invalid", "instance": 0.6, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 109, "implementation": "python-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "js-hyperjump", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "php-opis-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "cpp-jsoncons", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "go-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "js-ajv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "rust-boon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "js-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "rust-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "js-schemasafe", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "scala-mjs-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "ruby-json_schemer", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "elixir-jsv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "cpp-blaze", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "java-openapiprocessor", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "java-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "python-jschon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 109, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 110, "case": {"description": "email format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "email"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid email string is only an annotation by default", "instance": "2962", "valid": true}]}}
{"seq": 110, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 110, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"email\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"email\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 110, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 110, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 110, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "case": {"description": "idn-email format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "idn-email"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid idn-email string is only an annotation by default", "instance": "2962", "valid": true}]}}
{"seq": 111, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: Unrecognized format used: \"idn-email\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at enforce (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:244:44)\n    at checkFormat (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:599:11)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:614:18\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:612:9\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at prevWrap (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:467:13)\n    at checkStrings (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:596:7)\n    at Object.block (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:56:7)", "message": "Unrecognized format used: \"idn-email\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 111, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"idn-email\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"idn-email\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 111, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 111, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "case": {"description": "regex format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "regex"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid regex string is only an annotation by default", "instance": "^(abc]", "valid": true}]}}
{"seq": 112, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"regex\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"regex\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 112, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 112, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 112, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "case": {"description": "ipv4 format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "ipv4"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid ipv4 string is only an annotation by default", "instance": "127.0.0.0.1", "valid": true}]}}
{"seq": 113, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"ipv4\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"ipv4\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 113, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "case": {"description": "ipv6 format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "ipv6"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid ipv6 string is only an annotation by default", "instance": "12345::", "valid": true}]}}
{"seq": 114, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"ipv6\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"ipv6\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 114, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 114, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "case": {"description": "idn-hostname format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "idn-hostname"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid idn-hostname string is only an annotation by default", "instance": "\u302e\uc2e4\ub840.\ud14c\uc2a4\ud2b8", "valid": true}]}}
{"seq": 115, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: Unrecognized format used: \"idn-hostname\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at enforce (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:244:44)\n    at checkFormat (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:599:11)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:614:18\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:612:9\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at prevWrap (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:467:13)\n    at checkStrings (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:596:7)\n    at Object.block (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:56:7)", "message": "Unrecognized format used: \"idn-hostname\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 115, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"idn-hostname\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"idn-hostname\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 115, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 115, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "case": {"description": "hostname format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "hostname"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid hostname string is only an annotation by default", "instance": "-a-host-name-that-starts-with--", "valid": true}]}}
{"seq": 116, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"hostname\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"hostname\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 116, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "case": {"description": "date format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "date"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid date string is only an annotation by default", "instance": "06/19/1963", "valid": true}]}}
{"seq": 117, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 117, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 117, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"date\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"date\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 117, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 117, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "case": {"description": "date-time format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "date-time"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid date-time string is only an annotation by default", "instance": "1990-02-31T15:59:60.123-08:00", "valid": true}]}}
{"seq": 118, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"date-time\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"date-time\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 118, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 118, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "case": {"description": "time format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "time"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid time string is only an annotation by default", "instance": "08:30:06 PST", "valid": true}]}}
{"seq": 119, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"time\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"time\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 119, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "case": {"description": "json-pointer format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "json-pointer"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid json-pointer string is only an annotation by default", "instance": "/foo/bar~", "valid": true}]}}
{"seq": 120, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"json-pointer\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"json-pointer\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 120, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 120, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "case": {"description": "relative-json-pointer format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "relative-json-pointer"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid relative-json-pointer string is only an annotation by default", "instance": "/foo/bar", "valid": true}]}}
{"seq": 121, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"relative-json-pointer\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"relative-json-pointer\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 121, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 121, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 121, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "case": {"description": "iri format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "iri"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid iri string is only an annotation by default", "instance": "http://2001:0db8:85a3:0000:0000:8a2e:0370:7334", "valid": true}]}}
{"seq": 122, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"iri\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"iri\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 122, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: Unrecognized format used: \"iri\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at enforce (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:244:44)\n    at checkFormat (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:599:11)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:614:18\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:612:9\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at prevWrap (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:467:13)\n    at checkStrings (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:596:7)\n    at Object.block (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:56:7)", "message": "Unrecognized format used: \"iri\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 122, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "case": {"description": "iri-reference format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "iri-reference"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid iri-reference string is only an annotation by default", "instance": "\\\\WINDOWS\\fil\u00eb\u00df\u00e5r\u00e9", "valid": true}]}}
{"seq": 123, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: Unrecognized format used: \"iri-reference\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at enforce (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:244:44)\n    at checkFormat (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:599:11)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:614:18\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:612:9\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at prevWrap (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:467:13)\n    at checkStrings (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:596:7)\n    at Object.block (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:56:7)", "message": "Unrecognized format used: \"iri-reference\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 123, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"iri-reference\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"iri-reference\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 123, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 123, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "case": {"description": "uri format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "uri"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid uri string is only an annotation by default", "instance": "//foo.bar/?baz=qux#quux", "valid": true}]}}
{"seq": 124, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"uri\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"uri\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 124, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 124, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 124, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 124, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "case": {"description": "uri-reference format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "uri-reference"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid uri-reference string is only an annotation by default", "instance": "\\\\WINDOWS\\fileshare", "valid": true}]}}
{"seq": 125, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"uri-reference\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"uri-reference\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 125, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 125, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 125, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "case": {"description": "uri-template format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "uri-template"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid uri-template string is only an annotation by default", "instance": "http://example.com/dictionary/{term:1}/{term", "valid": true}]}}
{"seq": 126, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"uri-template\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"uri-template\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 126, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "case": {"description": "uuid format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "uuid"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid uuid string is only an annotation by default", "instance": "2eb8aa08-aa98-11ea-b4aa-73b441d1638", "valid": true}]}}
{"seq": 127, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"uuid\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"uuid\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 127, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "case": {"description": "duration format", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "format": "duration"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}, {"description": "invalid duration string is only an annotation by default", "instance": "PT1D", "valid": true}]}}
{"seq": 128, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 128, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"duration\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"duration\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 128, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 128, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 128, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 129, "case": {"description": "ignore if without then or else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": {"const": 0}}, "tests": [{"description": "valid when valid against lone if", "instance": 0, "valid": true}, {"description": "valid when invalid against lone if", "instance": "hello", "valid": true}]}}
{"seq": 129, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"if\" without \"then\" and \"else\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/if.js:17:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"if\" without \"then\" and \"else\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 129, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 129, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "case": {"description": "ignore then without if", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "then": {"const": 0}}, "tests": [{"description": "valid when valid against lone then", "instance": 0, "valid": true}, {"description": "valid when invalid against lone then", "instance": "hello", "valid": true}]}}
{"seq": 130, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"then\" without \"if\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/thenElse.js:9:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"then\" without \"if\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 130, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "case": {"description": "ignore else without if", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "else": {"const": 0}}, "tests": [{"description": "valid when valid against lone else", "instance": 0, "valid": true}, {"description": "valid when invalid against lone else", "instance": "hello", "valid": true}]}}
{"seq": 131, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"else\" without \"if\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/thenElse.js:9:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"else\" without \"if\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 131, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 132, "case": {"description": "if and then without else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": {"exclusiveMaximum": 0}, "then": {"minimum": -10}}, "tests": [{"description": "valid through then", "instance": -1, "valid": true}, {"description": "invalid through then", "instance": -100, "valid": false}, {"description": "valid when if test fails", "instance": 3, "valid": true}]}}
{"seq": 132, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "cpp-jsoncons", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "cpp-blaze", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "elixir-jsv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "js-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "scala-mjs-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "java-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "python-jschon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 132, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 133, "case": {"description": "if and else without then", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": {"exclusiveMaximum": 0}, "else": {"multipleOf": 2}}, "tests": [{"description": "valid when if test passes", "instance": -1, "valid": true}, {"description": "valid through else", "instance": 4, "valid": true}, {"description": "invalid through else", "instance": 3, "valid": false}]}}
{"seq": 133, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 134, "case": {"description": "validate against correct branch, then vs else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": {"exclusiveMaximum": 0}, "then": {"minimum": -10}, "else": {"multipleOf": 2}}, "tests": [{"description": "valid through then", "instance": -1, "valid": true}, {"description": "invalid through then", "instance": -100, "valid": false}, {"description": "valid through else", "instance": 4, "valid": true}, {"description": "invalid through else", "instance": 3, "valid": false}]}}
{"seq": 134, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "scala-mjs-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "java-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "elixir-jsv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "js-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "cpp-jsoncons", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "cpp-blaze", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "python-jschon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 134, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 135, "case": {"description": "non-interference across combined schemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"if": {"exclusiveMaximum": 0}}, {"then": {"minimum": -10}}, {"else": {"multipleOf": 2}}]}, "tests": [{"description": "valid, but would have been invalid through then", "instance": -100, "valid": true}, {"description": "valid, but would have been invalid through else", "instance": 3, "valid": true}]}}
{"seq": 135, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"if\" without \"then\" and \"else\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/if.js:17:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"if\" without \"then\" and \"else\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 135, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 135, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 136, "case": {"description": "if with boolean schema true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": true, "then": {"const": "then"}, "else": {"const": "else"}}, "tests": [{"description": "boolean schema true in if always chooses the then path (valid)", "instance": "then", "valid": true}, {"description": "boolean schema true in if always chooses the then path (invalid)", "instance": "else", "valid": false}]}}
{"seq": 136, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 136, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 137, "case": {"description": "if with boolean schema false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": false, "then": {"const": "then"}, "else": {"const": "else"}}, "tests": [{"description": "boolean schema false in if always chooses the else path (invalid)", "instance": "then", "valid": false}, {"description": "boolean schema false in if always chooses the else path (valid)", "instance": "else", "valid": true}]}}
{"seq": 137, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 137, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 138, "case": {"description": "if appears at the end when serialized (keyword processing sequence)", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "then": {"const": "yes"}, "else": {"const": "other"}, "if": {"maxLength": 4}}, "tests": [{"description": "yes redirects to then and passes", "instance": "yes", "valid": true}, {"description": "other redirects to else and passes", "instance": "other", "valid": true}, {"description": "no redirects to then and fails", "instance": "no", "valid": false}, {"description": "invalid redirects to else and fails", "instance": "invalid", "valid": false}]}}
{"seq": 138, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 139, "case": {"description": "evaluating the same schema location against the same data location twice is not a sign of an infinite loop", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"int": {"type": "integer"}}, "allOf": [{"properties": {"foo": {"$ref": "#/$defs/int"}}}, {"additionalProperties": {"$ref": "#/$defs/int"}}]}, "tests": [{"description": "passing case", "instance": {"foo": 1}, "valid": true}, {"description": "failing case", "instance": {"foo": "a string"}, "valid": false}]}}
{"seq": 139, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 140, "case": {"description": "a schema given for items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "items": {"type": "integer"}}, "tests": [{"description": "valid items", "instance": [1, 2, 3], "valid": true}, {"description": "wrong type of items", "instance": [1, "x"], "valid": false}, {"description": "ignores non-arrays", "instance": {"foo": "bar"}, "valid": true}, {"description": "JavaScript pseudo-array is valid", "instance": {"0": "invalid", "length": 1}, "valid": true}]}}
{"seq": 140, "implementation": "python-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "js-schemasafe", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "rust-boon", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "elixir-jsv", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "js-json-schema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "go-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "cpp-jsoncons", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "js-hyperjump", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "scala-mjs-validator", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "php-opis-json-schema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "ruby-json_schemer", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "rust-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "java-json-schema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "js-ajv", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "cpp-blaze", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "java-openapiprocessor", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "python-jschon", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 140, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 141, "case": {"description": "items with boolean schema (true)", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "items": true}, "tests": [{"description": "any array is valid", "instance": [1, "foo", true], "valid": true}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 141, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 141, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 142, "case": {"description": "items with boolean schema (false)", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "items": false}, "tests": [{"description": "any non-empty array is invalid", "instance": [1, "foo", true], "valid": false}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 142, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 142, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 143, "case": {"description": "items and subitems", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"item": {"type": "array", "items": false, "prefixItems": [{"$ref": "#/$defs/sub-item"}, {"$ref": "#/$defs/sub-item"}]}, "sub-item": {"type": "object", "required": ["foo"]}}, "type": "array", "items": false, "prefixItems": [{"$ref": "#/$defs/item"}, {"$ref": "#/$defs/item"}, {"$ref": "#/$defs/item"}]}, "tests": [{"description": "valid items", "instance": [[{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": true}, {"description": "too many items", "instance": [[{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "too many sub-items", "instance": [[{"foo": null}, {"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "wrong item", "instance": [{"foo": null}, [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "wrong sub-item", "instance": [[{}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "fewer items is valid", "instance": [[{"foo": null}], [{"foo": null}]], "valid": true}]}}
{"seq": 143, "implementation": "python-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "go-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "js-schemasafe", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "elixir-jsv", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "js-json-schema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "cpp-jsoncons", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "rust-boon", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "js-hyperjump", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "js-ajv", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "cpp-blaze", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "rust-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "java-json-schema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "python-jschon", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "scala-mjs-validator", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 143, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 144, "case": {"description": "nested items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "array", "items": {"type": "array", "items": {"type": "array", "items": {"type": "array", "items": {"type": "number"}}}}}, "tests": [{"description": "valid nested array", "instance": [[[[1]], [[2], [3]]], [[[4], [5], [6]]]], "valid": true}, {"description": "nested array with invalid type", "instance": [[[["1"]], [[2], [3]]], [[[4], [5], [6]]]], "valid": false}, {"description": "not deep enough", "instance": [[[1], [2], [3]], [[4], [5], [6]]], "valid": false}]}}
{"seq": 144, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 145, "case": {"description": "prefixItems with no additional items allowed", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{}, {}, {}], "items": false}, "tests": [{"description": "empty array", "instance": [], "valid": true}, {"description": "fewer number of items present (1)", "instance": [1], "valid": true}, {"description": "fewer number of items present (2)", "instance": [1, 2], "valid": true}, {"description": "equal number of items present", "instance": [1, 2, 3], "valid": true}, {"description": "additional items are not permitted", "instance": [1, 2, 3, 4], "valid": false}]}}
{"seq": 145, "implementation": "python-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "go-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "rust-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "elixir-jsv", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-schemasafe", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "rust-boon", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-ajv", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "cpp-blaze", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-hyperjump", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "java-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "python-jschon", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "case": {"description": "items does not look in applicators, valid case", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"prefixItems": [{"minimum": 3}]}], "items": {"minimum": 5}}, "tests": [{"description": "prefixItems in allOf does not constrain items, invalid case", "instance": [3, 5], "valid": false}, {"description": "prefixItems in allOf does not constrain items, valid case", "instance": [5, 5], "valid": true}]}}
{"seq": 146, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 146, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 147, "case": {"description": "prefixItems validation adjusts the starting index for items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}], "items": {"type": "integer"}}, "tests": [{"description": "valid items", "instance": ["x", 2, 3], "valid": true}, {"description": "wrong type of second item", "instance": ["x", "y"], "valid": false}]}}
{"seq": 147, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 147, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "case": {"description": "items with heterogeneous array", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{}], "items": false}, "tests": [{"description": "heterogeneous invalid instance", "instance": ["foo", "bar", 37], "valid": false}, {"description": "valid instance", "instance": [null], "valid": true}]}}
{"seq": 148, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 148, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 149, "case": {"description": "items with null instance elements", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "items": {"type": "null"}}, "tests": [{"description": "allows null elements", "instance": [null], "valid": true}]}}
{"seq": 149, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 149, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "case": {"description": "maxContains without contains is ignored", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxContains": 1}, "tests": [{"description": "one item valid against lone maxContains", "instance": [1], "valid": true}, {"description": "two items still valid against lone maxContains", "instance": [1, 2], "valid": true}]}}
{"seq": 150, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"maxContains\" without \"contains\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/validation/limitContains.js:10:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"maxContains\" without \"contains\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 150, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 150, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 151, "case": {"description": "maxContains with contains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "maxContains": 1}, "tests": [{"description": "empty data", "instance": [], "valid": false}, {"description": "all elements match, valid maxContains", "instance": [1], "valid": true}, {"description": "all elements match, invalid maxContains", "instance": [1, 1], "valid": false}, {"description": "some elements match, valid maxContains", "instance": [1, 2], "valid": true}, {"description": "some elements match, invalid maxContains", "instance": [1, 2, 1], "valid": false}]}}
{"seq": 151, "implementation": "python-jsonschema", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "ruby-json_schemer", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "go-jsonschema", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "elixir-jsv", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "js-hyperjump", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "cpp-jsoncons", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "rust-boon", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "js-json-schema", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "js-schemasafe", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "cpp-blaze", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "scala-mjs-validator", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "java-jsonschemafriend", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "java-openapiprocessor", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "rust-jsonschema", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "php-opis-json-schema", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "js-ajv", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "java-json-schema", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "python-jschon", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 151, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 152, "case": {"description": "maxContains with contains, value with a decimal", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "maxContains": 1.0}, "tests": [{"description": "one element matches, valid maxContains", "instance": [1], "valid": true}, {"description": "too many elements match, invalid maxContains", "instance": [1, 1], "valid": false}]}}
{"seq": 152, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "maxContains must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(74): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'maxContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxContains must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(74): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'maxContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 152, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 153, "case": {"description": "minContains < maxContains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "minContains": 1, "maxContains": 3}, "tests": [{"description": "actual < minContains < maxContains", "instance": [], "valid": false}, {"description": "minContains < actual < maxContains", "instance": [1, 1], "valid": true}, {"description": "minContains < maxContains < actual", "instance": [1, 1, 1, 1], "valid": false}]}}
{"seq": 153, "implementation": "python-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "ruby-json_schemer", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "php-opis-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "java-jsonschemafriend", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "elixir-jsv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-ajv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "scala-mjs-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-hyperjump", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "cpp-jsoncons", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "rust-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "rust-boon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "go-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-schemasafe", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "cpp-blaze", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "java-openapiprocessor", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "java-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "python-jschon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 154, "case": {"description": "maxItems validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxItems": 2}, "tests": [{"description": "shorter is valid", "instance": [1], "valid": true}, {"description": "exact length is valid", "instance": [1, 2], "valid": true}, {"description": "too long is invalid", "instance": [1, 2, 3], "valid": false}, {"description": "ignores non-arrays", "instance": "foobar", "valid": true}]}}
{"seq": 154, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "cpp-blaze", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "cpp-jsoncons", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "elixir-jsv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "scala-mjs-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "java-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "python-jschon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 155, "case": {"description": "maxItems validation with a decimal", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxItems": 2.0}, "tests": [{"description": "shorter is valid", "instance": [1], "valid": true}, {"description": "too long is invalid", "instance": [1, 2, 3], "valid": false}]}}
{"seq": 155, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "maxItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 155, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 155, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 156, "case": {"description": "maxLength validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxLength": 2}, "tests": [{"description": "shorter is valid", "instance": "f", "valid": true}, {"description": "exact length is valid", "instance": "fo", "valid": true}, {"description": "too long is invalid", "instance": "foo", "valid": false}, {"description": "ignores non-strings", "instance": 100, "valid": true}, {"description": "two graphemes is long enough", "instance": "\ud83d\udca9\ud83d\udca9", "valid": true}]}}
{"seq": 156, "implementation": "python-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "cpp-jsoncons", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "elixir-jsv", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "rust-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "rust-boon", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "cpp-blaze", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-json-schema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "go-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-hyperjump", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-schemasafe", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-ajv", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "scala-mjs-validator", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"message": "This case is not yet implemented.", "skipped": true}]}
{"seq": 156, "implementation": "java-json-schema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "python-jschon", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 157, "case": {"description": "maxLength validation with a decimal", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxLength": 2.0}, "tests": [{"description": "shorter is valid", "instance": "f", "valid": true}, {"description": "too long is invalid", "instance": "foo", "valid": false}]}}
{"seq": 157, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "maxLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('f', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('f', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 157, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 158, "case": {"description": "maxProperties validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxProperties": 2}, "tests": [{"description": "shorter is valid", "instance": {"foo": 1}, "valid": true}, {"description": "exact length is valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "too long is invalid", "instance": {"foo": 1, "bar": 2, "baz": 3}, "valid": false}, {"description": "ignores arrays", "instance": [1, 2, 3], "valid": true}, {"description": "ignores strings", "instance": "foobar", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 158, "implementation": "python-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "rust-boon", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "scala-mjs-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "elixir-jsv", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "rust-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "js-ajv", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "js-hyperjump", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "cpp-jsoncons", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "js-schemasafe", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "js-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "go-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "cpp-blaze", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "java-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "python-jschon", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 159, "case": {"description": "maxProperties validation with a decimal", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxProperties": 2.0}, "tests": [{"description": "shorter is valid", "instance": {"foo": 1}, "valid": true}, {"description": "too long is invalid", "instance": {"foo": 1, "bar": 2, "baz": 3}, "valid": false}]}}
{"seq": 159, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "maxProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 159, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "case": {"description": "maxProperties = 0 means the object is empty", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maxProperties": 0}, "tests": [{"description": "no properties is valid", "instance": {}, "valid": true}, {"description": "one property is invalid", "instance": {"foo": 1}, "valid": false}]}}
{"seq": 160, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 161, "case": {"description": "maximum validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maximum": 3.0}, "tests": [{"description": "below the maximum is valid", "instance": 2.6, "valid": true}, {"description": "boundary point is valid", "instance": 3.0, "valid": true}, {"description": "above the maximum is invalid", "instance": 3.5, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 161, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "js-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "cpp-blaze", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "cpp-jsoncons", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "elixir-jsv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "scala-mjs-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "java-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "python-jschon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 162, "case": {"description": "maximum validation with unsigned integer", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "maximum": 300}, "tests": [{"description": "below the maximum is invalid", "instance": 299.97, "valid": true}, {"description": "boundary point integer is valid", "instance": 300, "valid": true}, {"description": "boundary point float is valid", "instance": 300.0, "valid": true}, {"description": "above the maximum is invalid", "instance": 300.5, "valid": false}]}}
{"seq": 162, "implementation": "python-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "php-opis-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "go-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "rust-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "cpp-blaze", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "rust-boon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "cpp-jsoncons", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "js-schemasafe", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "ruby-json_schemer", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "scala-mjs-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "elixir-jsv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "java-openapiprocessor", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "js-hyperjump", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "js-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "js-ajv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "java-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "python-jschon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 162, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 163, "case": {"description": "minContains without contains is ignored", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minContains": 1}, "tests": [{"description": "one item valid against lone minContains", "instance": [1], "valid": true}, {"description": "zero items still valid against lone minContains", "instance": [], "valid": true}]}}
{"seq": 163, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"minContains\" without \"contains\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/validation/limitContains.js:10:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"minContains\" without \"contains\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 163, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "case": {"description": "minContains=1 with contains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "minContains": 1}, "tests": [{"description": "empty data", "instance": [], "valid": false}, {"description": "no elements match", "instance": [2], "valid": false}, {"description": "single element matches, valid minContains", "instance": [1], "valid": true}, {"description": "some elements match, valid minContains", "instance": [1, 2], "valid": true}, {"description": "all elements match, valid minContains", "instance": [1, 1], "valid": true}]}}
{"seq": 164, "implementation": "python-jsonschema", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-hyperjump", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-json-schema", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "php-opis-json-schema", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "rust-boon", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "ruby-json_schemer", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-schemasafe", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "rust-jsonschema", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "cpp-jsoncons", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "elixir-jsv", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-ajv", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "go-jsonschema", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "cpp-blaze", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "java-openapiprocessor", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "java-jsonschemafriend", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "scala-mjs-validator", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "java-json-schema", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "python-jschon", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "case": {"description": "minContains=2 with contains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "minContains": 2}, "tests": [{"description": "empty data", "instance": [], "valid": false}, {"description": "all elements match, invalid minContains", "instance": [1], "valid": false}, {"description": "some elements match, invalid minContains", "instance": [1, 2], "valid": false}, {"description": "all elements match, valid minContains (exactly as needed)", "instance": [1, 1], "valid": true}, {"description": "all elements match, valid minContains (more than needed)", "instance": [1, 1, 1], "valid": true}, {"description": "some elements match, valid minContains", "instance": [1, 2, 1], "valid": true}]}}
{"seq": 165, "implementation": "python-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "js-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "php-opis-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "cpp-blaze", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "ruby-json_schemer", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "rust-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "rust-boon", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "cpp-jsoncons", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "go-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "js-hyperjump", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "js-ajv", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "scala-mjs-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "elixir-jsv", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "js-schemasafe", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "java-openapiprocessor", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "java-jsonschemafriend", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "java-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "python-jschon", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 166, "case": {"description": "minContains=2 with contains with a decimal value", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "minContains": 2.0}, "tests": [{"description": "one element matches, invalid minContains", "instance": [1], "valid": false}, {"description": "both elements match, valid minContains", "instance": [1, 1], "valid": true}]}}
{"seq": 166, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"context": {"message": "minContains must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(67): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'minContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "minContains must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(67): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'minContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 166, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 167, "case": {"description": "maxContains = minContains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "maxContains": 2, "minContains": 2}, "tests": [{"description": "empty data", "instance": [], "valid": false}, {"description": "all elements match, invalid minContains", "instance": [1], "valid": false}, {"description": "all elements match, invalid maxContains", "instance": [1, 1, 1], "valid": false}, {"description": "all elements match, valid maxContains and minContains", "instance": [1, 1], "valid": true}]}}
{"seq": 167, "implementation": "python-jsonschema", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "ruby-json_schemer", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "rust-boon", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "js-json-schema", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "js-schemasafe", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "scala-mjs-validator", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "go-jsonschema", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "cpp-blaze", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "php-opis-json-schema", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "rust-jsonschema", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "js-hyperjump", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "elixir-jsv", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "js-ajv", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "cpp-jsoncons", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "java-openapiprocessor", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "java-jsonschemafriend", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "java-json-schema", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "python-jschon", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 167, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 168, "case": {"description": "maxContains < minContains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "maxContains": 1, "minContains": 3}, "tests": [{"description": "empty data", "instance": [], "valid": false}, {"description": "invalid minContains", "instance": [1], "valid": false}, {"description": "invalid maxContains", "instance": [1, 1, 1], "valid": false}, {"description": "invalid maxContains and minContains", "instance": [1, 1], "valid": false}]}}
{"seq": 168, "implementation": "python-jsonschema", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "elixir-jsv", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "scala-mjs-validator", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "cpp-blaze", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "rust-jsonschema", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "ruby-json_schemer", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "js-hyperjump", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "rust-boon", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "go-jsonschema", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "php-opis-json-schema", "expected": [false, false, false, false], "results": [{"context": {"message": "maxContains must be greater than minContains", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(77): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'maxContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxContains must be greater than minContains", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(77): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'maxContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxContains must be greater than minContains", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(77): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'maxContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxContains must be greater than minContains", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/ContainsKeywordParser.php(77): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo), 'maxContains')\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\ContainsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 168, "implementation": "js-ajv", "expected": [false, false, false, false], "context": {"traceback": "Error: strict mode: \"minContains\" > \"maxContains\" is always invalid\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/contains.js:37:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"minContains\" > \"maxContains\" is always invalid"}, "message": "", "caught": true, "errored": true}
{"seq": 168, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "js-schemasafe", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "cpp-jsoncons", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "js-json-schema", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "java-openapiprocessor", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "java-json-schema", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "python-jschon", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 168, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 169, "case": {"description": "minContains = 0", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "minContains": 0}, "tests": [{"description": "empty data", "instance": [], "valid": true}, {"description": "minContains = 0 makes contains always pass", "instance": [2], "valid": true}]}}
{"seq": 169, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/contains.js:33:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 169, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 170, "case": {"description": "minContains = 0 with maxContains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "contains": {"const": 1}, "minContains": 0, "maxContains": 1}, "tests": [{"description": "empty data", "instance": [], "valid": true}, {"description": "not more than maxContains", "instance": [1], "valid": true}, {"description": "too many", "instance": [1, 1], "valid": false}]}}
{"seq": 170, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "case": {"description": "minItems validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minItems": 1}, "tests": [{"description": "longer is valid", "instance": [1, 2], "valid": true}, {"description": "exact length is valid", "instance": [1], "valid": true}, {"description": "too short is invalid", "instance": [], "valid": false}, {"description": "ignores non-arrays", "instance": "", "valid": true}]}}
{"seq": 171, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "js-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "elixir-jsv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "cpp-blaze", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "scala-mjs-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "cpp-jsoncons", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "java-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "python-jschon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 171, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 172, "case": {"description": "minItems validation with a decimal", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minItems": 1.0}, "tests": [{"description": "longer is valid", "instance": [1, 2], "valid": true}, {"description": "too short is invalid", "instance": [], "valid": false}]}}
{"seq": 172, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "minItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "minItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 172, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "case": {"description": "minLength validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minLength": 2}, "tests": [{"description": "longer is valid", "instance": "foo", "valid": true}, {"description": "exact length is valid", "instance": "fo", "valid": true}, {"description": "too short is invalid", "instance": "f", "valid": false}, {"description": "ignores non-strings", "instance": 1, "valid": true}, {"description": "one grapheme is not long enough", "instance": "\ud83d\udca9", "valid": false}]}}
{"seq": 173, "implementation": "python-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "scala-mjs-validator", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"message": "This case is not yet implemented.", "skipped": true}]}
{"seq": 173, "implementation": "go-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "rust-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "elixir-jsv", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "cpp-jsoncons", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "js-json-schema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "rust-boon", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "js-ajv", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "cpp-blaze", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "js-schemasafe", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "js-hyperjump", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "java-json-schema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "python-jschon", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 174, "case": {"description": "minLength validation with a decimal", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minLength": 2.0}, "tests": [{"description": "longer is valid", "instance": "foo", "valid": true}, {"description": "too short is invalid", "instance": "f", "valid": false}]}}
{"seq": 174, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "minLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "minLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 174, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "case": {"description": "minProperties validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minProperties": 1}, "tests": [{"description": "longer is valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "exact length is valid", "instance": {"foo": 1}, "valid": true}, {"description": "too short is invalid", "instance": {}, "valid": false}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores strings", "instance": "", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 175, "implementation": "python-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "rust-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "js-ajv", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "cpp-blaze", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "rust-boon", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "scala-mjs-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "cpp-jsoncons", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "js-hyperjump", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "js-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "go-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "js-schemasafe", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "elixir-jsv", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "java-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "python-jschon", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 176, "case": {"description": "minProperties validation with a decimal", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minProperties": 1.0}, "tests": [{"description": "longer is valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "too short is invalid", "instance": {}, "valid": false}]}}
{"seq": 176, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "minProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "minProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 176, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 177, "case": {"description": "minimum validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minimum": 1.1}, "tests": [{"description": "above the minimum is valid", "instance": 2.6, "valid": true}, {"description": "boundary point is valid", "instance": 1.1, "valid": true}, {"description": "below the minimum is invalid", "instance": 0.6, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 177, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "js-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "cpp-jsoncons", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "scala-mjs-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "elixir-jsv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "cpp-blaze", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "java-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "python-jschon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 177, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 178, "case": {"description": "minimum validation with signed integer", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "minimum": -2}, "tests": [{"description": "negative above the minimum is valid", "instance": -1, "valid": true}, {"description": "positive above the minimum is valid", "instance": 0, "valid": true}, {"description": "boundary point is valid", "instance": -2, "valid": true}, {"description": "boundary point with float is valid", "instance": -2.0, "valid": true}, {"description": "float below the minimum is invalid", "instance": -2.0001, "valid": false}, {"description": "int below the minimum is invalid", "instance": -3, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 178, "implementation": "python-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "elixir-jsv", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "go-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "js-hyperjump", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "rust-boon", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "js-schemasafe", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "cpp-blaze", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "rust-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "js-json-schema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "js-ajv", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "java-json-schema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "python-jschon", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 179, "case": {"description": "by int", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "multipleOf": 2}, "tests": [{"description": "int by int", "instance": 10, "valid": true}, {"description": "int by int fail", "instance": 7, "valid": false}, {"description": "ignores non-numbers", "instance": "foo", "valid": true}]}}
{"seq": 179, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "elixir-jsv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "cpp-jsoncons", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "js-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "cpp-blaze", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "scala-mjs-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "java-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "python-jschon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 179, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 180, "case": {"description": "by number", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "multipleOf": 1.5}, "tests": [{"description": "zero is multiple of anything", "instance": 0, "valid": true}, {"description": "4.5 is multiple of 1.5", "instance": 4.5, "valid": true}, {"description": "35 is not multiple of 1.5", "instance": 35, "valid": false}]}}
{"seq": 180, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 181, "case": {"description": "by small number", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "multipleOf": 0.0001}, "tests": [{"description": "0.0075 is multiple of 0.0001", "instance": 0.0075, "valid": true}, {"description": "0.00751 is not multiple of 0.0001", "instance": 0.00751, "valid": false}]}}
{"seq": 181, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "case": {"description": "float division = inf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer", "multipleOf": 0.123456789}, "tests": [{"description": "always invalid, but naive implementations may raise an overflow error", "instance": 1e+308, "valid": false}]}}
{"seq": 182, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "dotnet-jsonschema-net", "expected": [false], "message": "System.Decimal does not support large values like 1e308", "skipped": true}
{"seq": 182, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 182, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 183, "case": {"description": "small multiple of large integer", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer", "multipleOf": 1e-08}, "tests": [{"description": "any integer is a multiple of 1e-8", "instance": 12391239123, "valid": true}]}}
{"seq": 183, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "scala-mjs-validator", "expected": [true], "message": "This case is not yet implemented.", "skipped": true}
{"seq": 183, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 183, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 184, "case": {"description": "not", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": {"type": "integer"}}, "tests": [{"description": "allowed", "instance": "foo", "valid": true}, {"description": "disallowed", "instance": 1, "valid": false}]}}
{"seq": 184, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 184, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 185, "case": {"description": "not multiple types", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": {"type": ["integer", "boolean"]}}, "tests": [{"description": "valid", "instance": "foo", "valid": true}, {"description": "mismatch", "instance": 1, "valid": false}, {"description": "other mismatch", "instance": true, "valid": false}]}}
{"seq": 185, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 185, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 186, "case": {"description": "not more complex schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": {"type": "object", "properties": {"foo": {"type": "string"}}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "other match", "instance": {"foo": 1}, "valid": true}, {"description": "mismatch", "instance": {"foo": "bar"}, "valid": false}]}}
{"seq": 186, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 187, "case": {"description": "forbidden property", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"not": {}}}}, "tests": [{"description": "property present", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "property absent", "instance": {"bar": 1, "baz": 2}, "valid": true}]}}
{"seq": 187, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 187, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 188, "case": {"description": "forbid everything with empty schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": {}}, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "boolean true is invalid", "instance": true, "valid": false}, {"description": "boolean false is invalid", "instance": false, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}, {"description": "object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 188, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "cpp-jsoncons", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "elixir-jsv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "cpp-blaze", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "js-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "scala-mjs-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "java-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "python-jschon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 188, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "case": {"description": "forbid everything with boolean schema true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": true}, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "boolean true is invalid", "instance": true, "valid": false}, {"description": "boolean false is invalid", "instance": false, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}, {"description": "object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 189, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "cpp-jsoncons", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "scala-mjs-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "js-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "elixir-jsv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "cpp-blaze", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "java-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "python-jschon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 189, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 190, "case": {"description": "allow everything with boolean schema false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": false}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is valid", "instance": "foo", "valid": true}, {"description": "boolean true is valid", "instance": true, "valid": true}, {"description": "boolean false is valid", "instance": false, "valid": true}, {"description": "null is valid", "instance": null, "valid": true}, {"description": "object is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "empty object is valid", "instance": {}, "valid": true}, {"description": "array is valid", "instance": ["foo"], "valid": true}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 190, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 191, "case": {"description": "double negation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": {"not": {}}}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 191, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 191, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 192, "case": {"description": "collect annotations inside a 'not', even if collection is disabled", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "not": {"$comment": "this subschema must still produce annotations internally, even though the 'not' will ultimately discard them", "anyOf": [true, {"properties": {"foo": true}}], "unevaluatedProperties": false}}, "tests": [{"description": "unevaluated property", "instance": {"bar": 1}, "valid": true}, {"description": "annotations are still collected inside a 'not'", "instance": {"foo": 1}, "valid": false}]}}
{"seq": 192, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "case": {"description": "oneOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [{"type": "integer"}, {"minimum": 2}]}, "tests": [{"description": "first oneOf valid", "instance": 1, "valid": true}, {"description": "second oneOf valid", "instance": 2.5, "valid": true}, {"description": "both oneOf valid", "instance": 3, "valid": false}, {"description": "neither oneOf valid", "instance": 1.5, "valid": false}]}}
{"seq": 193, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 193, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 194, "case": {"description": "oneOf with base schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string", "oneOf": [{"minLength": 2}, {"maxLength": 4}]}, "tests": [{"description": "mismatch base schema", "instance": 3, "valid": false}, {"description": "one oneOf valid", "instance": "foobar", "valid": true}, {"description": "both oneOf valid", "instance": "foo", "valid": false}]}}
{"seq": 194, "implementation": "python-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "rust-boon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "js-hyperjump", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "ruby-json_schemer", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "go-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "js-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "elixir-jsv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "php-opis-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "cpp-blaze", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "cpp-jsoncons", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "js-schemasafe", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "scala-mjs-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "rust-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "java-jsonschemafriend", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "js-ajv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "java-openapiprocessor", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "java-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "python-jschon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 195, "case": {"description": "oneOf with boolean schemas, all true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [true, true, true]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 195, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "oneOf contains multiple true values", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/OneOfKeywordParser.php(64): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\OneOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 195, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 195, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 196, "case": {"description": "oneOf with boolean schemas, one true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [true, false, false]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 196, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 196, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 197, "case": {"description": "oneOf with boolean schemas, more than one true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [true, true, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 197, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "oneOf contains multiple true values", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/OneOfKeywordParser.php(64): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\OneOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '2020-12')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '2020-12')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(145): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '2020-12')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '2020-12')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 197, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 197, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "case": {"description": "oneOf with boolean schemas, all false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [false, false, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 198, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 198, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 199, "case": {"description": "oneOf complex types", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [{"properties": {"bar": {"type": "integer"}}, "required": ["bar"]}, {"properties": {"foo": {"type": "string"}}, "required": ["foo"]}]}, "tests": [{"description": "first oneOf valid (complex)", "instance": {"bar": 2}, "valid": true}, {"description": "second oneOf valid (complex)", "instance": {"foo": "baz"}, "valid": true}, {"description": "both oneOf valid (complex)", "instance": {"foo": "baz", "bar": 2}, "valid": false}, {"description": "neither oneOf valid (complex)", "instance": {"foo": 2, "bar": "quux"}, "valid": false}]}}
{"seq": 199, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 199, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 200, "case": {"description": "oneOf with empty schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [{"type": "number"}, {}]}, "tests": [{"description": "one valid - valid", "instance": "foo", "valid": true}, {"description": "both valid - invalid", "instance": 123, "valid": false}]}}
{"seq": 200, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "case": {"description": "oneOf with required", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "oneOf": [{"required": ["foo", "bar"]}, {"required": ["foo", "baz"]}]}, "tests": [{"description": "both invalid - invalid", "instance": {"bar": 2}, "valid": false}, {"description": "first valid - valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "second valid - valid", "instance": {"foo": 1, "baz": 3}, "valid": true}, {"description": "both valid - invalid", "instance": {"foo": 1, "bar": 2, "baz": 3}, "valid": false}]}}
{"seq": 201, "implementation": "python-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "js-json-schema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "rust-boon", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "js-ajv", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "js-schemasafe", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "cpp-jsoncons", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "js-hyperjump", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "rust-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "cpp-blaze", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "go-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "java-openapiprocessor", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "ruby-json_schemer", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "java-jsonschemafriend", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "elixir-jsv", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "php-opis-json-schema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "scala-mjs-validator", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "java-json-schema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "python-jschon", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 202, "case": {"description": "oneOf with missing optional property", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [{"properties": {"bar": true, "baz": true}, "required": ["bar"]}, {"properties": {"foo": true}, "required": ["foo"]}]}, "tests": [{"description": "first oneOf valid", "instance": {"bar": 8}, "valid": true}, {"description": "second oneOf valid", "instance": {"foo": "foo"}, "valid": true}, {"description": "both oneOf valid", "instance": {"foo": "foo", "bar": 8}, "valid": false}, {"description": "neither oneOf valid", "instance": {"baz": "quux"}, "valid": false}]}}
{"seq": 202, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 202, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 203, "case": {"description": "nested oneOf, to check validation semantics", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "oneOf": [{"oneOf": [{"type": "null"}]}]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "anything non-null is invalid", "instance": 123, "valid": false}]}}
{"seq": 203, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 204, "case": {"description": "pattern validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "pattern": "^a*$"}, "tests": [{"description": "a matching pattern is valid", "instance": "aaa", "valid": true}, {"description": "a non-matching pattern is invalid", "instance": "abc", "valid": false}, {"description": "ignores booleans", "instance": true, "valid": true}, {"description": "ignores integers", "instance": 123, "valid": true}, {"description": "ignores floats", "instance": 1.0, "valid": true}, {"description": "ignores objects", "instance": {}, "valid": true}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores null", "instance": null, "valid": true}]}}
{"seq": 204, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "js-json-schema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "rust-boon", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "cpp-blaze", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "elixir-jsv", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "cpp-jsoncons", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "scala-mjs-validator", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "js-ajv", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "java-json-schema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "python-jschon", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 204, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 205, "case": {"description": "pattern is not anchored", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "pattern": "a+"}, "tests": [{"description": "matches a substring", "instance": "xxaayy", "valid": true}]}}
{"seq": 205, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 205, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 206, "case": {"description": "patternProperties validates properties matching a regex", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "patternProperties": {"f.*o": {"type": "integer"}}}, "tests": [{"description": "a single valid match is valid", "instance": {"foo": 1}, "valid": true}, {"description": "multiple valid matches is valid", "instance": {"foo": 1, "foooooo": 2}, "valid": true}, {"description": "a single invalid match is invalid", "instance": {"foo": "bar", "fooooo": 2}, "valid": false}, {"description": "multiple invalid matches is invalid", "instance": {"foo": "bar", "foooooo": "baz"}, "valid": false}, {"description": "ignores arrays", "instance": ["foo"], "valid": true}, {"description": "ignores strings", "instance": "foo", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 206, "implementation": "python-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "rust-boon", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "js-json-schema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "rust-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "go-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "cpp-blaze", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "elixir-jsv", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "js-ajv", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "js-hyperjump", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "js-schemasafe", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "java-json-schema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "python-jschon", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 206, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 207, "case": {"description": "multiple simultaneous patternProperties are validated", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "patternProperties": {"a*": {"type": "integer"}, "aaa*": {"maximum": 20}}}, "tests": [{"description": "a single valid match is valid", "instance": {"a": 21}, "valid": true}, {"description": "a simultaneous match is valid", "instance": {"aaaa": 18}, "valid": true}, {"description": "multiple matches is valid", "instance": {"a": 21, "aaaa": 18}, "valid": true}, {"description": "an invalid due to one is invalid", "instance": {"a": "bar"}, "valid": false}, {"description": "an invalid due to the other is invalid", "instance": {"aaaa": 31}, "valid": false}, {"description": "an invalid due to both is invalid", "instance": {"aaa": "foo", "aaaa": 31}, "valid": false}]}}
{"seq": 207, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "elixir-jsv", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "rust-boon", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "js-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "cpp-blaze", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "js-ajv", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "cpp-jsoncons", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "java-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "scala-mjs-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "python-jschon", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 208, "case": {"description": "regexes are not anchored by default and are case sensitive", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "patternProperties": {"[0-9]{2,}": {"type": "boolean"}, "X_": {"type": "string"}}}, "tests": [{"description": "non recognized members are ignored", "instance": {"answer 1": "42"}, "valid": true}, {"description": "recognized members are accounted for", "instance": {"a31b": null}, "valid": false}, {"description": "regexes are case sensitive", "instance": {"a_x_3": 3}, "valid": true}, {"description": "regexes are case sensitive, 2", "instance": {"a_X_3": 3}, "valid": false}]}}
{"seq": 208, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "elixir-jsv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "cpp-blaze", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "scala-mjs-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "cpp-jsoncons", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "js-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "java-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "python-jschon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 208, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 209, "case": {"description": "patternProperties with boolean schemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "patternProperties": {"f.*": true, "b.*": false}}, "tests": [{"description": "object with property matching schema true is valid", "instance": {"foo": 1}, "valid": true}, {"description": "object with property matching schema false is invalid", "instance": {"bar": 2}, "valid": false}, {"description": "object with both properties is invalid", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "object with a property matching both true and false is invalid", "instance": {"foobar": 1}, "valid": false}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 209, "implementation": "python-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "js-hyperjump", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "cpp-blaze", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "js-json-schema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "cpp-jsoncons", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "js-ajv", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "elixir-jsv", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "rust-boon", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "rust-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "go-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "js-schemasafe", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 209, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "scala-mjs-validator", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "java-json-schema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "python-jschon", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 209, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 210, "case": {"description": "patternProperties with null valued instance properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "patternProperties": {"^.*bar$": {"type": "null"}}}, "tests": [{"description": "allows null values", "instance": {"foobar": null}, "valid": true}]}}
{"seq": 210, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 211, "case": {"description": "a schema given for prefixItems", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "integer"}, {"type": "string"}]}, "tests": [{"description": "correct types", "instance": [1, "foo"], "valid": true}, {"description": "wrong types", "instance": ["foo", 1], "valid": false}, {"description": "incomplete array of items", "instance": [1], "valid": true}, {"description": "array with additional items", "instance": [1, "foo", true], "valid": true}, {"description": "empty array", "instance": [], "valid": true}, {"description": "JavaScript pseudo-array is valid", "instance": {"0": "invalid", "1": "valid", "length": 2}, "valid": true}]}}
{"seq": 211, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "elixir-jsv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "cpp-blaze", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "js-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "rust-boon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "cpp-jsoncons", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "scala-mjs-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "js-ajv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "java-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "python-jschon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 211, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 212, "case": {"description": "prefixItems with boolean schemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [true, false]}, "tests": [{"description": "array with one item is valid", "instance": [1], "valid": true}, {"description": "array with two items is invalid", "instance": [1, "foo"], "valid": false}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 212, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "cpp-jsoncons", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "scala-mjs-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "elixir-jsv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "cpp-blaze", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "js-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "java-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "python-jschon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 213, "case": {"description": "additional items are allowed by default", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "integer"}]}, "tests": [{"description": "only the first item is validated", "instance": [1, "foo", false], "valid": true}]}}
{"seq": 213, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 213, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "case": {"description": "prefixItems with null instance elements", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "null"}]}, "tests": [{"description": "allows null elements", "instance": [null], "valid": true}]}}
{"seq": 214, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 214, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 215, "case": {"description": "object properties validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"type": "integer"}, "bar": {"type": "string"}}}, "tests": [{"description": "both properties present and valid is valid", "instance": {"foo": 1, "bar": "baz"}, "valid": true}, {"description": "one property invalid is invalid", "instance": {"foo": 1, "bar": {}}, "valid": false}, {"description": "both properties invalid is invalid", "instance": {"foo": [], "bar": {}}, "valid": false}, {"description": "doesn't invalidate other properties", "instance": {"quux": []}, "valid": true}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 215, "implementation": "python-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "js-hyperjump", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "cpp-blaze", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "elixir-jsv", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "rust-boon", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "js-schemasafe", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "scala-mjs-validator", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "js-ajv", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "js-json-schema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "go-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "rust-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "cpp-jsoncons", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "java-json-schema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "python-jschon", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 215, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 216, "case": {"description": "properties, patternProperties, additionalProperties interaction", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"type": "array", "maxItems": 3}, "bar": {"type": "array"}}, "patternProperties": {"f.o": {"minItems": 2}}, "additionalProperties": {"type": "integer"}}, "tests": [{"description": "property validates property", "instance": {"foo": [1, 2]}, "valid": true}, {"description": "property invalidates property", "instance": {"foo": [1, 2, 3, 4]}, "valid": false}, {"description": "patternProperty invalidates property", "instance": {"foo": []}, "valid": false}, {"description": "patternProperty validates nonproperty", "instance": {"fxo": [1, 2]}, "valid": true}, {"description": "patternProperty invalidates nonproperty", "instance": {"fxo": []}, "valid": false}, {"description": "additionalProperty ignores property", "instance": {"bar": []}, "valid": true}, {"description": "additionalProperty validates others", "instance": {"quux": 3}, "valid": true}, {"description": "additionalProperty invalidates others", "instance": {"quux": "foo"}, "valid": false}]}}
{"seq": 216, "implementation": "python-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "go-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "rust-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "elixir-jsv", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "js-hyperjump", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "cpp-blaze", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "cpp-jsoncons", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "rust-boon", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "js-ajv", "expected": [true, false, false, true, false, true, true, false], "context": {"traceback": "Error: strict mode: property foo matches pattern f.o (use allowMatchingProperties)\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkMatchingProperties (/usr/app/node_modules/ajv/dist/vocabularies/applicator/patternProperties.js:45:48)\n    at validatePatternProperties (/usr/app/node_modules/ajv/dist/vocabularies/applicator/patternProperties.js:31:21)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/patternProperties.js:27:9)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)", "message": "strict mode: property foo matches pattern f.o (use allowMatchingProperties)"}, "message": "", "caught": true, "errored": true}
{"seq": 216, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "js-schemasafe", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "js-json-schema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "scala-mjs-validator", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "java-json-schema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "python-jschon", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 216, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 217, "case": {"description": "properties with boolean schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": true, "bar": false}}, "tests": [{"description": "no property present is valid", "instance": {}, "valid": true}, {"description": "only 'true' property present is valid", "instance": {"foo": 1}, "valid": true}, {"description": "only 'false' property present is invalid", "instance": {"bar": 2}, "valid": false}, {"description": "both properties present is invalid", "instance": {"foo": 1, "bar": 2}, "valid": false}]}}
{"seq": 217, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 218, "case": {"description": "properties with escaped characters", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo\nbar": {"type": "number"}, "foo\"bar": {"type": "number"}, "foo\\bar": {"type": "number"}, "foo\rbar": {"type": "number"}, "foo\tbar": {"type": "number"}, "foo\fbar": {"type": "number"}}}, "tests": [{"description": "object with all numbers is valid", "instance": {"foo\nbar": 1, "foo\"bar": 1, "foo\\bar": 1, "foo\rbar": 1, "foo\tbar": 1, "foo\fbar": 1}, "valid": true}, {"description": "object with strings is invalid", "instance": {"foo\nbar": "1", "foo\"bar": "1", "foo\\bar": "1", "foo\rbar": "1", "foo\tbar": "1", "foo\fbar": "1"}, "valid": false}]}}
{"seq": 218, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 219, "case": {"description": "properties with null valued instance properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"type": "null"}}}, "tests": [{"description": "allows null values", "instance": {"foo": null}, "valid": true}]}}
{"seq": 219, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 219, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 220, "case": {"description": "properties whose names are Javascript object property names", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"__proto__": {"type": "number"}, "toString": {"properties": {"length": {"type": "string"}}}, "constructor": {"type": "number"}}}, "tests": [{"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}, {"description": "none of the properties mentioned", "instance": {}, "valid": true}, {"description": "__proto__ not valid", "instance": {"__proto__": "foo"}, "valid": false}, {"description": "toString not valid", "instance": {"toString": {"length": 37}}, "valid": false}, {"description": "constructor not valid", "instance": {"constructor": {"length": 37}}, "valid": false}, {"description": "all present and valid", "instance": {"__proto__": 12, "toString": {"length": "foo"}, "constructor": 37}, "valid": true}], "comment": "Ensure JS implementations don't universally consider e.g. __proto__ to always be present in an object."}}
{"seq": 220, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "rust-boon", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "scala-mjs-validator", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "elixir-jsv", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "cpp-blaze", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "js-json-schema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "js-ajv", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "cpp-jsoncons", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "java-json-schema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "python-jschon", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 221, "case": {"description": "propertyNames validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "propertyNames": {"maxLength": 3}}, "tests": [{"description": "all property names valid", "instance": {"f": {}, "foo": {}}, "valid": true}, {"description": "some property names invalid", "instance": {"foo": {}, "foobar": {}}, "valid": false}, {"description": "object without properties is valid", "instance": {}, "valid": true}, {"description": "ignores arrays", "instance": [1, 2, 3, 4], "valid": true}, {"description": "ignores strings", "instance": "foobar", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 221, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "cpp-jsoncons", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "js-ajv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "js-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "rust-boon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "scala-mjs-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "cpp-blaze", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "elixir-jsv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "java-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "python-jschon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 221, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 222, "case": {"description": "propertyNames with boolean schema true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "propertyNames": true}, "tests": [{"description": "object with any properties is valid", "instance": {"foo": 1}, "valid": true}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 222, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 223, "case": {"description": "propertyNames with boolean schema false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "propertyNames": false}, "tests": [{"description": "object with any properties is invalid", "instance": {"foo": 1}, "valid": false}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 223, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 223, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 224, "case": {"description": "root pointer ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"$ref": "#"}}, "additionalProperties": false}, "tests": [{"description": "match", "instance": {"foo": false}, "valid": true}, {"description": "recursive match", "instance": {"foo": {"foo": false}}, "valid": true}, {"description": "mismatch", "instance": {"bar": false}, "valid": false}, {"description": "recursive mismatch", "instance": {"foo": {"bar": false}}, "valid": false}]}}
{"seq": 224, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "scala-mjs-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "elixir-jsv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "cpp-jsoncons", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "js-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "cpp-blaze", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "java-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "python-jschon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "case": {"description": "relative pointer ref to object", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"type": "integer"}, "bar": {"$ref": "#/properties/foo"}}}, "tests": [{"description": "match", "instance": {"bar": 3}, "valid": true}, {"description": "mismatch", "instance": {"bar": true}, "valid": false}]}}
{"seq": 225, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 225, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "case": {"description": "relative pointer ref to array", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "integer"}, {"$ref": "#/prefixItems/0"}]}, "tests": [{"description": "match array", "instance": [1, 2], "valid": true}, {"description": "mismatch array", "instance": [1, "foo"], "valid": false}]}}
{"seq": 226, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 226, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 227, "case": {"description": "escaped pointer ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"tilde~field": {"type": "integer"}, "slash/field": {"type": "integer"}, "percent%field": {"type": "integer"}}, "properties": {"tilde": {"$ref": "#/$defs/tilde~0field"}, "slash": {"$ref": "#/$defs/slash~1field"}, "percent": {"$ref": "#/$defs/percent%25field"}}}, "tests": [{"description": "slash invalid", "instance": {"slash": "aoeu"}, "valid": false}, {"description": "tilde invalid", "instance": {"tilde": "aoeu"}, "valid": false}, {"description": "percent invalid", "instance": {"percent": "aoeu"}, "valid": false}, {"description": "slash valid", "instance": {"slash": 123}, "valid": true}, {"description": "tilde valid", "instance": {"tilde": 123}, "valid": true}, {"description": "percent valid", "instance": {"percent": 123}, "valid": true}]}}
{"seq": 227, "implementation": "python-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "rust-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "ruby-json_schemer", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "scala-mjs-validator", "expected": [false, false, false, true, true, true], "message": "This case is not yet implemented.", "skipped": true}
{"seq": 227, "implementation": "go-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "elixir-jsv", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-schemasafe", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "php-opis-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "rust-boon", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "cpp-jsoncons", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "java-jsonschemafriend", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-hyperjump", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "cpp-blaze", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-ajv", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "java-openapiprocessor", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "java-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "python-jschon", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "case": {"description": "nested refs", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"a": {"type": "integer"}, "b": {"$ref": "#/$defs/a"}, "c": {"$ref": "#/$defs/b"}}, "$ref": "#/$defs/c"}, "tests": [{"description": "nested ref valid", "instance": 5, "valid": true}, {"description": "nested ref invalid", "instance": "a", "valid": false}]}}
{"seq": 228, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 228, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 229, "case": {"description": "ref applies alongside sibling keywords", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"reffed": {"type": "array"}}, "properties": {"foo": {"$ref": "#/$defs/reffed", "maxItems": 2}}}, "tests": [{"description": "ref valid, maxItems valid", "instance": {"foo": []}, "valid": true}, {"description": "ref valid, maxItems invalid", "instance": {"foo": [1, 2, 3]}, "valid": false}, {"description": "ref invalid", "instance": {"foo": "string"}, "valid": false}]}}
{"seq": 229, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 229, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 230, "case": {"description": "remote ref, containing refs itself", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "https://json-schema.org/draft/2020-12/schema"}, "tests": [{"description": "remote ref valid", "instance": {"minLength": 1}, "valid": true}, {"description": "remote ref invalid", "instance": {"minLength": -1}, "valid": false}]}}
{"seq": 230, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "js-json-schema", "expected": [true, false], "results": [{"context": {"traceback": "Error: Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:74:19)\n    at Validator.validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:15:16)\n    at file:///usr/app/bowtie_json_schema.js:77:36\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:75:38)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker"}, "errored": true, "skipped": false}, {"context": {"traceback": "Error: Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker\n    at validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validate.js:74:19)\n    at Validator.validate (file:///usr/app/node_modules/@cfworker/json-schema/dist/esm/validator.js:15:16)\n    at file:///usr/app/bowtie_json_schema.js:77:36\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_json_schema.js:75:38)\n    at main (file:///usr/app/bowtie_json_schema.js:112:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Unresolved $ref \"https://json-schema.org/draft/2020-12/schema\".\nKnown schemas:\n- https://github.com/cfworker"}, "errored": true, "skipped": false}]}
{"seq": 230, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "Unresolved reference: https://json-schema.org/draft/2020-12/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(165): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(148): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '2020-12')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "Unresolved reference: https://json-schema.org/draft/2020-12/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(114): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(165): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(148): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '2020-12')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}]}
{"seq": 230, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "context": {"message": "System.Collections.Generic.KeyNotFoundException: The given key 'https://json-everything.net/053776c028' was not present in the dictionary.\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(Uri uri) in /source/Program.cs:line 98\n   at Json.Schema.SchemaRegistry.Get(Uri baseUri, String anchor, Boolean isDynamic, Boolean allowLegacy)\n   at Json.Schema.SchemaRegistry.Get(DynamicScope scope, Uri baseUri, String anchor, Boolean requireLocalAnchor)\n   at Json.Schema.DynamicRefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.GetConstraint(JsonPointer relativeEvaluationPath, JsonPointer baseInstanceLocation, JsonPointer relativeInstanceLocation, EvaluationContext context)\n   at Json.Schema.AdditionalPropertiesKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at System.Linq.Enumerable.IEnumerableSelectIterator`2.ToArray()\n   at Json.Schema.PropertiesKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.RefKeyword.GetConstraint(SchemaConstraint schemaConstraint, ReadOnlySpan`1 localConstraints, EvaluationContext context)\n   at Json.Schema.JsonSchema.PopulateConstraint(SchemaConstraint constraint, EvaluationContext context)\n   at Json.Schema.JsonSchema.Evaluate(JsonNode root, EvaluationOptions options)\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111", "traceback": "   at System.Environment.get_StackTrace()\n   at Program.<Main>$(String[] args) in /source/Program.cs:line 111"}, "message": "", "caught": true, "errored": true}
{"seq": 230, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "context": {"message": "Either.right.get on Left", "traceback": "scala.util.Either$RightProjection.get(Either.scala:696)\nBowtieRcCirceJsonValidator.run(Harness.scala:74)\nBowtieRcCirceJsonValidator.operate(Harness.scala:25)\nBowtieRcCirceJsonValidator$.main(Harness.scala:150)\nBowtieRcCirceJsonValidator.main(Harness.scala)"}, "message": "", "caught": true, "errored": true}
{"seq": 230, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 230, "implementation": "js-schemasafe", "expected": [true, false], "context": {"traceback": "Error: failed to resolve $ref: \"https://json-schema.org/draft/2020-12/schema\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1194:11\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at writeMain (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1190:7)\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at visit (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1297:13)\n    at compileSchema (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1342:27)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:50\n    at Array.map (<anonymous>)\n    at compile (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:26)", "message": "failed to resolve $ref: \"https://json-schema.org/draft/2020-12/schema\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 230, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 230, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 230, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "case": {"description": "property named $ref that is not a reference", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"$ref": {"type": "string"}}}, "tests": [{"description": "property named $ref valid", "instance": {"$ref": "a"}, "valid": true}, {"description": "property named $ref invalid", "instance": {"$ref": 2}, "valid": false}]}}
{"seq": 231, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 231, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "case": {"description": "property named $ref, containing an actual $ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"$ref": {"$ref": "#/$defs/is-string"}}, "$defs": {"is-string": {"type": "string"}}}, "tests": [{"description": "property named $ref valid", "instance": {"$ref": "a"}, "valid": true}, {"description": "property named $ref invalid", "instance": {"$ref": 2}, "valid": false}]}}
{"seq": 232, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 232, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 233, "case": {"description": "$ref to boolean schema true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "#/$defs/bool", "$defs": {"bool": true}}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 233, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 233, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 234, "case": {"description": "$ref to boolean schema false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "#/$defs/bool", "$defs": {"bool": false}}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 234, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 234, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 235, "case": {"description": "Recursive references between schemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree", "description": "tree of nodes", "type": "object", "properties": {"meta": {"type": "string"}, "nodes": {"type": "array", "items": {"$ref": "node"}}}, "required": ["meta", "nodes"], "$defs": {"node": {"$id": "http://localhost:1234/draft2020-12/node", "description": "node", "type": "object", "properties": {"value": {"type": "number"}, "subtree": {"$ref": "tree"}}, "required": ["value"]}}}, "tests": [{"description": "valid tree", "instance": {"meta": "root", "nodes": [{"value": 1, "subtree": {"meta": "child", "nodes": [{"value": 1.1}, {"value": 1.2}]}}, {"value": 2, "subtree": {"meta": "child", "nodes": [{"value": 2.1}, {"value": 2.2}]}}]}, "valid": true}, {"description": "invalid tree", "instance": {"meta": "root", "nodes": [{"value": 1, "subtree": {"meta": "child", "nodes": [{"value": "string is invalid"}, {"value": 1.2}]}}, {"value": 2, "subtree": {"meta": "child", "nodes": [{"value": 2.1}, {"value": 2.2}]}}]}, "valid": false}]}}
{"seq": 235, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 235, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 235, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "case": {"description": "refs with quote", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo\"bar": {"$ref": "#/$defs/foo%22bar"}}, "$defs": {"foo\"bar": {"type": "number"}}}, "tests": [{"description": "object with numbers is valid", "instance": {"foo\"bar": 1}, "valid": true}, {"description": "object with strings is invalid", "instance": {"foo\"bar": "1"}, "valid": false}]}}
{"seq": 236, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 236, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 237, "case": {"description": "ref creates new scope when adjacent to keywords", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"A": {"unevaluatedProperties": false}}, "properties": {"prop1": {"type": "string"}}, "$ref": "#/$defs/A"}, "tests": [{"description": "referenced subschema doesn't see annotations from properties", "instance": {"prop1": "match"}, "valid": false}]}}
{"seq": 237, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": true}]}
{"seq": 237, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 237, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 238, "case": {"description": "naive replacement of $ref with its destination is not correct", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"a_string": {"type": "string"}}, "enum": [{"$ref": "#/$defs/a_string"}]}, "tests": [{"description": "do not evaluate the $ref inside the enum, matching any string", "instance": "this is a string", "valid": false}, {"description": "do not evaluate the $ref inside the enum, definition exact match", "instance": {"type": "string"}, "valid": false}, {"description": "match the enum exactly", "instance": {"$ref": "#/$defs/a_string"}, "valid": true}]}}
{"seq": 238, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 238, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "case": {"description": "refs with relative uris and defs", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://example.com/schema-relative-uri-defs1.json", "properties": {"foo": {"$id": "schema-relative-uri-defs2.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}}, "$ref": "schema-relative-uri-defs2.json"}, "tests": [{"description": "invalid on inner field", "instance": {"foo": {"bar": 1}, "bar": "a"}, "valid": false}, {"description": "invalid on outer field", "instance": {"foo": {"bar": "a"}, "bar": 1}, "valid": false}, {"description": "valid on both fields", "instance": {"foo": {"bar": "a"}, "bar": "a"}, "valid": true}]}}
{"seq": 239, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 239, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 239, "implementation": "js-ajv", "expected": [false, false, true], "context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at String.match (<anonymous>)\n    at removeDotSegments (/usr/app/node_modules/fast-uri/lib/utils.js:156:15)\n    at resolveComponents (/usr/app/node_modules/fast-uri/index.js:64:25)\n    at Object.resolve (/usr/app/node_modules/fast-uri/index.js:17:20)\n    at resolveUrl (/usr/app/node_modules/ajv/dist/compile/resolve.js:90:21)\n    at Ajv2020.getJsonPointer (/usr/app/node_modules/ajv/dist/compile/index.js:226:47)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:180:31)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:185:35)\n    at Ajv2020.getJsonPointer (/usr/app/node_modules/ajv/dist/compile/index.js:232:29)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:180:31)", "message": "Maximum call stack size exceeded"}, "message": "", "caught": true, "errored": true}
{"seq": 239, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "case": {"description": "relative refs with absolute uris and defs", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://example.com/schema-refs-absolute-uris-defs1.json", "properties": {"foo": {"$id": "http://example.com/schema-refs-absolute-uris-defs2.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}}, "$ref": "schema-refs-absolute-uris-defs2.json"}, "tests": [{"description": "invalid on inner field", "instance": {"foo": {"bar": 1}, "bar": "a"}, "valid": false}, {"description": "invalid on outer field", "instance": {"foo": {"bar": "a"}, "bar": 1}, "valid": false}, {"description": "valid on both fields", "instance": {"foo": {"bar": "a"}, "bar": "a"}, "valid": true}]}}
{"seq": 240, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 240, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 240, "implementation": "js-ajv", "expected": [false, false, true], "context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at String.match (<anonymous>)\n    at Object.parse (/usr/app/node_modules/fast-uri/index.js:210:23)\n    at getFullPath (/usr/app/node_modules/ajv/dist/compile/resolve.js:74:24)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:177:44)\n    at Ajv2020.getJsonPointer (/usr/app/node_modules/ajv/dist/compile/index.js:232:29)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:180:31)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:185:35)\n    at Ajv2020.getJsonPointer (/usr/app/node_modules/ajv/dist/compile/index.js:232:29)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:180:31)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:185:35)", "message": "Maximum call stack size exceeded"}, "message": "", "caught": true, "errored": true}
{"seq": 240, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 241, "case": {"description": "$id must be resolved against nearest parent, not just immediate parent", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://example.com/a.json", "$defs": {"x": {"$id": "http://example.com/b/c.json", "not": {"$defs": {"y": {"$id": "d.json", "type": "number"}}}}}, "allOf": [{"$ref": "http://example.com/b/d.json"}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}]}}
{"seq": 241, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 241, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 241, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "case": {"description": "order of evaluation: $id and $ref", "schema": {"$comment": "$id must be evaluated before $ref to get the proper $ref destination", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://example.com/draft2020-12/ref-and-id1/base.json", "$ref": "int.json", "$defs": {"bigint": {"$comment": "canonical uri: https://example.com/ref-and-id1/int.json", "$id": "int.json", "maximum": 10}, "smallint": {"$comment": "canonical uri: https://example.com/ref-and-id1-int.json", "$id": "/draft2020-12/ref-and-id1-int.json", "maximum": 2}}}, "tests": [{"description": "data is valid against first definition", "instance": 5, "valid": true}, {"description": "data is invalid against first definition", "instance": 50, "valid": false}]}}
{"seq": 242, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 242, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 242, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "case": {"description": "order of evaluation: $id and $anchor and $ref", "schema": {"$comment": "$id must be evaluated before $ref to get the proper $ref destination", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://example.com/draft2020-12/ref-and-id2/base.json", "$ref": "#bigint", "$defs": {"bigint": {"$comment": "canonical uri: /ref-and-id2/base.json#/$defs/bigint; another valid uri for this location: /ref-and-id2/base.json#bigint", "$anchor": "bigint", "maximum": 10}, "smallint": {"$comment": "canonical uri: https://example.com/ref-and-id2#/$defs/smallint; another valid uri for this location: https://example.com/ref-and-id2/#bigint", "$id": "https://example.com/draft2020-12/ref-and-id2/", "$anchor": "bigint", "maximum": 2}}}, "tests": [{"description": "data is valid against first definition", "instance": 5, "valid": true}, {"description": "data is invalid against first definition", "instance": 50, "valid": false}]}}
{"seq": 243, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 243, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 243, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 243, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 243, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "case": {"description": "simple URN base URI with $ref via the URN", "schema": {"$comment": "URIs do not have to have HTTP(s) schemes", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "urn:uuid:deadbeef-1234-ffff-ffff-4321feebdaed", "minimum": 30, "properties": {"foo": {"$ref": "urn:uuid:deadbeef-1234-ffff-ffff-4321feebdaed"}}}, "tests": [{"description": "valid under the URN IDed schema", "instance": {"foo": 37}, "valid": true}, {"description": "invalid under the URN IDed schema", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 244, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 244, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 244, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "case": {"description": "simple URN base URI with JSON pointer", "schema": {"$comment": "URIs do not have to have HTTP(s) schemes", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "urn:uuid:deadbeef-1234-00ff-ff00-4321feebdaed", "properties": {"foo": {"$ref": "#/$defs/bar"}}, "$defs": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 245, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 245, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "case": {"description": "URN base URI with NSS", "schema": {"$comment": "RFC 8141 \u00a72.2", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "urn:example:1/406/47452/2", "properties": {"foo": {"$ref": "#/$defs/bar"}}, "$defs": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 246, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 246, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "case": {"description": "URN base URI with r-component", "schema": {"$comment": "RFC 8141 \u00a72.3.1", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "urn:example:foo-bar-baz-qux?+CCResolve:cc=uk", "properties": {"foo": {"$ref": "#/$defs/bar"}}, "$defs": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 247, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 247, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "case": {"description": "URN base URI with q-component", "schema": {"$comment": "RFC 8141 \u00a72.3.2", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "urn:example:weather?=op=map&lat=39.56&lon=-104.85&datetime=1969-07-21T02:56:15Z", "properties": {"foo": {"$ref": "#/$defs/bar"}}, "$defs": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 248, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 248, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "case": {"description": "URN base URI with URN and JSON pointer ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "urn:uuid:deadbeef-1234-0000-0000-4321feebdaed", "properties": {"foo": {"$ref": "urn:uuid:deadbeef-1234-0000-0000-4321feebdaed#/$defs/bar"}}, "$defs": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 249, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 249, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 249, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "case": {"description": "URN base URI with URN and anchor ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "urn:uuid:deadbeef-1234-ff00-00ff-4321feebdaed", "properties": {"foo": {"$ref": "urn:uuid:deadbeef-1234-ff00-00ff-4321feebdaed#something"}}, "$defs": {"bar": {"$anchor": "something", "type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 250, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 250, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 250, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 250, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "case": {"description": "URN ref with nested pointer ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "urn:uuid:deadbeef-4321-ffff-ffff-1234feebdaed", "$defs": {"foo": {"$id": "urn:uuid:deadbeef-4321-ffff-ffff-1234feebdaed", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}}}, "tests": [{"description": "a string is valid", "instance": "bar", "valid": true}, {"description": "a non-string is invalid", "instance": 12, "valid": false}]}}
{"seq": 251, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 251, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 251, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at String.match (<anonymous>)\n    at removeDotSegments (/usr/app/node_modules/fast-uri/lib/utils.js:156:15)\n    at serialize (/usr/app/node_modules/fast-uri/index.js:158:11)\n    at Object.resolve (/usr/app/node_modules/fast-uri/index.js:18:10)\n    at resolveUrl (/usr/app/node_modules/ajv/dist/compile/resolve.js:90:21)\n    at Ajv2020.getJsonPointer (/usr/app/node_modules/ajv/dist/compile/index.js:226:47)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:180:31)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:185:35)\n    at Ajv2020.getJsonPointer (/usr/app/node_modules/ajv/dist/compile/index.js:232:29)\n    at Ajv2020.resolveSchema (/usr/app/node_modules/ajv/dist/compile/index.js:180:31)", "message": "Maximum call stack size exceeded"}, "message": "", "caught": true, "errored": true}
{"seq": 251, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 252, "case": {"description": "ref to if", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://example.com/ref/if", "if": {"$id": "http://example.com/ref/if", "type": "integer"}}, "tests": [{"description": "a non-integer is invalid due to the $ref", "instance": "foo", "valid": false}, {"description": "an integer is valid", "instance": 12, "valid": true}]}}
{"seq": 252, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "js-ajv", "expected": [false, true], "context": {"traceback": "Error: strict mode: \"if\" without \"then\" and \"else\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/if.js:17:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"if\" without \"then\" and \"else\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 252, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 252, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "case": {"description": "ref to then", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://example.com/ref/then", "then": {"$id": "http://example.com/ref/then", "type": "integer"}}, "tests": [{"description": "a non-integer is invalid due to the $ref", "instance": "foo", "valid": false}, {"description": "an integer is valid", "instance": 12, "valid": true}]}}
{"seq": 253, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "js-ajv", "expected": [false, true], "context": {"traceback": "Error: strict mode: \"then\" without \"if\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/thenElse.js:9:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"then\" without \"if\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 253, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 253, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "case": {"description": "ref to else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://example.com/ref/else", "else": {"$id": "http://example.com/ref/else", "type": "integer"}}, "tests": [{"description": "a non-integer is invalid due to the $ref", "instance": "foo", "valid": false}, {"description": "an integer is valid", "instance": 12, "valid": true}]}}
{"seq": 254, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "js-ajv", "expected": [false, true], "context": {"traceback": "Error: strict mode: \"else\" without \"if\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/thenElse.js:9:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"else\" without \"if\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 254, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 254, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 255, "case": {"description": "ref with absolute-path-reference", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://example.com/ref/absref.json", "$defs": {"a": {"$id": "http://example.com/ref/absref/foobar.json", "type": "number"}, "b": {"$id": "http://example.com/absref/foobar.json", "type": "string"}}, "$ref": "/absref/foobar.json"}, "tests": [{"description": "a string is valid", "instance": "foo", "valid": true}, {"description": "an integer is invalid", "instance": 12, "valid": false}]}}
{"seq": 255, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 255, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 255, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 255, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "case": {"description": "$id with file URI still resolves pointers - *nix", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "file:///folder/file.json", "$defs": {"foo": {"type": "number"}}, "$ref": "#/$defs/foo"}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}]}}
{"seq": 256, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}, {"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}]}
{"seq": 256, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 256, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "case": {"description": "$id with file URI still resolves pointers - windows", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "file:///c:/folder/file.json", "$defs": {"foo": {"type": "number"}}, "$ref": "#/$defs/foo"}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}]}}
{"seq": 257, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}, {"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}]}
{"seq": 257, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 257, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "case": {"description": "empty tokens in $ref json-pointer", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"": {"$defs": {"": {"type": "number"}}}}, "allOf": [{"$ref": "#/$defs//$defs/"}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}]}}
{"seq": 258, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "scala-mjs-validator", "expected": [true, false], "message": "This case is not yet implemented.", "skipped": true}
{"seq": 258, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 258, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 258, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 258, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "case": {"description": "remote ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/draft2020-12/integer.json"}, "tests": [{"description": "remote ref valid", "instance": 1, "valid": true}, {"description": "remote ref invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 259, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 259, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 259, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "case": {"description": "fragment within remote ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/draft2020-12/subSchemas.json#/$defs/integer"}, "tests": [{"description": "remote fragment valid", "instance": 1, "valid": true}, {"description": "remote fragment invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 260, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 260, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 260, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "case": {"description": "anchor within remote ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#foo"}, "tests": [{"description": "remote anchor valid", "instance": 1, "valid": true}, {"description": "remote anchor invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 261, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 261, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 261, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 261, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "case": {"description": "ref within remote ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/draft2020-12/subSchemas.json#/$defs/refToInteger"}, "tests": [{"description": "ref within ref valid", "instance": 1, "valid": true}, {"description": "ref within ref invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 262, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 262, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 262, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "case": {"description": "base URI change", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/", "items": {"$id": "baseUriChange/", "items": {"$ref": "folderInteger.json"}}}, "tests": [{"description": "base URI change ref valid", "instance": [[1]], "valid": true}, {"description": "base URI change ref invalid", "instance": [["a"]], "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 263, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 263, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 263, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "case": {"description": "base URI change - change folder", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/scope_change_defs1.json", "type": "object", "properties": {"list": {"$ref": "baseUriChangeFolder/"}}, "$defs": {"baz": {"$id": "baseUriChangeFolder/", "type": "array", "items": {"$ref": "folderInteger.json"}}}}, "tests": [{"description": "number is valid", "instance": {"list": [1]}, "valid": true}, {"description": "string is invalid", "instance": {"list": ["a"]}, "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 264, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 264, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 264, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "case": {"description": "base URI change - change folder in subschema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/scope_change_defs2.json", "type": "object", "properties": {"list": {"$ref": "baseUriChangeFolderInSubschema/#/$defs/bar"}}, "$defs": {"baz": {"$id": "baseUriChangeFolderInSubschema/", "$defs": {"bar": {"type": "array", "items": {"$ref": "folderInteger.json"}}}}}}, "tests": [{"description": "number is valid", "instance": {"list": [1]}, "valid": true}, {"description": "string is invalid", "instance": {"list": ["a"]}, "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 265, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 265, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 265, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 266, "case": {"description": "root ref in remote ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/object", "type": "object", "properties": {"name": {"$ref": "name-defs.json#/$defs/orNull"}}}, "tests": [{"description": "string is valid", "instance": {"name": "foo"}, "valid": true}, {"description": "null is valid", "instance": {"name": null}, "valid": true}, {"description": "object is invalid", "instance": {"name": {"name": null}}, "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 266, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 266, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 266, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 267, "case": {"description": "remote ref with ref to defs", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/schema-remote-ref-ref-defs1.json", "$ref": "ref-and-defs.json"}, "tests": [{"description": "invalid", "instance": {"bar": 1}, "valid": false}, {"description": "valid", "instance": {"bar": "a"}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 267, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 267, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 268, "case": {"description": "Location-independent identifier in remote ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json#/$defs/refToInteger"}, "tests": [{"description": "integer is valid", "instance": 1, "valid": true}, {"description": "string is invalid", "instance": "foo", "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 268, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 268, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 268, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 268, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 269, "case": {"description": "retrieved nested refs resolve relative to their URI not $id", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/some-id", "properties": {"name": {"$ref": "nested/foo-ref-string.json"}}}, "tests": [{"description": "number is invalid", "instance": {"name": {"foo": 1}}, "valid": false}, {"description": "string is valid", "instance": {"name": {"foo": "a"}}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 269, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 269, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "case": {"description": "remote HTTP ref with different $id", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/different-id-ref-string.json"}, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is valid", "instance": "foo", "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 270, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 270, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "case": {"description": "remote HTTP ref with different URN $id", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/urn-ref-string.json"}, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is valid", "instance": "foo", "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 271, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 271, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "case": {"description": "remote HTTP ref with nested absolute ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/nested-absolute-ref-to-string.json"}, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is valid", "instance": "foo", "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 272, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "context": {"message": "Either.right.get on Left", "traceback": "scala.util.Either$RightProjection.get(Either.scala:696)\nBowtieRcCirceJsonValidator.run(Harness.scala:74)\nBowtieRcCirceJsonValidator.operate(Harness.scala:25)\nBowtieRcCirceJsonValidator$.main(Harness.scala:150)\nBowtieRcCirceJsonValidator.main(Harness.scala)"}, "message": "", "caught": true, "errored": true}
{"seq": 272, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 272, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 273, "case": {"description": "$ref to $ref finds detached $anchor", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "http://localhost:1234/draft2020-12/detached-ref.json#/$defs/foo"}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 273, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: unknown keyword: \"$anchor\"\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkUnknownRules (/usr/app/node_modules/ajv/dist/compile/util.js:32:13)\n    at checkKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:120:34)\n    at subschemaCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:89:9)\n    at KeywordCxt.subschema (/usr/app/node_modules/ajv/dist/compile/validate/index.js:438:9)\n    at inlineRefSchema (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:38:32)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/core/ref.js:24:16)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:185:25\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: unknown keyword: \"$anchor\""}, "message": "", "caught": true, "errored": true}
{"seq": 273, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 273, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 273, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 274, "case": {"description": "required validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {}, "bar": {}}, "required": ["foo"]}, "tests": [{"description": "present required property is valid", "instance": {"foo": 1}, "valid": true}, {"description": "non-present required property is invalid", "instance": {"bar": 1}, "valid": false}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores strings", "instance": "", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 274, "implementation": "python-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "scala-mjs-validator", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "js-schemasafe", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "cpp-jsoncons", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "rust-boon", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "cpp-blaze", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "go-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "elixir-jsv", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "js-json-schema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "js-hyperjump", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "js-ajv", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "java-json-schema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "python-jschon", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 274, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 275, "case": {"description": "required default validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {}}}, "tests": [{"description": "not required by default", "instance": {}, "valid": true}]}}
{"seq": 275, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 275, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "case": {"description": "required with empty array", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {}}, "required": []}, "tests": [{"description": "property not required", "instance": {}, "valid": true}]}}
{"seq": 276, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 276, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 277, "case": {"description": "required with escaped characters", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "required": ["foo\nbar", "foo\"bar", "foo\\bar", "foo\rbar", "foo\tbar", "foo\fbar"]}, "tests": [{"description": "object with all properties present is valid", "instance": {"foo\nbar": 1, "foo\"bar": 1, "foo\\bar": 1, "foo\rbar": 1, "foo\tbar": 1, "foo\fbar": 1}, "valid": true}, {"description": "object with some properties missing is invalid", "instance": {"foo\nbar": "1", "foo\"bar": "1"}, "valid": false}]}}
{"seq": 277, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 277, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 278, "case": {"description": "required properties whose names are Javascript object property names", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "required": ["__proto__", "toString", "constructor"]}, "tests": [{"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}, {"description": "none of the properties mentioned", "instance": {}, "valid": false}, {"description": "__proto__ present", "instance": {"__proto__": "foo"}, "valid": false}, {"description": "toString present", "instance": {"toString": {"length": 37}}, "valid": false}, {"description": "constructor present", "instance": {"constructor": {"length": 37}}, "valid": false}, {"description": "all present", "instance": {"__proto__": 12, "toString": {"length": "foo"}, "constructor": 37}, "valid": true}], "comment": "Ensure JS implementations don't universally consider e.g. __proto__ to always be present in an object."}}
{"seq": 278, "implementation": "python-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "js-ajv", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 278, "implementation": "elixir-jsv", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "js-hyperjump", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "rust-boon", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "js-schemasafe", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "go-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "js-json-schema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 278, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "cpp-blaze", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "java-json-schema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "python-jschon", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 278, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 279, "case": {"description": "integer type matches integers", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "tests": [{"description": "an integer is an integer", "instance": 1, "valid": true}, {"description": "a float with zero fractional part is an integer", "instance": 1.0, "valid": true}, {"description": "a float is not an integer", "instance": 1.1, "valid": false}, {"description": "a string is not an integer", "instance": "foo", "valid": false}, {"description": "a string is still not an integer, even if it looks like one", "instance": "1", "valid": false}, {"description": "an object is not an integer", "instance": {}, "valid": false}, {"description": "an array is not an integer", "instance": [], "valid": false}, {"description": "a boolean is not an integer", "instance": true, "valid": false}, {"description": "null is not an integer", "instance": null, "valid": false}]}}
{"seq": 279, "implementation": "python-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "js-json-schema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "elixir-jsv", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "cpp-blaze", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "js-schemasafe", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "rust-boon", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "go-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "js-ajv", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "js-hyperjump", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "java-json-schema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 279, "implementation": "python-jschon", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "case": {"description": "number type matches numbers", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "number"}, "tests": [{"description": "an integer is a number", "instance": 1, "valid": true}, {"description": "a float with zero fractional part is a number (and an integer)", "instance": 1.0, "valid": true}, {"description": "a float is a number", "instance": 1.1, "valid": true}, {"description": "a string is not a number", "instance": "foo", "valid": false}, {"description": "a string is still not a number, even if it looks like one", "instance": "1", "valid": false}, {"description": "an object is not a number", "instance": {}, "valid": false}, {"description": "an array is not a number", "instance": [], "valid": false}, {"description": "a boolean is not a number", "instance": true, "valid": false}, {"description": "null is not a number", "instance": null, "valid": false}]}}
{"seq": 280, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "js-json-schema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "scala-mjs-validator", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "elixir-jsv", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "cpp-jsoncons", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "js-ajv", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "cpp-blaze", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "rust-boon", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "java-json-schema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "python-jschon", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 280, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "case": {"description": "string type matches strings", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "tests": [{"description": "1 is not a string", "instance": 1, "valid": false}, {"description": "a float is not a string", "instance": 1.1, "valid": false}, {"description": "a string is a string", "instance": "foo", "valid": true}, {"description": "a string is still a string, even if it looks like a number", "instance": "1", "valid": true}, {"description": "an empty string is still a string", "instance": "", "valid": true}, {"description": "an object is not a string", "instance": {}, "valid": false}, {"description": "an array is not a string", "instance": [], "valid": false}, {"description": "a boolean is not a string", "instance": true, "valid": false}, {"description": "null is not a string", "instance": null, "valid": false}]}}
{"seq": 281, "implementation": "python-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "ruby-json_schemer", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "cpp-blaze", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "js-schemasafe", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "elixir-jsv", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "js-json-schema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "rust-boon", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "scala-mjs-validator", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "php-opis-json-schema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "cpp-jsoncons", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "rust-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "js-ajv", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "go-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "js-hyperjump", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "java-jsonschemafriend", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "java-openapiprocessor", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "java-json-schema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 281, "implementation": "python-jschon", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "case": {"description": "object type matches objects", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object"}, "tests": [{"description": "an integer is not an object", "instance": 1, "valid": false}, {"description": "a float is not an object", "instance": 1.1, "valid": false}, {"description": "a string is not an object", "instance": "foo", "valid": false}, {"description": "an object is an object", "instance": {}, "valid": true}, {"description": "an array is not an object", "instance": [], "valid": false}, {"description": "a boolean is not an object", "instance": true, "valid": false}, {"description": "null is not an object", "instance": null, "valid": false}]}}
{"seq": 282, "implementation": "python-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "js-json-schema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "elixir-jsv", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "scala-mjs-validator", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "rust-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "js-hyperjump", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "cpp-blaze", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "cpp-jsoncons", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "js-ajv", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "ruby-json_schemer", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "js-schemasafe", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "java-openapiprocessor", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "php-opis-json-schema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "rust-boon", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "go-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "java-jsonschemafriend", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "java-json-schema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 282, "implementation": "python-jschon", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 283, "case": {"description": "array type matches arrays", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "array"}, "tests": [{"description": "an integer is not an array", "instance": 1, "valid": false}, {"description": "a float is not an array", "instance": 1.1, "valid": false}, {"description": "a string is not an array", "instance": "foo", "valid": false}, {"description": "an object is not an array", "instance": {}, "valid": false}, {"description": "an array is an array", "instance": [], "valid": true}, {"description": "a boolean is not an array", "instance": true, "valid": false}, {"description": "null is not an array", "instance": null, "valid": false}]}}
{"seq": 283, "implementation": "python-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "rust-boon", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "js-hyperjump", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "go-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "js-schemasafe", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "cpp-blaze", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "scala-mjs-validator", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "js-json-schema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "cpp-jsoncons", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "rust-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "elixir-jsv", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "js-ajv", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "java-json-schema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "python-jschon", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 283, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 284, "case": {"description": "boolean type matches booleans", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "boolean"}, "tests": [{"description": "an integer is not a boolean", "instance": 1, "valid": false}, {"description": "zero is not a boolean", "instance": 0, "valid": false}, {"description": "a float is not a boolean", "instance": 1.1, "valid": false}, {"description": "a string is not a boolean", "instance": "foo", "valid": false}, {"description": "an empty string is not a boolean", "instance": "", "valid": false}, {"description": "an object is not a boolean", "instance": {}, "valid": false}, {"description": "an array is not a boolean", "instance": [], "valid": false}, {"description": "true is a boolean", "instance": true, "valid": true}, {"description": "false is a boolean", "instance": false, "valid": true}, {"description": "null is not a boolean", "instance": null, "valid": false}]}}
{"seq": 284, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "elixir-jsv", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "cpp-blaze", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "js-json-schema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "cpp-jsoncons", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "scala-mjs-validator", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "java-json-schema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 284, "implementation": "python-jschon", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 285, "case": {"description": "null type matches only the null object", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "null"}, "tests": [{"description": "an integer is not null", "instance": 1, "valid": false}, {"description": "a float is not null", "instance": 1.1, "valid": false}, {"description": "zero is not null", "instance": 0, "valid": false}, {"description": "a string is not null", "instance": "foo", "valid": false}, {"description": "an empty string is not null", "instance": "", "valid": false}, {"description": "an object is not null", "instance": {}, "valid": false}, {"description": "an array is not null", "instance": [], "valid": false}, {"description": "true is not null", "instance": true, "valid": false}, {"description": "false is not null", "instance": false, "valid": false}, {"description": "null is null", "instance": null, "valid": true}]}}
{"seq": 285, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "cpp-jsoncons", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "scala-mjs-validator", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "js-json-schema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "elixir-jsv", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "cpp-blaze", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "java-json-schema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 285, "implementation": "python-jschon", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 286, "case": {"description": "multiple types can be specified in an array", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": ["integer", "string"]}, "tests": [{"description": "an integer is valid", "instance": 1, "valid": true}, {"description": "a string is valid", "instance": "foo", "valid": true}, {"description": "a float is invalid", "instance": 1.1, "valid": false}, {"description": "an object is invalid", "instance": {}, "valid": false}, {"description": "an array is invalid", "instance": [], "valid": false}, {"description": "a boolean is invalid", "instance": true, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}]}}
{"seq": 286, "implementation": "python-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "cpp-blaze", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "js-json-schema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "elixir-jsv", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "js-schemasafe", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "js-ajv", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "rust-boon", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "go-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "js-hyperjump", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "java-json-schema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "python-jschon", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 286, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 287, "case": {"description": "type as array with one item", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": ["string"]}, "tests": [{"description": "string is valid", "instance": "foo", "valid": true}, {"description": "number is invalid", "instance": 123, "valid": false}]}}
{"seq": 287, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 287, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 288, "case": {"description": "type: array or object", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": ["array", "object"]}, "tests": [{"description": "array is valid", "instance": [1, 2, 3], "valid": true}, {"description": "object is valid", "instance": {"foo": 123}, "valid": true}, {"description": "number is invalid", "instance": 123, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}]}}
{"seq": 288, "implementation": "python-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "js-ajv", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "cpp-blaze", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "js-schemasafe", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "rust-boon", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "elixir-jsv", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "js-hyperjump", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "go-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "js-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "java-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "python-jschon", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 288, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 289, "case": {"description": "type: array, object or null", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": ["array", "object", "null"]}, "tests": [{"description": "array is valid", "instance": [1, 2, 3], "valid": true}, {"description": "object is valid", "instance": {"foo": 123}, "valid": true}, {"description": "null is valid", "instance": null, "valid": true}, {"description": "number is invalid", "instance": 123, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}]}}
{"seq": 289, "implementation": "python-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "cpp-blaze", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "js-hyperjump", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "rust-boon", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "go-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "cpp-jsoncons", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "elixir-jsv", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "js-json-schema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "scala-mjs-validator", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "js-schemasafe", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "js-ajv", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "java-json-schema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "python-jschon", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 289, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 290, "case": {"description": "unevaluatedItems true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedItems": true}, "tests": [{"description": "with no unevaluated items", "instance": [], "valid": true}, {"description": "with unevaluated items", "instance": ["foo"], "valid": true}]}}
{"seq": 290, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 290, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 291, "case": {"description": "unevaluatedItems false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedItems": false}, "tests": [{"description": "with no unevaluated items", "instance": [], "valid": true}, {"description": "with unevaluated items", "instance": ["foo"], "valid": false}]}}
{"seq": 291, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 291, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 292, "case": {"description": "unevaluatedItems as schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedItems": {"type": "string"}}, "tests": [{"description": "with no unevaluated items", "instance": [], "valid": true}, {"description": "with valid unevaluated items", "instance": ["foo"], "valid": true}, {"description": "with invalid unevaluated items", "instance": [42], "valid": false}]}}
{"seq": 292, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 292, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 293, "case": {"description": "unevaluatedItems with uniform items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "items": {"type": "string"}, "unevaluatedItems": false}, "tests": [{"description": "unevaluatedItems doesn't apply", "instance": ["foo", "bar"], "valid": true}]}}
{"seq": 293, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 293, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 294, "case": {"description": "unevaluatedItems with tuple", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}], "unevaluatedItems": false}, "tests": [{"description": "with no unevaluated items", "instance": ["foo"], "valid": true}, {"description": "with unevaluated items", "instance": ["foo", "bar"], "valid": false}]}}
{"seq": 294, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 294, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 295, "case": {"description": "unevaluatedItems with items and prefixItems", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}], "items": true, "unevaluatedItems": false}, "tests": [{"description": "unevaluatedItems doesn't apply", "instance": ["foo", 42], "valid": true}]}}
{"seq": 295, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 295, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 296, "case": {"description": "unevaluatedItems with items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "items": {"type": "number"}, "unevaluatedItems": {"type": "string"}}, "tests": [{"description": "valid under items", "instance": [5, 6, 7, 8], "valid": true, "comment": "no elements are considered by unevaluatedItems"}, {"description": "invalid under items", "instance": ["foo", "bar", "baz"], "valid": false}]}}
{"seq": 296, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 296, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "case": {"description": "unevaluatedItems with nested tuple", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}], "allOf": [{"prefixItems": [true, {"type": "number"}]}], "unevaluatedItems": false}, "tests": [{"description": "with no unevaluated items", "instance": ["foo", 42], "valid": true}, {"description": "with unevaluated items", "instance": ["foo", 42, true], "valid": false}]}}
{"seq": 297, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 297, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 298, "case": {"description": "unevaluatedItems with nested items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedItems": {"type": "boolean"}, "anyOf": [{"items": {"type": "string"}}, true]}, "tests": [{"description": "with only (valid) additional items", "instance": [true, false], "valid": true}, {"description": "with no additional items", "instance": ["yes", "no"], "valid": true}, {"description": "with invalid additional item", "instance": ["yes", false], "valid": false}]}}
{"seq": 298, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 298, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 298, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 298, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 299, "case": {"description": "unevaluatedItems with nested prefixItems and items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"prefixItems": [{"type": "string"}], "items": true}], "unevaluatedItems": false}, "tests": [{"description": "with no additional items", "instance": ["foo"], "valid": true}, {"description": "with additional items", "instance": ["foo", 42, true], "valid": true}]}}
{"seq": 299, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 299, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "case": {"description": "unevaluatedItems with nested unevaluatedItems", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"prefixItems": [{"type": "string"}]}, {"unevaluatedItems": true}], "unevaluatedItems": false}, "tests": [{"description": "with no additional items", "instance": ["foo"], "valid": true}, {"description": "with additional items", "instance": ["foo", 42, true], "valid": true}]}}
{"seq": 300, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 300, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 301, "case": {"description": "unevaluatedItems with anyOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"const": "foo"}], "anyOf": [{"prefixItems": [true, {"const": "bar"}]}, {"prefixItems": [true, true, {"const": "baz"}]}], "unevaluatedItems": false}, "tests": [{"description": "when one schema matches and has no unevaluated items", "instance": ["foo", "bar"], "valid": true}, {"description": "when one schema matches and has unevaluated items", "instance": ["foo", "bar", 42], "valid": false}, {"description": "when two schemas match and has no unevaluated items", "instance": ["foo", "bar", "baz"], "valid": true}, {"description": "when two schemas match and has unevaluated items", "instance": ["foo", "bar", "baz", 42], "valid": false}]}}
{"seq": 301, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "cpp-blaze", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "elixir-jsv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "cpp-jsoncons", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "js-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "scala-mjs-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "java-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "python-jschon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 301, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 302, "case": {"description": "unevaluatedItems with oneOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"const": "foo"}], "oneOf": [{"prefixItems": [true, {"const": "bar"}]}, {"prefixItems": [true, {"const": "baz"}]}], "unevaluatedItems": false}, "tests": [{"description": "with no unevaluated items", "instance": ["foo", "bar"], "valid": true}, {"description": "with unevaluated items", "instance": ["foo", "bar", 42], "valid": false}]}}
{"seq": 302, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 302, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 303, "case": {"description": "unevaluatedItems with not", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"const": "foo"}], "not": {"not": {"prefixItems": [true, {"const": "bar"}]}}, "unevaluatedItems": false}, "tests": [{"description": "with unevaluated items", "instance": ["foo", "bar"], "valid": false}]}}
{"seq": 303, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 303, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 304, "case": {"description": "unevaluatedItems with if/then/else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"const": "foo"}], "if": {"prefixItems": [true, {"const": "bar"}]}, "then": {"prefixItems": [true, true, {"const": "then"}]}, "else": {"prefixItems": [true, true, true, {"const": "else"}]}, "unevaluatedItems": false}, "tests": [{"description": "when if matches and it has no unevaluated items", "instance": ["foo", "bar", "then"], "valid": true}, {"description": "when if matches and it has unevaluated items", "instance": ["foo", "bar", "then", "else"], "valid": false}, {"description": "when if doesn't match and it has no unevaluated items", "instance": ["foo", 42, 42, "else"], "valid": true}, {"description": "when if doesn't match and it has unevaluated items", "instance": ["foo", 42, 42, "else", 42], "valid": false}]}}
{"seq": 304, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "cpp-jsoncons", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "js-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "scala-mjs-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "java-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "elixir-jsv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "cpp-blaze", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "python-jschon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 304, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 305, "case": {"description": "unevaluatedItems with boolean schemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [true], "unevaluatedItems": false}, "tests": [{"description": "with no unevaluated items", "instance": [], "valid": true}, {"description": "with unevaluated items", "instance": ["foo"], "valid": false}]}}
{"seq": 305, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 305, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "case": {"description": "unevaluatedItems with $ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$ref": "#/$defs/bar", "prefixItems": [{"type": "string"}], "unevaluatedItems": false, "$defs": {"bar": {"prefixItems": [true, {"type": "string"}]}}}, "tests": [{"description": "with no unevaluated items", "instance": ["foo", "bar"], "valid": true}, {"description": "with unevaluated items", "instance": ["foo", "bar", "baz"], "valid": false}]}}
{"seq": 306, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 306, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "case": {"description": "unevaluatedItems before $ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedItems": false, "prefixItems": [{"type": "string"}], "$ref": "#/$defs/bar", "$defs": {"bar": {"prefixItems": [true, {"type": "string"}]}}}, "tests": [{"description": "with no unevaluated items", "instance": ["foo", "bar"], "valid": true}, {"description": "with unevaluated items", "instance": ["foo", "bar", "baz"], "valid": false}]}}
{"seq": 307, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 307, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 307, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "case": {"description": "unevaluatedItems with $dynamicRef", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://example.com/unevaluated-items-with-dynamic-ref/derived", "$ref": "./baseSchema", "$defs": {"derived": {"$dynamicAnchor": "addons", "prefixItems": [true, {"type": "string"}]}, "baseSchema": {"$id": "./baseSchema", "$comment": "unevaluatedItems comes first so it's more likely to catch bugs with implementations that are sensitive to keyword ordering", "unevaluatedItems": false, "type": "array", "prefixItems": [{"type": "string"}], "$dynamicRef": "#addons", "$defs": {"defaultAddons": {"$comment": "Needed to satisfy the bookending requirement", "$dynamicAnchor": "addons"}}}}}, "tests": [{"description": "with no unevaluated items", "instance": ["foo", "bar"], "valid": true}, {"description": "with unevaluated items", "instance": ["foo", "bar", "baz"], "valid": false}]}}
{"seq": 308, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 308, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 308, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"context": {"traceback": "TypeError: Cannot read properties of null (reading '0')\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:14:98)\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:11:8)\n    at file:///usr/app/bowtie_schemasafe.js:83:27\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_schemasafe.js:81:32)\n    at main (file:///usr/app/bowtie_schemasafe.js:116:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Cannot read properties of null (reading '0')"}, "errored": true, "skipped": false}, {"context": {"traceback": "TypeError: Cannot read properties of null (reading '0')\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:14:98)\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:11:8)\n    at file:///usr/app/bowtie_schemasafe.js:83:27\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_schemasafe.js:81:32)\n    at main (file:///usr/app/bowtie_schemasafe.js:116:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Cannot read properties of null (reading '0')"}, "errored": true, "skipped": false}]}
{"seq": 308, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "js-ajv", "expected": [true, false], "results": [{"context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:367)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)", "message": "Maximum call stack size exceeded"}, "errored": true, "skipped": false}, {"context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:367)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate400 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)", "message": "Maximum call stack size exceeded"}, "errored": true, "skipped": false}]}
{"seq": 308, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 308, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 308, "implementation": "php-opis-json-schema", "expected": [true, false], "context": {"stderr": "Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /usr/src/myapp/vendor/opis/json-schema/src/Keywords/ItemsKeyword.php on line 73\n"}, "message": "uncaught error", "caught": false, "errored": true}
{"seq": 309, "case": {"description": "unevaluatedItems can't see inside cousins", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"prefixItems": [true]}, {"unevaluatedItems": false}]}, "tests": [{"description": "always fails", "instance": [1], "valid": false}]}}
{"seq": 309, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 309, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 310, "case": {"description": "item is evaluated in an uncle schema to unevaluatedItems", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo": {"prefixItems": [{"type": "string"}], "unevaluatedItems": false}}, "anyOf": [{"properties": {"foo": {"prefixItems": [true, {"type": "string"}]}}}]}, "tests": [{"description": "no extra items", "instance": {"foo": ["test"]}, "valid": true}, {"description": "uncle keyword evaluation is not significant", "instance": {"foo": ["test", "test"]}, "valid": false}]}}
{"seq": 310, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 310, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 311, "case": {"description": "unevaluatedItems depends on adjacent contains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [true], "contains": {"type": "string"}, "unevaluatedItems": false}, "tests": [{"description": "second item is evaluated by contains", "instance": [1, "foo"], "valid": true}, {"description": "contains fails, second item is not evaluated", "instance": [1, 2], "valid": false}, {"description": "contains passes, second item is not evaluated", "instance": [1, 2, "foo"], "valid": false}]}}
{"seq": 311, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "elixir-jsv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "js-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "cpp-jsoncons", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 311, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "cpp-blaze", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 311, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "scala-mjs-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "java-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "python-jschon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 311, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 312, "case": {"description": "unevaluatedItems depends on multiple nested contains", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"contains": {"multipleOf": 2}}, {"contains": {"multipleOf": 3}}], "unevaluatedItems": {"multipleOf": 5}}, "tests": [{"description": "5 not evaluated, passes unevaluatedItems", "instance": [2, 3, 4, 5, 6], "valid": true}, {"description": "7 not evaluated, fails unevaluatedItems", "instance": [2, 3, 4, 7, 8], "valid": false}]}}
{"seq": 312, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 312, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 312, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 312, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 313, "case": {"description": "unevaluatedItems and contains interact to control item dependency relationship", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": {"contains": {"const": "a"}}, "then": {"if": {"contains": {"const": "b"}}, "then": {"if": {"contains": {"const": "c"}}}}, "unevaluatedItems": false}, "tests": [{"description": "empty array is valid", "instance": [], "valid": true}, {"description": "only a's are valid", "instance": ["a", "a"], "valid": true}, {"description": "a's and b's are valid", "instance": ["a", "b", "a", "b", "a"], "valid": true}, {"description": "a's, b's and c's are valid", "instance": ["c", "a", "c", "c", "b", "a"], "valid": true}, {"description": "only b's are invalid", "instance": ["b", "b"], "valid": false}, {"description": "only c's are invalid", "instance": ["c", "c"], "valid": false}, {"description": "only b's and c's are invalid", "instance": ["c", "b", "c", "b", "c"], "valid": false}, {"description": "only a's and c's are invalid", "instance": ["c", "a", "c", "a", "c"], "valid": false}]}}
{"seq": 313, "implementation": "python-jsonschema", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "elixir-jsv", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "js-hyperjump", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "js-schemasafe", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "go-jsonschema", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 313, "implementation": "rust-boon", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "cpp-blaze", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "js-json-schema", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "js-ajv", "expected": [true, true, true, true, false, false, false, false], "context": {"traceback": "Error: strict mode: \"if\" without \"then\" and \"else\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/if.js:17:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"if\" without \"then\" and \"else\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 313, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "java-json-schema", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "python-jschon", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "rust-jsonschema", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 313, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 314, "case": {"description": "non-array instances are valid", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedItems": false}, "tests": [{"description": "ignores booleans", "instance": true, "valid": true}, {"description": "ignores integers", "instance": 123, "valid": true}, {"description": "ignores floats", "instance": 1.0, "valid": true}, {"description": "ignores objects", "instance": {}, "valid": true}, {"description": "ignores strings", "instance": "foo", "valid": true}, {"description": "ignores null", "instance": null, "valid": true}]}}
{"seq": 314, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "python-jschon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 314, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 315, "case": {"description": "unevaluatedItems with null instance elements", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedItems": {"type": "null"}}, "tests": [{"description": "allows null elements", "instance": [null], "valid": true}]}}
{"seq": 315, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 315, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 316, "case": {"description": "unevaluatedItems can see annotations from if without then and else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": {"prefixItems": [{"const": "a"}]}, "unevaluatedItems": false}, "tests": [{"description": "valid in case if is evaluated", "instance": ["a"], "valid": true}, {"description": "invalid in case if is evaluated", "instance": ["b"], "valid": false}]}}
{"seq": 316, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 316, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 316, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 316, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: \"if\" without \"then\" and \"else\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/if.js:17:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"if\" without \"then\" and \"else\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 316, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 316, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 316, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 317, "case": {"description": "unevaluatedProperties true", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "unevaluatedProperties": true}, "tests": [{"description": "with no unevaluated properties", "instance": {}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo"}, "valid": true}]}}
{"seq": 317, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 317, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 318, "case": {"description": "unevaluatedProperties schema", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "unevaluatedProperties": {"type": "string", "minLength": 3}}, "tests": [{"description": "with no unevaluated properties", "instance": {}, "valid": true}, {"description": "with valid unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with invalid unevaluated properties", "instance": {"foo": "fo"}, "valid": false}]}}
{"seq": 318, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "js-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "elixir-jsv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "cpp-blaze", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "scala-mjs-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "java-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "cpp-jsoncons", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "python-jschon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 318, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 319, "case": {"description": "unevaluatedProperties false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "unevaluatedProperties": false}, "tests": [{"description": "with no unevaluated properties", "instance": {}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo"}, "valid": false}]}}
{"seq": 319, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 319, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "case": {"description": "unevaluatedProperties with adjacent properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "unevaluatedProperties": false}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": false}]}}
{"seq": 320, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 320, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "case": {"description": "unevaluatedProperties with adjacent patternProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "patternProperties": {"^foo": {"type": "string"}}, "unevaluatedProperties": false}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": false}]}}
{"seq": 321, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 321, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 322, "case": {"description": "unevaluatedProperties with adjacent additionalProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "additionalProperties": true, "unevaluatedProperties": false}, "tests": [{"description": "with no additional properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with additional properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}]}}
{"seq": 322, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 322, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 323, "case": {"description": "unevaluatedProperties with nested properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "allOf": [{"properties": {"bar": {"type": "string"}}}], "unevaluatedProperties": false}, "tests": [{"description": "with no additional properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "with additional properties", "instance": {"foo": "foo", "bar": "bar", "baz": "baz"}, "valid": false}]}}
{"seq": 323, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 323, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "case": {"description": "unevaluatedProperties with nested patternProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "allOf": [{"patternProperties": {"^bar": {"type": "string"}}}], "unevaluatedProperties": false}, "tests": [{"description": "with no additional properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "with additional properties", "instance": {"foo": "foo", "bar": "bar", "baz": "baz"}, "valid": false}]}}
{"seq": 324, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 324, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 325, "case": {"description": "unevaluatedProperties with nested additionalProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "allOf": [{"additionalProperties": true}], "unevaluatedProperties": false}, "tests": [{"description": "with no additional properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with additional properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}]}}
{"seq": 325, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 325, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "case": {"description": "unevaluatedProperties with nested unevaluatedProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "allOf": [{"unevaluatedProperties": true}], "unevaluatedProperties": {"type": "string", "maxLength": 2}}, "tests": [{"description": "with no nested unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with nested unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}]}}
{"seq": 326, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 326, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 327, "case": {"description": "unevaluatedProperties with anyOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "anyOf": [{"properties": {"bar": {"const": "bar"}}, "required": ["bar"]}, {"properties": {"baz": {"const": "baz"}}, "required": ["baz"]}, {"properties": {"quux": {"const": "quux"}}, "required": ["quux"]}], "unevaluatedProperties": false}, "tests": [{"description": "when one matches and has no unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "when one matches and has unevaluated properties", "instance": {"foo": "foo", "bar": "bar", "baz": "not-baz"}, "valid": false}, {"description": "when two match and has no unevaluated properties", "instance": {"foo": "foo", "bar": "bar", "baz": "baz"}, "valid": true}, {"description": "when two match and has unevaluated properties", "instance": {"foo": "foo", "bar": "bar", "baz": "baz", "quux": "not-quux"}, "valid": false}]}}
{"seq": 327, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "elixir-jsv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "cpp-jsoncons", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "js-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "cpp-blaze", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "scala-mjs-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "java-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "python-jschon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 327, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 328, "case": {"description": "unevaluatedProperties with oneOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "oneOf": [{"properties": {"bar": {"const": "bar"}}, "required": ["bar"]}, {"properties": {"baz": {"const": "baz"}}, "required": ["baz"]}], "unevaluatedProperties": false}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo", "bar": "bar", "quux": "quux"}, "valid": false}]}}
{"seq": 328, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 328, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 329, "case": {"description": "unevaluatedProperties with not", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "not": {"not": {"properties": {"bar": {"const": "bar"}}, "required": ["bar"]}}, "unevaluatedProperties": false}, "tests": [{"description": "with unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": false}]}}
{"seq": 329, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 329, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 330, "case": {"description": "unevaluatedProperties with if/then/else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "if": {"properties": {"foo": {"const": "then"}}, "required": ["foo"]}, "then": {"properties": {"bar": {"type": "string"}}, "required": ["bar"]}, "else": {"properties": {"baz": {"type": "string"}}, "required": ["baz"]}, "unevaluatedProperties": false}, "tests": [{"description": "when if is true and has no unevaluated properties", "instance": {"foo": "then", "bar": "bar"}, "valid": true}, {"description": "when if is true and has unevaluated properties", "instance": {"foo": "then", "bar": "bar", "baz": "baz"}, "valid": false}, {"description": "when if is false and has no unevaluated properties", "instance": {"baz": "baz"}, "valid": true}, {"description": "when if is false and has unevaluated properties", "instance": {"foo": "else", "baz": "baz"}, "valid": false}]}}
{"seq": 330, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "js-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "cpp-jsoncons", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 330, "implementation": "cpp-blaze", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "elixir-jsv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "scala-mjs-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "java-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "python-jschon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 330, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "case": {"description": "unevaluatedProperties with if/then/else, then not defined", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "if": {"properties": {"foo": {"const": "then"}}, "required": ["foo"]}, "else": {"properties": {"baz": {"type": "string"}}, "required": ["baz"]}, "unevaluatedProperties": false}, "tests": [{"description": "when if is true and has no unevaluated properties", "instance": {"foo": "then", "bar": "bar"}, "valid": false}, {"description": "when if is true and has unevaluated properties", "instance": {"foo": "then", "bar": "bar", "baz": "baz"}, "valid": false}, {"description": "when if is false and has no unevaluated properties", "instance": {"baz": "baz"}, "valid": true}, {"description": "when if is false and has unevaluated properties", "instance": {"foo": "else", "baz": "baz"}, "valid": false}]}}
{"seq": 331, "implementation": "python-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "elixir-jsv", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "js-schemasafe", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "ruby-json_schemer", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "scala-mjs-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "js-hyperjump", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "rust-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "rust-boon", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "go-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "php-opis-json-schema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 331, "implementation": "js-ajv", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 331, "implementation": "cpp-jsoncons", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "js-json-schema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "java-openapiprocessor", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "cpp-blaze", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "java-jsonschemafriend", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "java-json-schema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "python-jschon", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 331, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 332, "case": {"description": "unevaluatedProperties with if/then/else, else not defined", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "if": {"properties": {"foo": {"const": "then"}}, "required": ["foo"]}, "then": {"properties": {"bar": {"type": "string"}}, "required": ["bar"]}, "unevaluatedProperties": false}, "tests": [{"description": "when if is true and has no unevaluated properties", "instance": {"foo": "then", "bar": "bar"}, "valid": true}, {"description": "when if is true and has unevaluated properties", "instance": {"foo": "then", "bar": "bar", "baz": "baz"}, "valid": false}, {"description": "when if is false and has no unevaluated properties", "instance": {"baz": "baz"}, "valid": false}, {"description": "when if is false and has unevaluated properties", "instance": {"foo": "else", "baz": "baz"}, "valid": false}]}}
{"seq": 332, "implementation": "python-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "js-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "rust-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "php-opis-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "js-schemasafe", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "go-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "cpp-jsoncons", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "rust-boon", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "elixir-jsv", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "ruby-json_schemer", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "js-ajv", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "js-hyperjump", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "cpp-blaze", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "java-openapiprocessor", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "scala-mjs-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "java-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "python-jschon", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 332, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 333, "case": {"description": "unevaluatedProperties with dependentSchemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "dependentSchemas": {"foo": {"properties": {"bar": {"const": "bar"}}, "required": ["bar"]}}, "unevaluatedProperties": false}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"bar": "bar"}, "valid": false}]}}
{"seq": 333, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 333, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 333, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "case": {"description": "unevaluatedProperties with boolean schemas", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "allOf": [true], "unevaluatedProperties": false}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"bar": "bar"}, "valid": false}]}}
{"seq": 334, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 334, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "case": {"description": "unevaluatedProperties with $ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "$ref": "#/$defs/bar", "properties": {"foo": {"type": "string"}}, "unevaluatedProperties": false, "$defs": {"bar": {"properties": {"bar": {"type": "string"}}}}}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo", "bar": "bar", "baz": "baz"}, "valid": false}]}}
{"seq": 335, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 335, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 335, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "case": {"description": "unevaluatedProperties before $ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "unevaluatedProperties": false, "properties": {"foo": {"type": "string"}}, "$ref": "#/$defs/bar", "$defs": {"bar": {"properties": {"bar": {"type": "string"}}}}}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo", "bar": "bar", "baz": "baz"}, "valid": false}]}}
{"seq": 336, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 336, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 336, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 336, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "case": {"description": "unevaluatedProperties with $dynamicRef", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://example.com/unevaluated-properties-with-dynamic-ref/derived", "$ref": "./baseSchema", "$defs": {"derived": {"$dynamicAnchor": "addons", "properties": {"bar": {"type": "string"}}}, "baseSchema": {"$id": "./baseSchema", "$comment": "unevaluatedProperties comes first so it's more likely to catch bugs with implementations that are sensitive to keyword ordering", "unevaluatedProperties": false, "type": "object", "properties": {"foo": {"type": "string"}}, "$dynamicRef": "#addons", "$defs": {"defaultAddons": {"$comment": "Needed to satisfy the bookending requirement", "$dynamicAnchor": "addons"}}}}}, "tests": [{"description": "with no unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "with unevaluated properties", "instance": {"foo": "foo", "bar": "bar", "baz": "baz"}, "valid": false}]}}
{"seq": 337, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"context": {"traceback": "TypeError: Cannot read properties of null (reading '0')\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:14:98)\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:11:8)\n    at file:///usr/app/bowtie_schemasafe.js:83:27\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_schemasafe.js:81:32)\n    at main (file:///usr/app/bowtie_schemasafe.js:116:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Cannot read properties of null (reading '0')"}, "errored": true, "skipped": false}, {"context": {"traceback": "TypeError: Cannot read properties of null (reading '0')\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:14:98)\n    at validate (eval at makeFunction (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:101:14), <anonymous>:11:8)\n    at file:///usr/app/bowtie_schemasafe.js:83:27\n    at Array.map (<anonymous>)\n    at Object.run (file:///usr/app/bowtie_schemasafe.js:81:32)\n    at main (file:///usr/app/bowtie_schemasafe.js:116:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)", "message": "Cannot read properties of null (reading '0')"}, "errored": true, "skipped": false}]}
{"seq": 337, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 337, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 337, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "js-ajv", "expected": [true, false], "results": [{"context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:367)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)", "message": "Maximum call stack size exceeded"}, "errored": true, "skipped": false}, {"context": {"traceback": "RangeError: Maximum call stack size exceeded\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:367)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)\n    at validate431 (eval at compileSchema (/usr/app/node_modules/ajv/dist/compile/index.js:89:30), <anonymous>:3:355)", "message": "Maximum call stack size exceeded"}, "errored": true, "skipped": false}]}
{"seq": 337, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 337, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 337, "implementation": "php-opis-json-schema", "expected": [true, false], "context": {"stderr": "Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /usr/src/myapp/vendor/opis/json-schema/src/ValidationContext.php on line 204\n"}, "message": "uncaught error", "caught": false, "errored": true}
{"seq": 338, "case": {"description": "unevaluatedProperties can't see inside cousins", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"properties": {"foo": true}}, {"unevaluatedProperties": false}]}, "tests": [{"description": "always fails", "instance": {"foo": 1}, "valid": false}]}}
{"seq": 338, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 338, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "case": {"description": "unevaluatedProperties can't see inside cousins (reverse order)", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "allOf": [{"unevaluatedProperties": false}, {"properties": {"foo": true}}]}, "tests": [{"description": "always fails", "instance": {"foo": 1}, "valid": false}]}}
{"seq": 339, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "elixir-jsv", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "js-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "cpp-blaze", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "scala-rc-circe-json-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "scala-mjs-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "cpp-jsoncons", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "java-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "python-jschon", "expected": [false], "results": [{"valid": false}]}
{"seq": 339, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 340, "case": {"description": "nested unevaluatedProperties, outer false, inner true, properties outside", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "allOf": [{"unevaluatedProperties": true}], "unevaluatedProperties": false}, "tests": [{"description": "with no nested unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with nested unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}]}}
{"seq": 340, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 340, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "case": {"description": "nested unevaluatedProperties, outer false, inner true, properties inside", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "allOf": [{"properties": {"foo": {"type": "string"}}, "unevaluatedProperties": true}], "unevaluatedProperties": false}, "tests": [{"description": "with no nested unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with nested unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}]}}
{"seq": 341, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "elixir-jsv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "js-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "cpp-jsoncons", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "cpp-blaze", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "scala-mjs-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "scala-rc-circe-json-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "java-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "python-jschon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 341, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 342, "case": {"description": "nested unevaluatedProperties, outer true, inner false, properties outside", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "string"}}, "allOf": [{"unevaluatedProperties": false}], "unevaluatedProperties": true}, "tests": [{"description": "with no nested unevaluated properties", "instance": {"foo": "foo"}, "valid": false}, {"description": "with nested unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": false}]}}
{"seq": 342, "implementation": "python-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "scala-rc-circe-json-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "js-ajv", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "cpp-jsoncons", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "java-networknt-json-schema-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "js-json-schema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "js-schemasafe", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "rust-boon", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "ts-vscode-json-languageservice", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "cpp-blaze", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "java-openapiprocessor", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "go-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "js-hyperjump", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "ruby-json_schemer", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "elixir-jsv", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "dotnet-jsonschema-net", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "scala-mjs-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "rust-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "php-opis-json-schema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "java-jsonschemafriend", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "java-json-schema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "python-jschon", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 342, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 343, "case": {"description": "nested unevaluatedProperties, outer true, inner false, properties inside", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "allOf": [{"properties": {"foo": {"type": "string"}}, "unevaluatedProperties": false}], "unevaluatedProperties": true}, "tests": [{"description": "with no nested unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with nested unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": false}]}}
{"seq": 343, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 343, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 344, "case": {"description": "cousin unevaluatedProperties, true and false, true with properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "allOf": [{"properties": {"foo": {"type": "string"}}, "unevaluatedProperties": true}, {"unevaluatedProperties": false}]}, "tests": [{"description": "with no nested unevaluated properties", "instance": {"foo": "foo"}, "valid": false}, {"description": "with nested unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": false}]}}
{"seq": 344, "implementation": "python-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "java-networknt-json-schema-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "rust-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "cpp-jsoncons", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "js-schemasafe", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "rust-boon", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "js-hyperjump", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "ts-vscode-json-languageservice", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "ruby-json_schemer", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "js-json-schema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "js-ajv", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "scala-rc-circe-json-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "java-openapiprocessor", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "dotnet-jsonschema-net", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "scala-mjs-validator", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "php-opis-json-schema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "elixir-jsv", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "cpp-blaze", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "go-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "java-jsonschemafriend", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "java-json-schema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "python-jschon", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 344, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 345, "case": {"description": "cousin unevaluatedProperties, true and false, false with properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "allOf": [{"unevaluatedProperties": true}, {"properties": {"foo": {"type": "string"}}, "unevaluatedProperties": false}]}, "tests": [{"description": "with no nested unevaluated properties", "instance": {"foo": "foo"}, "valid": true}, {"description": "with nested unevaluated properties", "instance": {"foo": "foo", "bar": "bar"}, "valid": false}]}}
{"seq": 345, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 345, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "case": {"description": "property is evaluated in an uncle schema to unevaluatedProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"type": "object", "properties": {"bar": {"type": "string"}}, "unevaluatedProperties": false}}, "anyOf": [{"properties": {"foo": {"properties": {"faz": {"type": "string"}}}}}]}, "tests": [{"description": "no extra properties", "instance": {"foo": {"bar": "test"}}, "valid": true}, {"description": "uncle keyword evaluation is not significant", "instance": {"foo": {"bar": "test", "faz": "test"}}, "valid": false}], "comment": "see https://stackoverflow.com/questions/66936884/deeply-nested-unevaluatedproperties-and-their-expectations"}}
{"seq": 346, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 346, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 347, "case": {"description": "in-place applicator siblings, allOf has unevaluated", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "allOf": [{"properties": {"foo": true}, "unevaluatedProperties": false}], "anyOf": [{"properties": {"bar": true}}]}, "tests": [{"description": "base case: both properties present", "instance": {"foo": 1, "bar": 1}, "valid": false}, {"description": "in place applicator siblings, bar is missing", "instance": {"foo": 1}, "valid": true}, {"description": "in place applicator siblings, foo is missing", "instance": {"bar": 1}, "valid": false}]}}
{"seq": 347, "implementation": "python-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "ruby-json_schemer", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "rust-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "php-opis-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "js-hyperjump", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "go-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "elixir-jsv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "rust-boon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "js-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "cpp-jsoncons", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "scala-mjs-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "js-schemasafe", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "js-ajv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "cpp-blaze", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "java-openapiprocessor", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "java-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "java-jsonschemafriend", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 347, "implementation": "python-jschon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 348, "case": {"description": "in-place applicator siblings, anyOf has unevaluated", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "allOf": [{"properties": {"foo": true}}], "anyOf": [{"properties": {"bar": true}, "unevaluatedProperties": false}]}, "tests": [{"description": "base case: both properties present", "instance": {"foo": 1, "bar": 1}, "valid": false}, {"description": "in place applicator siblings, bar is missing", "instance": {"foo": 1}, "valid": false}, {"description": "in place applicator siblings, foo is missing", "instance": {"bar": 1}, "valid": true}]}}
{"seq": 348, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 348, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 349, "case": {"description": "unevaluatedProperties + single cyclic ref", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"x": {"$ref": "#"}}, "unevaluatedProperties": false}, "tests": [{"description": "Empty is valid", "instance": {}, "valid": true}, {"description": "Single is valid", "instance": {"x": {}}, "valid": true}, {"description": "Unevaluated on 1st level is invalid", "instance": {"x": {}, "y": {}}, "valid": false}, {"description": "Nested is valid", "instance": {"x": {"x": {}}}, "valid": true}, {"description": "Unevaluated on 2nd level is invalid", "instance": {"x": {"x": {}, "y": {}}}, "valid": false}, {"description": "Deep nested is valid", "instance": {"x": {"x": {"x": {}}}}, "valid": true}, {"description": "Unevaluated on 3rd level is invalid", "instance": {"x": {"x": {"x": {}, "y": {}}}}, "valid": false}]}}
{"seq": 349, "implementation": "python-jsonschema", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "js-schemasafe", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "go-jsonschema", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "rust-boon", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "cpp-jsoncons", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "elixir-jsv", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "js-hyperjump", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "rust-jsonschema", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "js-ajv", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "cpp-blaze", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "js-json-schema", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "scala-mjs-validator", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "java-json-schema", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "python-jschon", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 349, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 350, "case": {"description": "unevaluatedProperties + ref inside allOf / oneOf", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"one": {"properties": {"a": true}}, "two": {"required": ["x"], "properties": {"x": true}}}, "allOf": [{"$ref": "#/$defs/one"}, {"properties": {"b": true}}, {"oneOf": [{"$ref": "#/$defs/two"}, {"required": ["y"], "properties": {"y": true}}]}], "unevaluatedProperties": false}, "tests": [{"description": "Empty is invalid (no x or y)", "instance": {}, "valid": false}, {"description": "a and b are invalid (no x or y)", "instance": {"a": 1, "b": 1}, "valid": false}, {"description": "x and y are invalid", "instance": {"x": 1, "y": 1}, "valid": false}, {"description": "a and x are valid", "instance": {"a": 1, "x": 1}, "valid": true}, {"description": "a and y are valid", "instance": {"a": 1, "y": 1}, "valid": true}, {"description": "a and b and x are valid", "instance": {"a": 1, "b": 1, "x": 1}, "valid": true}, {"description": "a and b and y are valid", "instance": {"a": 1, "b": 1, "y": 1}, "valid": true}, {"description": "a and b and x and y are invalid", "instance": {"a": 1, "b": 1, "x": 1, "y": 1}, "valid": false}]}}
{"seq": 350, "implementation": "python-jsonschema", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "ruby-json_schemer", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "go-jsonschema", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "elixir-jsv", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "rust-boon", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "php-opis-json-schema", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "java-openapiprocessor", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "js-json-schema", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "cpp-jsoncons", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "java-jsonschemafriend", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "js-ajv", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "js-hyperjump", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "rust-jsonschema", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "cpp-blaze", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "js-schemasafe", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "scala-mjs-validator", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "java-json-schema", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "python-jschon", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 350, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, true, true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "case": {"description": "dynamic evalation inside nested refs", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"one": {"oneOf": [{"$ref": "#/$defs/two"}, {"required": ["b"], "properties": {"b": true}}, {"required": ["xx"], "patternProperties": {"x": true}}, {"required": ["all"], "unevaluatedProperties": true}]}, "two": {"oneOf": [{"required": ["c"], "properties": {"c": true}}, {"required": ["d"], "properties": {"d": true}}]}}, "oneOf": [{"$ref": "#/$defs/one"}, {"required": ["a"], "properties": {"a": true}}], "unevaluatedProperties": false}, "tests": [{"description": "Empty is invalid", "instance": {}, "valid": false}, {"description": "a is valid", "instance": {"a": 1}, "valid": true}, {"description": "b is valid", "instance": {"b": 1}, "valid": true}, {"description": "c is valid", "instance": {"c": 1}, "valid": true}, {"description": "d is valid", "instance": {"d": 1}, "valid": true}, {"description": "a + b is invalid", "instance": {"a": 1, "b": 1}, "valid": false}, {"description": "a + c is invalid", "instance": {"a": 1, "c": 1}, "valid": false}, {"description": "a + d is invalid", "instance": {"a": 1, "d": 1}, "valid": false}, {"description": "b + c is invalid", "instance": {"b": 1, "c": 1}, "valid": false}, {"description": "b + d is invalid", "instance": {"b": 1, "d": 1}, "valid": false}, {"description": "c + d is invalid", "instance": {"c": 1, "d": 1}, "valid": false}, {"description": "xx is valid", "instance": {"xx": 1}, "valid": true}, {"description": "xx + foox is valid", "instance": {"xx": 1, "foox": 1}, "valid": true}, {"description": "xx + foo is invalid", "instance": {"xx": 1, "foo": 1}, "valid": false}, {"description": "xx + a is invalid", "instance": {"xx": 1, "a": 1}, "valid": false}, {"description": "xx + b is invalid", "instance": {"xx": 1, "b": 1}, "valid": false}, {"description": "xx + c is invalid", "instance": {"xx": 1, "c": 1}, "valid": false}, {"description": "xx + d is invalid", "instance": {"xx": 1, "d": 1}, "valid": false}, {"description": "all is valid", "instance": {"all": 1}, "valid": true}, {"description": "all + foo is valid", "instance": {"all": 1, "foo": 1}, "valid": true}, {"description": "all + a is invalid", "instance": {"all": 1, "a": 1}, "valid": false}]}}
{"seq": 351, "implementation": "python-jsonschema", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "js-ajv", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "elixir-jsv", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "go-jsonschema", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "rust-boon", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "js-hyperjump", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "cpp-jsoncons", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "php-opis-json-schema", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "js-json-schema", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "ruby-json_schemer", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "java-jsonschemafriend", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "cpp-blaze", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "java-openapiprocessor", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "js-schemasafe", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "python-jschon", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "rust-jsonschema", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "scala-mjs-validator", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "java-json-schema", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 351, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true, true, true, false, false, false, false, false, false, true, true, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 352, "case": {"description": "non-object instances are valid", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedProperties": false}, "tests": [{"description": "ignores booleans", "instance": true, "valid": true}, {"description": "ignores integers", "instance": 123, "valid": true}, {"description": "ignores floats", "instance": 1.0, "valid": true}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores strings", "instance": "foo", "valid": true}, {"description": "ignores null", "instance": null, "valid": true}]}}
{"seq": 352, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "python-jschon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 352, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 353, "case": {"description": "unevaluatedProperties with null valued instance properties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "unevaluatedProperties": {"type": "null"}}, "tests": [{"description": "allows null valued properties", "instance": {"foo": null}, "valid": true}]}}
{"seq": 353, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "cpp-blaze", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "cpp-jsoncons", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "scala-mjs-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "scala-rc-circe-json-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "elixir-jsv", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "js-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "java-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "python-jschon", "expected": [true], "results": [{"valid": true}]}
{"seq": 353, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 354, "case": {"description": "unevaluatedProperties not affected by propertyNames", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "propertyNames": {"maxLength": 1}, "unevaluatedProperties": {"type": "number"}}, "tests": [{"description": "allows only number properties", "instance": {"a": 1}, "valid": true}, {"description": "string property is invalid", "instance": {"a": "b"}, "valid": false}]}}
{"seq": 354, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 354, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "case": {"description": "unevaluatedProperties can see annotations from if without then and else", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "if": {"patternProperties": {"foo": {"type": "string"}}}, "unevaluatedProperties": false}, "tests": [{"description": "valid in case if is evaluated", "instance": {"foo": "a"}, "valid": true}, {"description": "invalid in case if is evaluated", "instance": {"bar": "a"}, "valid": false}]}}
{"seq": 355, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "elixir-jsv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 355, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "scala-rc-circe-json-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "cpp-blaze", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "cpp-jsoncons", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "js-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "scala-mjs-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: \"if\" without \"then\" and \"else\" is ignored\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/if.js:17:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:208:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"if\" without \"then\" and \"else\" is ignored"}, "message": "", "caught": true, "errored": true}
{"seq": 355, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "java-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "python-jschon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 355, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 356, "case": {"description": "dependentSchemas with unevaluatedProperties", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "properties": {"foo2": {}}, "dependentSchemas": {"foo": {}, "foo2": {"properties": {"bar": {}}}}, "unevaluatedProperties": false}, "tests": [{"description": "unevaluatedProperties doesn't consider dependentSchemas", "instance": {"foo": ""}, "valid": false}, {"description": "unevaluatedProperties doesn't see bar when foo2 is absent", "instance": {"bar": ""}, "valid": false}, {"description": "unevaluatedProperties sees bar when foo2 is present", "instance": {"foo2": "", "bar": ""}, "valid": true}]}}
{"seq": 356, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "js-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "cpp-jsoncons", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 356, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "elixir-jsv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "java-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "cpp-blaze", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "scala-mjs-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "scala-rc-circe-json-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "python-jschon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 356, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 357, "case": {"description": "uniqueItems validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "uniqueItems": true}, "tests": [{"description": "unique array of integers is valid", "instance": [1, 2], "valid": true}, {"description": "non-unique array of integers is invalid", "instance": [1, 1], "valid": false}, {"description": "non-unique array of more than two integers is invalid", "instance": [1, 2, 1], "valid": false}, {"description": "numbers are unique if mathematically unequal", "instance": [1.0, 1.0, 1], "valid": false}, {"description": "false is not equal to zero", "instance": [0, false], "valid": true}, {"description": "true is not equal to one", "instance": [1, true], "valid": true}, {"description": "unique array of strings is valid", "instance": ["foo", "bar", "baz"], "valid": true}, {"description": "non-unique array of strings is invalid", "instance": ["foo", "bar", "foo"], "valid": false}, {"description": "unique array of objects is valid", "instance": [{"foo": "bar"}, {"foo": "baz"}], "valid": true}, {"description": "non-unique array of objects is invalid", "instance": [{"foo": "bar"}, {"foo": "bar"}], "valid": false}, {"description": "property order of array of objects is ignored", "instance": [{"foo": "bar", "bar": "foo"}, {"bar": "foo", "foo": "bar"}], "valid": false}, {"description": "unique array of nested objects is valid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": false}}}], "valid": true}, {"description": "non-unique array of nested objects is invalid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": true}}}], "valid": false}, {"description": "unique array of arrays is valid", "instance": [["foo"], ["bar"]], "valid": true}, {"description": "non-unique array of arrays is invalid", "instance": [["foo"], ["foo"]], "valid": false}, {"description": "non-unique array of more than two arrays is invalid", "instance": [["foo"], ["bar"], ["foo"]], "valid": false}, {"description": "1 and true are unique", "instance": [1, true], "valid": true}, {"description": "0 and false are unique", "instance": [0, false], "valid": true}, {"description": "[1] and [true] are unique", "instance": [[1], [true]], "valid": true}, {"description": "[0] and [false] are unique", "instance": [[0], [false]], "valid": true}, {"description": "nested [1] and [true] are unique", "instance": [[[1], "foo"], [[true], "foo"]], "valid": true}, {"description": "nested [0] and [false] are unique", "instance": [[[0], "foo"], [[false], "foo"]], "valid": true}, {"description": "unique heterogeneous types are valid", "instance": [{}, [1], true, null, 1, "{}"], "valid": true}, {"description": "non-unique heterogeneous types are invalid", "instance": [{}, [1], true, null, {}, 1], "valid": false}, {"description": "different objects are unique", "instance": [{"a": 1, "b": 2}, {"a": 2, "b": 1}], "valid": true}, {"description": "objects are non-unique despite key order", "instance": [{"a": 1, "b": 2}, {"b": 2, "a": 1}], "valid": false}, {"description": "{\"a\": false} and {\"a\": 0} are unique", "instance": [{"a": false}, {"a": 0}], "valid": true}, {"description": "{\"a\": true} and {\"a\": 1} are unique", "instance": [{"a": true}, {"a": 1}], "valid": true}]}}
{"seq": 357, "implementation": "python-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "elixir-jsv", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "js-hyperjump", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "js-schemasafe", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "go-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "cpp-jsoncons", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "cpp-blaze", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "rust-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "js-json-schema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "scala-rc-circe-json-validator", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "rust-boon", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "js-ajv", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "scala-mjs-validator", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "python-jschon", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "java-json-schema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 357, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 358, "case": {"description": "uniqueItems with an array of items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": true}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is not valid", "instance": [false, false], "valid": false}, {"description": "[true, true] from items array is not valid", "instance": [true, true], "valid": false}, {"description": "unique array extended from [false, true] is valid", "instance": [false, true, "foo", "bar"], "valid": true}, {"description": "unique array extended from [true, false] is valid", "instance": [true, false, "foo", "bar"], "valid": true}, {"description": "non-unique array extended from [false, true] is not valid", "instance": [false, true, "foo", "foo"], "valid": false}, {"description": "non-unique array extended from [true, false] is not valid", "instance": [true, false, "foo", "foo"], "valid": false}]}}
{"seq": 358, "implementation": "python-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "js-json-schema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "rust-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "js-schemasafe", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "cpp-blaze", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "rust-boon", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "go-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "elixir-jsv", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "js-hyperjump", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "js-ajv", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "java-json-schema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "python-jschon", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 358, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 359, "case": {"description": "uniqueItems with an array of items and additionalItems=false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": true, "items": false}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is not valid", "instance": [false, false], "valid": false}, {"description": "[true, true] from items array is not valid", "instance": [true, true], "valid": false}, {"description": "extra items are invalid even if unique", "instance": [false, true, null], "valid": false}]}}
{"seq": 359, "implementation": "python-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "elixir-jsv", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "js-hyperjump", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "go-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "cpp-jsoncons", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "js-schemasafe", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "js-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "cpp-blaze", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "scala-mjs-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "rust-boon", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "js-ajv", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "java-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "python-jschon", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 359, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 360, "case": {"description": "uniqueItems=false validation", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "uniqueItems": false}, "tests": [{"description": "unique array of integers is valid", "instance": [1, 2], "valid": true}, {"description": "non-unique array of integers is valid", "instance": [1, 1], "valid": true}, {"description": "numbers are unique if mathematically unequal", "instance": [1.0, 1.0, 1], "valid": true}, {"description": "false is not equal to zero", "instance": [0, false], "valid": true}, {"description": "true is not equal to one", "instance": [1, true], "valid": true}, {"description": "unique array of objects is valid", "instance": [{"foo": "bar"}, {"foo": "baz"}], "valid": true}, {"description": "non-unique array of objects is valid", "instance": [{"foo": "bar"}, {"foo": "bar"}], "valid": true}, {"description": "unique array of nested objects is valid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": false}}}], "valid": true}, {"description": "non-unique array of nested objects is valid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": true}}}], "valid": true}, {"description": "unique array of arrays is valid", "instance": [["foo"], ["bar"]], "valid": true}, {"description": "non-unique array of arrays is valid", "instance": [["foo"], ["foo"]], "valid": true}, {"description": "1 and true are unique", "instance": [1, true], "valid": true}, {"description": "0 and false are unique", "instance": [0, false], "valid": true}, {"description": "unique heterogeneous types are valid", "instance": [{}, [1], true, null, 1], "valid": true}, {"description": "non-unique heterogeneous types are valid", "instance": [{}, [1], true, null, {}, 1], "valid": true}]}}
{"seq": 360, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 360, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "case": {"description": "uniqueItems=false with an array of items", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": false}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is valid", "instance": [false, false], "valid": true}, {"description": "[true, true] from items array is valid", "instance": [true, true], "valid": true}, {"description": "unique array extended from [false, true] is valid", "instance": [false, true, "foo", "bar"], "valid": true}, {"description": "unique array extended from [true, false] is valid", "instance": [true, false, "foo", "bar"], "valid": true}, {"description": "non-unique array extended from [false, true] is valid", "instance": [false, true, "foo", "foo"], "valid": true}, {"description": "non-unique array extended from [true, false] is valid", "instance": [true, false, "foo", "foo"], "valid": true}]}}
{"seq": 361, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "js-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "elixir-jsv", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "cpp-blaze", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "java-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "python-jschon", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 361, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 362, "case": {"description": "uniqueItems=false with an array of items and additionalItems=false", "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": false, "items": false}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is valid", "instance": [false, false], "valid": true}, {"description": "[true, true] from items array is valid", "instance": [true, true], "valid": true}, {"description": "extra items are invalid even if unique", "instance": [false, true, null], "valid": false}]}}
{"seq": 362, "implementation": "python-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "js-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "cpp-jsoncons", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "rust-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "rust-boon", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "js-ajv", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "elixir-jsv", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "js-hyperjump", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "js-schemasafe", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "cpp-blaze", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "scala-rc-circe-json-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "go-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "java-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "scala-mjs-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "python-jschon", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 362, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 363, "case": {"description": "schema that uses custom metaschema with with no validation vocabulary", "schema": {"$id": "https://schema/using/no/validation", "$schema": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "properties": {"badProperty": false, "numberProperty": {"minimum": 10}}}, "tests": [{"description": "applicator vocabulary still works", "instance": {"badProperty": "this property should not exist"}, "valid": false}, {"description": "no validation: valid number", "instance": {"numberProperty": 20}, "valid": true}, {"description": "no validation: invalid number, but it still validates", "instance": {"numberProperty": 1}, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 363, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 363, "implementation": "js-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 363, "implementation": "elixir-jsv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "scala-mjs-validator", "expected": [false, true, true], "message": "This case is not yet implemented.", "skipped": true}
{"seq": 363, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "scala-rc-circe-json-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 363, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 363, "implementation": "js-schemasafe", "expected": [false, true, true], "context": {"traceback": "Error: Unexpected schema version: \"https://localhost:1234/draft2020-12/metaschema-no-validation.json\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at enforce (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:244:44)\n    at generateMeta (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:62:5)\n    at saveMeta (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:253:32)\n    at visit (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:311:7)\n    at compileSchema (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1342:27)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:50\n    at Array.map (<anonymous>)\n    at compile (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:26)\n    at validator (/usr/app/node_modules/@exodus/schemasafe/src/index.js:33:27)", "message": "Unexpected schema version: \"https://localhost:1234/draft2020-12/metaschema-no-validation.json\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 363, "implementation": "cpp-jsoncons", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 363, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "java-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 363, "implementation": "python-jschon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "cpp-blaze", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 363, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 364, "case": {"description": "ignore unrecognized optional vocabulary", "schema": {"$schema": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "type": "number"}, "tests": [{"description": "string value", "instance": "foobar", "valid": false}, {"description": "number value", "instance": 20, "valid": true}], "registry": {"http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/baseUriChangeFolderInSubschema/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}, "http://localhost:1234/draft2020-12/ref-and-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/prefixItems.json": {"$id": "http://localhost:1234/draft2020-12/prefixItems.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "prefixItems": [{"type": "string"}]}, "http://localhost:1234/draft2020-12/baseUriChange/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/draft2020-12/subSchemas.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/$defs/integer"}}}, "http://localhost:1234/draft2020-12/nested/string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "string"}, "http://localhost:1234/draft2020-12/detached-dynamicref.json": {"$id": "http://localhost:1234/draft2020-12/detached-dynamicref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$dynamicRef": "#detached"}, "detached": {"$dynamicAnchor": "detached", "type": "integer"}}}, "http://localhost:1234/draft2020-12/baseUriChangeFolder/folderInteger.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/metaschema-no-validation.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-no-validation.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/applicator": true, "https://json-schema.org/draft/2020-12/vocab/core": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/applicator"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/draft2020-12/format-assertion-true.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-true.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": true}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/detached-ref.json": {"$id": "http://localhost:1234/draft2020-12/detached-ref.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"foo": {"$ref": "#detached"}, "detached": {"$anchor": "detached", "type": "integer"}}}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/draft2020-12/tree.json": {"description": "tree schema, extensible", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json": {"description": "extendible array", "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/validation": true, "https://json-schema.org/draft/2020-12/vocab/core": true, "http://localhost:1234/draft/2020-12/vocab/custom": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/validation"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/core"}]}, "http://localhost:1234/draft2020-12/format-assertion-false.json": {"$id": "http://localhost:1234/draft2020-12/format-assertion-false.json", "$schema": "https://json-schema.org/draft/2020-12/schema", "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/core": true, "https://json-schema.org/draft/2020-12/vocab/format-assertion": false}, "$dynamicAnchor": "meta", "allOf": [{"$ref": "https://json-schema.org/draft/2020-12/meta/core"}, {"$ref": "https://json-schema.org/draft/2020-12/meta/format-assertion"}]}, "http://localhost:1234/draft2020-12/integer.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "integer"}, "http://localhost:1234/draft2020-12/name-defs.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/locationIndependentIdentifier.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/draft2020-12/nested/foo-ref-string.json": {"$schema": "https://json-schema.org/draft/2020-12/schema", "type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}}}}
{"seq": 364, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "js-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "cpp-jsoncons", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "js-schemasafe", "expected": [false, true], "context": {"traceback": "Error: Unexpected schema version: \"https://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at enforce (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:244:44)\n    at generateMeta (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:62:5)\n    at saveMeta (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:253:32)\n    at visit (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:311:7)\n    at compileSchema (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1342:27)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:50\n    at Array.map (<anonymous>)\n    at compile (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:26)\n    at validator (/usr/app/node_modules/@exodus/schemasafe/src/index.js:33:27)", "message": "Unexpected schema version: \"https://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 364, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "scala-rc-circe-json-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "scala-mjs-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "elixir-jsv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "java-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "python-jschon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 364, "implementation": "cpp-blaze", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"did_fail_fast": false}
