{"implementations": {"python-jsonschema": {"name": "jsonschema", "language": "python", "homepage": "https://python-jsonschema.readthedocs.io/", "issues": "https://github.com/python-jsonschema/jsonschema/issues", "source": "https://github.com/python-jsonschema/jsonschema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#", "http://json-schema.org/draft-03/schema#"], "version": "4.23.0", "language_version": "3.12.4", "os": "Linux", "os_version": "6.5.0-1025-azure", "documentation": "https://python-jsonschema.readthedocs.io/", "links": []}, "rust-jsonschema": {"name": "jsonschema", "language": "rust", "homepage": "https://docs.rs/jsonschema", "issues": "https://github.com/Stranger6667/jsonschema-rs/issues", "source": "https://github.com/Stranger6667/jsonschema-rs", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.18.0", "language_version": "1.80.0", "os": "Alpine", "os_version": "3.20.2", "documentation": "https://docs.rs/jsonschema", "links": []}, "lua-jsonschema": {"name": "jsonschema", "language": "lua", "homepage": "https://github.com/api7/jsonschema", "issues": "https://github.com/api7/jsonschema/issues", "source": "https://github.com/api7/jsonschema", "dialects": ["http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.9.9-0\n", "language_version": "5.1", "os": "Linux", "os_version": "6.5.0-1025-azure", "links": []}, "rust-boon": {"name": "boon", "language": "rust", "homepage": "https://github.com/santhosh-tekuri/boon", "issues": "htps://github.com/santhosh-tekuri/boon/issues", "source": "https://github.com/santhosh-tekuri/boon", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.6.0", "language_version": "1.80.0", "os": "Alpine", "os_version": "3.20.2", "documentation": "https://docs.rs/boon", "links": []}, "cpp-jsontoolkit": {"name": "jsontoolkit", "language": "c++", "homepage": "https://github.com/sourcemeta/jsontoolkit", "issues": "https://github.com/sourcemeta/jsontoolkit/issues", "source": "https://github.com/sourcemeta/jsontoolkit", "dialects": ["http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "631ce15e", "links": []}, "php-opis-json-schema": {"name": "opis-json-schema", "language": "php", "homepage": "https://opis.io/json-schema", "issues": "https://github.com/opis/json-schema/issues", "source": "https://github.com/opis/json-schema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#"], "version": "2.3.0", "language_version": "8.4.0alpha2", "os": "Linux", "os_version": "6.5.0-1025-azure", "documentation": "https://opis.io/json-schema/2.x/", "links": []}, "dotnet-jsonschema-net": {"name": "JsonSchema.Net", "language": "dotnet", "homepage": "https://json-everything.net/json-schema/", "issues": "https://github.com/gregsdennis/json-everything/issues", "source": "https://github.com/gregsdennis/json-everything", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#"], "version": "7.1.2", "language_version": "8.0.7", "os": "Unix", "os_version": "6.5.0.1025", "documentation": "https://docs.json-everything.net/schema/basics/", "links": []}, "js-jsonschema": {"name": "jsonschema", "language": "javascript", "homepage": "https://github.com/tdegrunt/jsonschema", "issues": "https://github.com/tdegrunt/jsonschema/issues", "source": "https://github.com/tdegrunt/jsonschema", "dialects": ["http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#", "http://json-schema.org/draft-03/schema#"], "version": "1.4.1", "language_version": "v22.6.0", "os": "linux", "os_version": "6.5.0-1025-azure", "links": []}, "go-jsonschema": {"name": "jsonschema", "language": "go", "homepage": "https://github.com/santhosh-tekuri/jsonschema", "issues": "https://github.com/santhosh-tekuri/jsonschema/issues", "source": "https://github.com/santhosh-tekuri/jsonschema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "v6.0.1", "language_version": "go1.22.6", "os": "linux", "os_version": "6.5.0-1025-azure", "links": []}, "js-schemasafe": {"name": "schemasafe", "language": "javascript", "homepage": "https://github.com/ExodusMovement/schemasafe", "issues": "https://github.com/ExodusMovement/schemasafe/issues", "source": "https://github.com/ExodusMovement/schemasafe", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "1.3.0", "language_version": "v22.6.0", "os": "linux", "os_version": "6.5.0-1025-azure", "links": []}, "go-gojsonschema": {"name": "gojsonschema", "language": "go", "homepage": "https://github.com/xeipuuv/gojsonschema", "issues": "https://github.com/xeipuuv/gojsonschema/issues", "source": "https://github.com/xeipuuv/gojsonschema", "dialects": ["http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "v1.2.0", "language_version": "go1.20.5", "os": "linux", "os_version": "6.5.0-1025-azure", "links": []}, "dotnet-corvus-jsonschema": {"name": "Corvus.JsonSchema", "language": "dotnet", "homepage": "https://github.com/corvus-dotnet/corvus.jsonschema", "issues": "https://github.com/corvus-dotnet/corvus.jsonschema/issues", "source": "https://github.com/corvus-dotnet/corvus.jsonschema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "3.0.27", "language_version": "8.0.7", "os": "Unix", "os_version": "6.5.0.1025", "documentation": "https://github.com/corvus-dotnet/Corvus.JsonSchema/blob/main/README.md", "links": []}, "js-hyperjump": {"name": "hyperjump-json-schema", "language": "javascript", "homepage": "https://json-schema.hyperjump.io/", "issues": "https://github.com/hyperjump-io/json-schema/issues", "source": "https://github.com/hyperjump-io/json-schema", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "1.9.6", "language_version": "v22.6.0", "os": "linux", "os_version": "6.5.0-1025-azure", "links": []}, "java-networknt-json-schema-validator": {"name": "com.networknt-json-schema-validator", "language": "java", "homepage": "https://github.com/networknt/json-schema-validator/", "issues": "https://github.com/networknt/json-schema-validator/issues", "source": "https://github.com/networknt/json-schema-validator/", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "1.5.1", "language_version": "22.0.2+11", "os": "Linux", "os_version": "6.5.0-1025-azure", "documentation": "https://doc.networknt.com/library/json-schema-validator/", "links": []}, "js-ajv": {"name": "ajv", "language": "javascript", "homepage": "https://ajv.js.org/", "issues": "https://github.com/ajv-validator/ajv/issues", "source": "https://github.com/ajv-validator/ajv", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "8.17.1", "language_version": "v22.6.0", "os": "linux", "os_version": "6.5.0-1025-azure", "documentation": "https://ajv.js.org/json-schema.html", "links": []}, "python-fastjsonschema": {"name": "fastjsonschema", "language": "python", "homepage": "https://horejsek.github.io/python-fastjsonschema/", "issues": "https://github.com/horejsek/python-fastjsonschema/issues", "source": "https://github.com/horejsek/python-fastjsonschema", "dialects": ["http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "2.20.0", "language_version": "3.12.4", "os": "Linux", "os_version": "6.5.0-1025-azure", "documentation": "https://horejsek.github.io/python-fastjsonschema/", "links": []}, "kotlin-kmp-json-schema-validator": {"name": "kmp-json-schema-validator", "language": "kotlin", "homepage": "https://github.com/OptimumCode/json-schema-validator", "issues": "https://github.com/OptimumCode/json-schema-validator/issues", "source": "https://github.com/OptimumCode/json-schema-validator", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "0.2.2", "language_version": "2.0.0", "os": "Linux", "os_version": "6.5.0-1025-azure", "links": []}, "java-jsonschemafriend": {"name": "jsonschemafriend", "language": "java", "homepage": "https://github.com/jimblackler/jsonschemafriend", "issues": "https://github.com/jimblackler/jsonschemafriend/issues", "source": "https://github.com/jimblackler/jsonschemafriend", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#", "http://json-schema.org/draft-03/schema#"], "version": "0.12.4", "language_version": "22.0.2+11", "os": "Linux", "os_version": "6.5.0-1025-azure", "links": [{"description": "Maven Central - used JSON provider", "url": "https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind/2.17.2"}]}, "clojure-json-schema": {"name": "json-schema", "language": "clojure", "homepage": "https://github.com/luposlip/json-schema", "issues": "https://github.com/luposlip/json-schema/issues", "source": "https://github.com/luposlip/json-schema", "dialects": ["http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "language_version": "1.11.0", "os": "Linux", "os_version": "6.5.0-1025-azure", "links": []}, "java-openapiprocessor": {"name": "io.openapiprocessor.json-schema-validator", "language": "java", "homepage": "https://github.com/openapi-processor/openapi-parser", "issues": "https://github.com/openapi-processor/openapi-parser/issues", "source": "https://github.com/openapi-processor/openapi-parser", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "2024.3", "language_version": "22.0.2+11", "links": []}, "ruby-json_schemer": {"name": "json_schemer", "language": "ruby", "homepage": "https://github.com/davishmcclurg/json_schemer", "issues": "https://github.com/davishmcclurg/json_schemer/issues", "source": "https://github.com/davishmcclurg/json_schemer", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "2.3.0", "language_version": "3.3.4", "os": "Linux", "os_version": "6.5.0-1025-azure", "links": []}, "ts-vscode-json-languageservice": {"name": "vscode-json-language-service", "language": "typescript", "homepage": "https://github.com/microsoft/vscode-json-languageservice", "issues": "https://github.com/microsoft/vscode-json-languageservice/issues", "source": "https://github.com/microsoft/vscode-json-languageservice", "dialects": ["https://json-schema.org/draft/2020-12/schema", "https://json-schema.org/draft/2019-09/schema", "http://json-schema.org/draft-07/schema#", "http://json-schema.org/draft-06/schema#", "http://json-schema.org/draft-04/schema#"], "version": "5.4.0", "language_version": "v22.5.1", "os": "linux", "os_version": "6.5.0-1025-azure", "links": []}}, "bowtie_version": "2024.8.4", "metadata": {"Commit": {"text": "9fc880b", "href": "https://github.com/json-schema-org/JSON-Schema-Test-Suite/commit/9fc880bfb6d8ccd093bc82431f17d13681ffae8e"}}, "dialect": "http://json-schema.org/draft-06/schema#", "started": "2024-08-07T18:14:17.562244+00:00"}
{"seq": 1, "case": {"description": "additionalItems as schema", "schema": {"items": [{}], "additionalItems": {"type": "integer"}}, "tests": [{"description": "additional items match schema", "instance": [null, 2, 3, 4], "valid": true}, {"description": "additional items do not match schema", "instance": [null, 2, 3, "foo"], "valid": false}]}}
{"seq": 1, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 1, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 1, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "case": {"description": "when items is schema, additionalItems does nothing", "schema": {"items": {"type": "integer"}, "additionalItems": {"type": "string"}}, "tests": [{"description": "valid with a array of type integers", "instance": [1, 2, 3], "valid": true}, {"description": "invalid with a array of mixed types", "instance": [1, "2", "3"], "valid": false}]}}
{"seq": 2, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "js-ajv", "expected": [true, false], "context": {"traceback": "Error: strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/additionalItems.js:20:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas"}, "message": "", "caught": true, "errored": true}
{"seq": 2, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 2, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 2, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 3, "case": {"description": "when items is schema, boolean additionalItems does nothing", "schema": {"items": {}, "additionalItems": false}, "tests": [{"description": "all items match schema", "instance": [1, 2, 3, 4, 5], "valid": true}]}}
{"seq": 3, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "js-ajv", "expected": [true], "context": {"traceback": "Error: strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/additionalItems.js:20:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas"}, "message": "", "caught": true, "errored": true}
{"seq": 3, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 3, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 4, "case": {"description": "array of items with no additionalItems permitted", "schema": {"items": [{}, {}, {}], "additionalItems": false}, "tests": [{"description": "empty array", "instance": [], "valid": true}, {"description": "fewer number of items present (1)", "instance": [1], "valid": true}, {"description": "fewer number of items present (2)", "instance": [1, 2], "valid": true}, {"description": "equal number of items present", "instance": [1, 2, 3], "valid": true}, {"description": "additional items are not permitted", "instance": [1, 2, 3, 4], "valid": false}]}}
{"seq": 4, "implementation": "python-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-ajv", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "rust-boon", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "go-gojsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "lua-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "go-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "rust-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-schemasafe", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "js-hyperjump", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "clojure-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 4, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 4, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 5, "case": {"description": "additionalItems as false without items", "schema": {"additionalItems": false}, "tests": [{"description": "items defaults to empty schema so everything is valid", "instance": [1, 2, 3, 4, 5], "valid": true}, {"description": "ignores non-arrays", "instance": {"foo": "bar"}, "valid": true}]}}
{"seq": 5, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "go-gojsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "js-ajv", "expected": [true, true], "context": {"traceback": "Error: strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/additionalItems.js:20:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas"}, "message": "", "caught": true, "errored": true}
{"seq": 5, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "lua-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "cpp-jsontoolkit", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "python-fastjsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "js-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "clojure-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 5, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 6, "case": {"description": "additionalItems are allowed by default", "schema": {"items": [{"type": "integer"}]}, "tests": [{"description": "only the first item is validated", "instance": [1, "foo", false], "valid": true}]}}
{"seq": 6, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 6, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "case": {"description": "additionalItems does not look in applicators, valid case", "schema": {"allOf": [{"items": [{"type": "integer"}]}], "additionalItems": {"type": "boolean"}}, "tests": [{"description": "items defined in allOf are not examined", "instance": [1, null], "valid": true}]}}
{"seq": 7, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-ajv", "expected": [true], "context": {"traceback": "Error: strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/additionalItems.js:20:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas"}, "message": "", "caught": true, "errored": true}
{"seq": 7, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 7, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 8, "case": {"description": "additionalItems does not look in applicators, invalid case", "schema": {"allOf": [{"items": [{"type": "integer"}, {"type": "string"}]}], "items": [{"type": "integer"}], "additionalItems": {"type": "boolean"}}, "tests": [{"description": "items defined in allOf are not examined", "instance": [1, "hello"], "valid": false}]}}
{"seq": 8, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 8, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": true}]}
{"seq": 8, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 9, "case": {"description": "items validation adjusts the starting index for additionalItems", "schema": {"items": [{"type": "string"}], "additionalItems": {"type": "integer"}}, "tests": [{"description": "valid items", "instance": ["x", 2, 3], "valid": true}, {"description": "wrong type of second item", "instance": ["x", "y"], "valid": false}]}}
{"seq": 9, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 9, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 9, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 10, "case": {"description": "additionalItems with heterogeneous array", "schema": {"items": [{}], "additionalItems": false}, "tests": [{"description": "heterogeneous invalid instance", "instance": ["foo", "bar", 37], "valid": false}, {"description": "valid instance", "instance": [null], "valid": true}]}}
{"seq": 10, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "go-gojsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "cpp-jsontoolkit", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "python-fastjsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "clojure-json-schema", "expected": [false, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 10, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "lua-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "js-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 10, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 11, "case": {"description": "additionalItems with null instance elements", "schema": {"additionalItems": {"type": "null"}}, "tests": [{"description": "allows null elements", "instance": [null], "valid": true}]}}
{"seq": 11, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "js-ajv", "expected": [true], "context": {"traceback": "Error: strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/additionalItems.js:20:40)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)", "message": "strict mode: \"additionalItems\" is ignored when \"items\" is not an array of schemas"}, "message": "", "caught": true, "errored": true}
{"seq": 11, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 11, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 12, "case": {"description": "additionalProperties being false does not allow other properties", "schema": {"properties": {"foo": {}, "bar": {}}, "patternProperties": {"^v": {}}, "additionalProperties": false}, "tests": [{"description": "no additional properties is valid", "instance": {"foo": 1}, "valid": true}, {"description": "an additional property is invalid", "instance": {"foo": 1, "bar": 2, "quux": "boom"}, "valid": false}, {"description": "ignores arrays", "instance": [1, 2, 3], "valid": true}, {"description": "ignores strings", "instance": "foobarbaz", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}, {"description": "patternProperties are not additional properties", "instance": {"foo": 1, "vroom": 2}, "valid": true}]}}
{"seq": 12, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "rust-boon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "lua-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "go-gojsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "js-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "python-fastjsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "js-ajv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 12, "implementation": "clojure-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 12, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 13, "case": {"description": "non-ASCII pattern with additionalProperties", "schema": {"patternProperties": {"^\u00e1": {}}, "additionalProperties": false}, "tests": [{"description": "matching the pattern is valid", "instance": {"\u00e1rm\u00e1nyos": 2}, "valid": true}, {"description": "not matching the pattern is invalid", "instance": {"\u00e9lm\u00e9ny": 2}, "valid": false}]}}
{"seq": 13, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 13, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 13, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 14, "case": {"description": "additionalProperties with schema", "schema": {"properties": {"foo": {}, "bar": {}}, "additionalProperties": {"type": "boolean"}}, "tests": [{"description": "no additional properties is valid", "instance": {"foo": 1}, "valid": true}, {"description": "an additional valid property is valid", "instance": {"foo": 1, "bar": 2, "quux": true}, "valid": true}, {"description": "an additional invalid property is invalid", "instance": {"foo": 1, "bar": 2, "quux": 12}, "valid": false}]}}
{"seq": 14, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "python-fastjsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "lua-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 14, "implementation": "clojure-json-schema", "expected": [true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 14, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 15, "case": {"description": "additionalProperties can exist by itself", "schema": {"additionalProperties": {"type": "boolean"}}, "tests": [{"description": "an additional valid property is valid", "instance": {"foo": true}, "valid": true}, {"description": "an additional invalid property is invalid", "instance": {"foo": 1}, "valid": false}]}}
{"seq": 15, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 15, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 15, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 16, "case": {"description": "additionalProperties are allowed by default", "schema": {"properties": {"foo": {}, "bar": {}}}, "tests": [{"description": "additional properties are allowed", "instance": {"foo": 1, "bar": 2, "quux": true}, "valid": true}]}}
{"seq": 16, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 16, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 17, "case": {"description": "additionalProperties does not look in applicators", "schema": {"allOf": [{"properties": {"foo": {}}}], "additionalProperties": {"type": "boolean"}}, "tests": [{"description": "properties defined in allOf are not examined", "instance": {"foo": 1, "bar": true}, "valid": false}]}}
{"seq": 17, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 17, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 18, "case": {"description": "additionalProperties with null valued instance properties", "schema": {"additionalProperties": {"type": "null"}}, "tests": [{"description": "allows null values", "instance": {"foo": null}, "valid": true}]}}
{"seq": 18, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": false}]}
{"seq": 18, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 18, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 19, "case": {"description": "allOf", "schema": {"allOf": [{"properties": {"bar": {"type": "integer"}}, "required": ["bar"]}, {"properties": {"foo": {"type": "string"}}, "required": ["foo"]}]}, "tests": [{"description": "allOf", "instance": {"foo": "baz", "bar": 2}, "valid": true}, {"description": "mismatch second", "instance": {"foo": "baz"}, "valid": false}, {"description": "mismatch first", "instance": {"bar": 2}, "valid": false}, {"description": "wrong type", "instance": {"foo": "baz", "bar": "quux"}, "valid": false}]}}
{"seq": 19, "implementation": "python-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "js-ajv", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "js-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "go-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "go-gojsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "php-opis-json-schema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "rust-boon", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "lua-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "python-fastjsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "js-hyperjump", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "rust-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "java-openapiprocessor", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "js-schemasafe", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "ruby-json_schemer", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "clojure-json-schema", "expected": [true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 19, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "case": {"description": "allOf with base schema", "schema": {"properties": {"bar": {"type": "integer"}}, "required": ["bar"], "allOf": [{"properties": {"foo": {"type": "string"}}, "required": ["foo"]}, {"properties": {"baz": {"type": "null"}}, "required": ["baz"]}]}, "tests": [{"description": "valid", "instance": {"foo": "quux", "bar": 2, "baz": null}, "valid": true}, {"description": "mismatch base schema", "instance": {"foo": "quux", "baz": null}, "valid": false}, {"description": "mismatch first allOf", "instance": {"bar": 2, "baz": null}, "valid": false}, {"description": "mismatch second allOf", "instance": {"foo": "quux", "bar": 2}, "valid": false}, {"description": "mismatch both", "instance": {"bar": 2}, "valid": false}]}}
{"seq": 20, "implementation": "python-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "rust-boon", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "js-schemasafe", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "go-gojsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "go-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "js-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "lua-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "js-hyperjump", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "python-fastjsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "rust-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "js-ajv", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "clojure-json-schema", "expected": [true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 20, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 21, "case": {"description": "allOf simple types", "schema": {"allOf": [{"maximum": 30}, {"minimum": 20}]}, "tests": [{"description": "valid", "instance": 25, "valid": true}, {"description": "mismatch one", "instance": 35, "valid": false}]}}
{"seq": 21, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 21, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 21, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 22, "case": {"description": "allOf with boolean schemas, all true", "schema": {"allOf": [true, true]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 22, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 22, "implementation": "java-jsonschemafriend", "expected": [true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/1}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/1}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 22, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 23, "case": {"description": "allOf with boolean schemas, some false", "schema": {"allOf": [true, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 23, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "java-jsonschemafriend", "expected": [false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/1}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/1}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 23, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "allOf contains false schema", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/AllOfKeywordParser.php(60): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\AllOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 23, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 23, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "case": {"description": "allOf with boolean schemas, all false", "schema": {"allOf": [false, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 24, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "allOf contains false schema", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/AllOfKeywordParser.php(60): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\AllOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 24, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 24, "implementation": "java-jsonschemafriend", "expected": [false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/1}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/allOf/1}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 24, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 25, "case": {"description": "allOf with one empty schema", "schema": {"allOf": [{}]}, "tests": [{"description": "any data is valid", "instance": 1, "valid": true}]}}
{"seq": 25, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 25, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "case": {"description": "allOf with two empty schemas", "schema": {"allOf": [{}, {}]}, "tests": [{"description": "any data is valid", "instance": 1, "valid": true}]}}
{"seq": 26, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 26, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 27, "case": {"description": "allOf with the first empty schema", "schema": {"allOf": [{}, {"type": "number"}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is invalid", "instance": "foo", "valid": false}]}}
{"seq": 27, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 27, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 27, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "case": {"description": "allOf with the last empty schema", "schema": {"allOf": [{"type": "number"}, {}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is invalid", "instance": "foo", "valid": false}]}}
{"seq": 28, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 28, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 28, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "case": {"description": "nested allOf, to check validation semantics", "schema": {"allOf": [{"allOf": [{"type": "null"}]}]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "anything non-null is invalid", "instance": 123, "valid": false}]}}
{"seq": 29, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 29, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 29, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 30, "case": {"description": "allOf combined with anyOf, oneOf", "schema": {"allOf": [{"multipleOf": 2}], "anyOf": [{"multipleOf": 3}], "oneOf": [{"multipleOf": 5}]}, "tests": [{"description": "allOf: false, anyOf: false, oneOf: false", "instance": 1, "valid": false}, {"description": "allOf: false, anyOf: false, oneOf: true", "instance": 5, "valid": false}, {"description": "allOf: false, anyOf: true, oneOf: false", "instance": 3, "valid": false}, {"description": "allOf: false, anyOf: true, oneOf: true", "instance": 15, "valid": false}, {"description": "allOf: true, anyOf: false, oneOf: false", "instance": 2, "valid": false}, {"description": "allOf: true, anyOf: false, oneOf: true", "instance": 10, "valid": false}, {"description": "allOf: true, anyOf: true, oneOf: false", "instance": 6, "valid": false}, {"description": "allOf: true, anyOf: true, oneOf: true", "instance": 30, "valid": true}]}}
{"seq": 30, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "go-gojsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "lua-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "js-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "python-fastjsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "clojure-json-schema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 30, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 30, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 31, "case": {"description": "anyOf", "schema": {"anyOf": [{"type": "integer"}, {"minimum": 2}]}, "tests": [{"description": "first anyOf valid", "instance": 1, "valid": true}, {"description": "second anyOf valid", "instance": 2.5, "valid": true}, {"description": "both anyOf valid", "instance": 3, "valid": true}, {"description": "neither anyOf valid", "instance": 1.5, "valid": false}]}}
{"seq": 31, "implementation": "python-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "rust-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "go-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "rust-boon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "ruby-json_schemer", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "php-opis-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "go-gojsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-schemasafe", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-hyperjump", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "lua-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "python-fastjsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "clojure-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 31, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "js-ajv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "java-openapiprocessor", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 31, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 32, "case": {"description": "anyOf with base schema", "schema": {"type": "string", "anyOf": [{"maxLength": 2}, {"minLength": 4}]}, "tests": [{"description": "mismatch base schema", "instance": 3, "valid": false}, {"description": "one anyOf valid", "instance": "foobar", "valid": true}, {"description": "both anyOf invalid", "instance": "foo", "valid": false}]}}
{"seq": 32, "implementation": "python-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "lua-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "go-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "rust-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "cpp-jsontoolkit", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "rust-boon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "ruby-json_schemer", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "js-hyperjump", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "js-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "go-gojsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "js-schemasafe", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "php-opis-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "js-ajv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "java-openapiprocessor", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "clojure-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 32, "implementation": "python-fastjsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "java-jsonschemafriend", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 32, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 33, "case": {"description": "anyOf with boolean schemas, all true", "schema": {"anyOf": [true, true]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 33, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "java-jsonschemafriend", "expected": [true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/1}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/1}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 33, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 33, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "case": {"description": "anyOf with boolean schemas, some true", "schema": {"anyOf": [true, false]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 34, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "java-jsonschemafriend", "expected": [true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/1}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/1}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 34, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 34, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 35, "case": {"description": "anyOf with boolean schemas, all false", "schema": {"anyOf": [false, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 35, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "java-jsonschemafriend", "expected": [false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/1}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/anyOf/1}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 35, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 35, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 36, "case": {"description": "anyOf complex types", "schema": {"anyOf": [{"properties": {"bar": {"type": "integer"}}, "required": ["bar"]}, {"properties": {"foo": {"type": "string"}}, "required": ["foo"]}]}, "tests": [{"description": "first anyOf valid (complex)", "instance": {"bar": 2}, "valid": true}, {"description": "second anyOf valid (complex)", "instance": {"foo": "baz"}, "valid": true}, {"description": "both anyOf valid (complex)", "instance": {"foo": "baz", "bar": 2}, "valid": true}, {"description": "neither anyOf valid (complex)", "instance": {"foo": 2, "bar": "quux"}, "valid": false}]}}
{"seq": 36, "implementation": "python-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "php-opis-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "js-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "js-schemasafe", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "js-hyperjump", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "lua-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "ruby-json_schemer", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "go-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "go-gojsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "rust-boon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "python-fastjsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "rust-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "js-ajv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "clojure-json-schema", "expected": [true, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 36, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "java-openapiprocessor", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 36, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 37, "case": {"description": "anyOf with one empty schema", "schema": {"anyOf": [{"type": "number"}, {}]}, "tests": [{"description": "string is valid", "instance": "foo", "valid": true}, {"description": "number is valid", "instance": 123, "valid": true}]}}
{"seq": 37, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "js-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "lua-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "go-gojsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "cpp-jsontoolkit", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "python-fastjsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "clojure-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 37, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 38, "case": {"description": "nested anyOf, to check validation semantics", "schema": {"anyOf": [{"anyOf": [{"type": "null"}]}]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "anything non-null is invalid", "instance": 123, "valid": false}]}}
{"seq": 38, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 38, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 38, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 39, "case": {"description": "boolean schema 'true'", "schema": true, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is valid", "instance": "foo", "valid": true}, {"description": "boolean true is valid", "instance": true, "valid": true}, {"description": "boolean false is valid", "instance": false, "valid": true}, {"description": "null is valid", "instance": null, "valid": true}, {"description": "object is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "empty object is valid", "instance": {}, "valid": true}, {"description": "array is valid", "instance": ["foo"], "valid": true}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 39, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 39, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 39, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 40, "case": {"description": "boolean schema 'false'", "schema": false, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "boolean true is invalid", "instance": true, "valid": false}, {"description": "boolean false is invalid", "instance": false, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}, {"description": "object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 40, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "clojure-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "python-fastjsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 40, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "lua-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "go-gojsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "js-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 40, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 41, "case": {"description": "const validation", "schema": {"const": 2}, "tests": [{"description": "same value is valid", "instance": 2, "valid": true}, {"description": "another value is invalid", "instance": 5, "valid": false}, {"description": "another type is invalid", "instance": "a", "valid": false}]}}
{"seq": 41, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 41, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 41, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "case": {"description": "const with object", "schema": {"const": {"foo": "bar", "baz": "bax"}}, "tests": [{"description": "same object is valid", "instance": {"foo": "bar", "baz": "bax"}, "valid": true}, {"description": "same object with different property order is valid", "instance": {"baz": "bax", "foo": "bar"}, "valid": true}, {"description": "another object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "another type is invalid", "instance": [1, 2], "valid": false}]}}
{"seq": 42, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "go-gojsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "lua-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "python-fastjsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "clojure-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 42, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 42, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "case": {"description": "const with array", "schema": {"const": [{"foo": "bar"}]}, "tests": [{"description": "same array is valid", "instance": [{"foo": "bar"}], "valid": true}, {"description": "another array item is invalid", "instance": [2], "valid": false}, {"description": "array with additional items is invalid", "instance": [1, 2, 3], "valid": false}]}}
{"seq": 43, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 43, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 43, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 44, "case": {"description": "const with null", "schema": {"const": null}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "not null is invalid", "instance": 0, "valid": false}]}}
{"seq": 44, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 44, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 44, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 44, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 45, "case": {"description": "const with false does not match 0", "schema": {"const": false}, "tests": [{"description": "false is valid", "instance": false, "valid": true}, {"description": "integer zero is invalid", "instance": 0, "valid": false}, {"description": "float zero is invalid", "instance": 0.0, "valid": false}]}}
{"seq": 45, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 45, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 45, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 45, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "case": {"description": "const with true does not match 1", "schema": {"const": true}, "tests": [{"description": "true is valid", "instance": true, "valid": true}, {"description": "integer one is invalid", "instance": 1, "valid": false}, {"description": "float one is invalid", "instance": 1.0, "valid": false}]}}
{"seq": 46, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 46, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 46, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 46, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "case": {"description": "const with [false] does not match [0]", "schema": {"const": [false]}, "tests": [{"description": "[false] is valid", "instance": [false], "valid": true}, {"description": "[0] is invalid", "instance": [0], "valid": false}, {"description": "[0.0] is invalid", "instance": [0.0], "valid": false}]}}
{"seq": 47, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 47, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 47, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "case": {"description": "const with [true] does not match [1]", "schema": {"const": [true]}, "tests": [{"description": "[true] is valid", "instance": [true], "valid": true}, {"description": "[1] is invalid", "instance": [1], "valid": false}, {"description": "[1.0] is invalid", "instance": [1.0], "valid": false}]}}
{"seq": 48, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 48, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 48, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 48, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "case": {"description": "const with {\"a\": false} does not match {\"a\": 0}", "schema": {"const": {"a": false}}, "tests": [{"description": "{\"a\": false} is valid", "instance": {"a": false}, "valid": true}, {"description": "{\"a\": 0} is invalid", "instance": {"a": 0}, "valid": false}, {"description": "{\"a\": 0.0} is invalid", "instance": {"a": 0.0}, "valid": false}]}}
{"seq": 49, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 49, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 49, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 49, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "case": {"description": "const with {\"a\": true} does not match {\"a\": 1}", "schema": {"const": {"a": true}}, "tests": [{"description": "{\"a\": true} is valid", "instance": {"a": true}, "valid": true}, {"description": "{\"a\": 1} is invalid", "instance": {"a": 1}, "valid": false}, {"description": "{\"a\": 1.0} is invalid", "instance": {"a": 1.0}, "valid": false}]}}
{"seq": 50, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 50, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 50, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 50, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 51, "case": {"description": "const with 0 does not match other zero-like types", "schema": {"const": 0}, "tests": [{"description": "false is invalid", "instance": false, "valid": false}, {"description": "integer zero is valid", "instance": 0, "valid": true}, {"description": "float zero is valid", "instance": 0.0, "valid": true}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}, {"description": "empty string is invalid", "instance": "", "valid": false}]}}
{"seq": 51, "implementation": "python-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "php-opis-json-schema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "js-schemasafe", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "python-fastjsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "js-ajv", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "rust-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "clojure-json-schema", "expected": [false, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 51, "implementation": "go-gojsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "cpp-jsontoolkit", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "go-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "ruby-json_schemer", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "js-hyperjump", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "lua-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "java-jsonschemafriend", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "rust-boon", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "java-openapiprocessor", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "js-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 51, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true, false, false, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 52, "case": {"description": "const with 1 does not match true", "schema": {"const": 1}, "tests": [{"description": "true is invalid", "instance": true, "valid": false}, {"description": "integer one is valid", "instance": 1, "valid": true}, {"description": "float one is valid", "instance": 1.0, "valid": true}]}}
{"seq": 52, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "lua-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "clojure-json-schema", "expected": [false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "cpp-jsontoolkit", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "js-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "python-fastjsonschema", "expected": [false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "go-gojsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 52, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 53, "case": {"description": "const with -2.0 matches integer and float types", "schema": {"const": -2.0}, "tests": [{"description": "integer -2 is valid", "instance": -2, "valid": true}, {"description": "integer 2 is invalid", "instance": 2, "valid": false}, {"description": "float -2.0 is valid", "instance": -2.0, "valid": true}, {"description": "float 2.0 is invalid", "instance": 2.0, "valid": false}, {"description": "float -2.00001 is invalid", "instance": -2.00001, "valid": false}]}}
{"seq": 53, "implementation": "python-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "rust-boon", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "js-ajv", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "go-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "clojure-json-schema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 53, "implementation": "js-hyperjump", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "go-gojsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "python-fastjsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "php-opis-json-schema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "lua-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "ruby-json_schemer", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "rust-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "js-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "js-schemasafe", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "java-openapiprocessor", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 53, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 54, "case": {"description": "float and integers are equal up to 64-bit representation limits", "schema": {"const": 9007199254740992}, "tests": [{"description": "integer is valid", "instance": 9007199254740992, "valid": true}, {"description": "integer minus one is invalid", "instance": 9007199254740991, "valid": false}, {"description": "float is valid", "instance": 9007199254740992.0, "valid": true}, {"description": "float minus one is invalid", "instance": 9007199254740991.0, "valid": false}]}}
{"seq": 54, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "lua-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "go-gojsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "python-fastjsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "js-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "clojure-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 54, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 54, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 55, "case": {"description": "nul characters in strings", "schema": {"const": "hello\u0000there"}, "tests": [{"description": "match string with nul", "instance": "hello\u0000there", "valid": true}, {"description": "do not match string lacking nul", "instance": "hellothere", "valid": false}]}}
{"seq": 55, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 55, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 212, in compile\n    exec(code_generator.func_code, global_state)\nSyntaxError: source code string cannot contain null bytes\n"}, "message": "", "caught": true, "errored": true}
{"seq": 55, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 55, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 56, "case": {"description": "contains keyword validation", "schema": {"contains": {"minimum": 5}}, "tests": [{"description": "array with item matching schema (5) is valid", "instance": [3, 4, 5], "valid": true}, {"description": "array with item matching schema (6) is valid", "instance": [3, 4, 6], "valid": true}, {"description": "array with two items matching schema (5, 6) is valid", "instance": [3, 4, 5, 6], "valid": true}, {"description": "array without items matching schema is invalid", "instance": [2, 3, 4], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}, {"description": "not array is valid", "instance": {}, "valid": true}]}}
{"seq": 56, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "js-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "go-gojsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "rust-boon", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "clojure-json-schema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 56, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "lua-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 56, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "js-ajv", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 56, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 57, "case": {"description": "contains keyword with const keyword", "schema": {"contains": {"const": 5}}, "tests": [{"description": "array with item 5 is valid", "instance": [3, 4, 5], "valid": true}, {"description": "array with two items 5 is valid", "instance": [3, 4, 5, 5], "valid": true}, {"description": "array without item 5 is invalid", "instance": [1, 2, 3, 4], "valid": false}]}}
{"seq": 57, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "lua-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "clojure-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 57, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "python-fastjsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 57, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 58, "case": {"description": "contains keyword with boolean schema true", "schema": {"contains": true}, "tests": [{"description": "any non-empty array is valid", "instance": ["foo"], "valid": true}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 58, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 58, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 58, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 59, "case": {"description": "contains keyword with boolean schema false", "schema": {"contains": false}, "tests": [{"description": "any non-empty array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}, {"description": "non-arrays are valid", "instance": "contains does not apply to strings", "valid": true}]}}
{"seq": 59, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "lua-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "go-gojsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "cpp-jsontoolkit", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "python-fastjsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "js-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "clojure-json-schema", "expected": [false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 59, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 59, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 60, "case": {"description": "items + contains", "schema": {"items": {"multipleOf": 2}, "contains": {"multipleOf": 3}}, "tests": [{"description": "matches items, does not match contains", "instance": [2, 4, 8], "valid": false}, {"description": "does not match items, matches contains", "instance": [3, 6, 9], "valid": false}, {"description": "matches both items and contains", "instance": [6, 12], "valid": true}, {"description": "matches neither items nor contains", "instance": [1, 5], "valid": false}]}}
{"seq": 60, "implementation": "python-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "go-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "rust-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "rust-boon", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "php-opis-json-schema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "go-gojsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "ruby-json_schemer", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "js-hyperjump", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "python-fastjsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "java-openapiprocessor", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "lua-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "cpp-jsontoolkit", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "js-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "js-schemasafe", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "clojure-json-schema", "expected": [false, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 60, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "js-ajv", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "java-jsonschemafriend", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 60, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 61, "case": {"description": "contains with null instance elements", "schema": {"contains": {"type": "null"}}, "tests": [{"description": "allows null items", "instance": [null], "valid": true}]}}
{"seq": 61, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": false}]}
{"seq": 61, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 61, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 62, "case": {"description": "invalid type for default", "schema": {"properties": {"foo": {"type": "integer", "default": []}}}, "tests": [{"description": "valid when property is specified", "instance": {"foo": 13}, "valid": true}, {"description": "still valid when the invalid default is used", "instance": {}, "valid": true}]}}
{"seq": 62, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "python-fastjsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "go-gojsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "cpp-jsontoolkit", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "lua-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "clojure-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 62, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "case": {"description": "invalid string value for default", "schema": {"properties": {"bar": {"type": "string", "minLength": 4, "default": "bad"}}}, "tests": [{"description": "valid when property is specified", "instance": {"bar": "good"}, "valid": true}, {"description": "still valid when the invalid default is used", "instance": {}, "valid": true}]}}
{"seq": 63, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "go-gojsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "lua-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "python-fastjsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "clojure-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "cpp-jsontoolkit", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 63, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 64, "case": {"description": "the default keyword does not do anything if the property is missing", "schema": {"type": "object", "properties": {"alpha": {"type": "number", "maximum": 3, "default": 5}}}, "tests": [{"description": "an explicit property value is checked against maximum (passing)", "instance": {"alpha": 1}, "valid": true}, {"description": "an explicit property value is checked against maximum (failing)", "instance": {"alpha": 5}, "valid": false}, {"description": "missing properties are not filled in with the default", "instance": {}, "valid": true}]}}
{"seq": 64, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "lua-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "go-gojsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "cpp-jsontoolkit", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "clojure-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 64, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "python-fastjsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 64, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 65, "case": {"description": "validate definition against metaschema", "schema": {"$ref": "http://json-schema.org/draft-06/schema#"}, "tests": [{"description": "valid definition schema", "instance": {"definitions": {"foo": {"type": "integer"}}}, "valid": true}, {"description": "invalid definition schema", "instance": {"definitions": {"foo": {"type": 1}}}, "valid": false}]}}
{"seq": 65, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "bowtie_jsonschema.lua:14: attempt to index upvalue 'registry' (a nil value)\nstack traceback:\n\tbowtie_jsonschema.lua:14: in function 'resolver'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:150: in function 'fetch'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:82: in function 'resolve'\n\t/usr/local/share/lua/5.1/jsonschema.lua:167: in function 'validator'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1184: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 65, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 65, "implementation": "js-schemasafe", "expected": [true, false], "context": {"traceback": "Error: failed to resolve $ref: \"http://json-schema.org/draft-06/schema#\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1194:11\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at writeMain (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1190:7)\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at visit (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1297:13)\n    at compileSchema (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1342:27)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:50\n    at Array.map (<anonymous>)\n    at compile (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:26)", "message": "failed to resolve $ref: \"http://json-schema.org/draft-06/schema#\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 65, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "Unresolved reference: http://json-schema.org/draft-06/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(113): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(158): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(141): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '06')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "Unresolved reference: http://json-schema.org/draft-06/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(113): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(158): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(141): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '06')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}]}
{"seq": 65, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 65, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.UnknownHostException: json-schema.org\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.UnknownHostException: json-schema.org\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.UnknownHostException: json-schema.org\n at sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:567)\n    java.net.Socket.connect (Socket.java:752)\n    java.net.Socket.connect (Socket.java:687)\n    sun.net.NetworkClient.doConnect (NetworkClient.java:183)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 65, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 65, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 829, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 964, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsocket.gaierror: [Errno -3] Try again\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno -3] Try again>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 66, "case": {"description": "dependencies", "schema": {"dependencies": {"bar": ["foo"]}}, "tests": [{"description": "neither", "instance": {}, "valid": true}, {"description": "nondependant", "instance": {"foo": 1}, "valid": true}, {"description": "with dependency", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "missing dependency", "instance": {"bar": 2}, "valid": false}, {"description": "ignores arrays", "instance": ["bar"], "valid": true}, {"description": "ignores strings", "instance": "foobar", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 66, "implementation": "python-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-hyperjump", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "go-gojsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "lua-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-ajv", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "js-schemasafe", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "rust-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "rust-boon", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "go-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "clojure-json-schema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 66, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "case": {"description": "dependencies with empty array", "schema": {"dependencies": {"bar": []}}, "tests": [{"description": "empty object", "instance": {}, "valid": true}, {"description": "object with one property", "instance": {"bar": 2}, "valid": true}, {"description": "non-object is valid", "instance": 1, "valid": true}]}}
{"seq": 67, "implementation": "python-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "rust-boon", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "python-fastjsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "lua-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "go-gojsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-ajv", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "ruby-json_schemer", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "php-opis-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-hyperjump", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "java-openapiprocessor", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "cpp-jsontoolkit", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "go-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "js-schemasafe", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "rust-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "clojure-json-schema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 67, "implementation": "java-jsonschemafriend", "expected": [true, true, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[[] at #/dependencies/bar failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [array]\"], [[] at #/dependencies/bar failed against http://json-schema.org/draft-04/schema#/definitions/stringArray with \"Below min items: 1\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, instanceLocation=#/dependencies/bar}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[[] at #/dependencies/bar failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [array]\"], [[] at #/dependencies/bar failed against http://json-schema.org/draft-04/schema#/definitions/stringArray with \"Below min items: 1\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, instanceLocation=#/dependencies/bar}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 67, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 68, "case": {"description": "multiple dependencies", "schema": {"dependencies": {"quux": ["foo", "bar"]}}, "tests": [{"description": "neither", "instance": {}, "valid": true}, {"description": "nondependants", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "with dependencies", "instance": {"foo": 1, "bar": 2, "quux": 3}, "valid": true}, {"description": "missing dependency", "instance": {"foo": 1, "quux": 2}, "valid": false}, {"description": "missing other dependency", "instance": {"bar": 1, "quux": 2}, "valid": false}, {"description": "missing both dependencies", "instance": {"quux": 1}, "valid": false}]}}
{"seq": 68, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "rust-boon", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "lua-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "go-gojsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-ajv", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "clojure-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 68, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "js-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 68, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "case": {"description": "multiple dependencies subschema", "schema": {"dependencies": {"bar": {"properties": {"foo": {"type": "integer"}, "bar": {"type": "integer"}}}}}, "tests": [{"description": "valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "no dependency", "instance": {"foo": "quux"}, "valid": true}, {"description": "wrong type", "instance": {"foo": "quux", "bar": 2}, "valid": false}, {"description": "wrong type other", "instance": {"foo": 2, "bar": "quux"}, "valid": false}, {"description": "wrong type both", "instance": {"foo": "quux", "bar": "quux"}, "valid": false}]}}
{"seq": 69, "implementation": "python-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-hyperjump", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "rust-boon", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-ajv", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "lua-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "js-schemasafe", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "go-gojsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "go-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "clojure-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 69, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 69, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 70, "case": {"description": "dependencies with boolean subschemas", "schema": {"dependencies": {"foo": true, "bar": false}}, "tests": [{"description": "object with property having schema true is valid", "instance": {"foo": 1}, "valid": true}, {"description": "object with property having schema false is invalid", "instance": {"bar": 2}, "valid": false}, {"description": "object with both properties is invalid", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 70, "implementation": "python-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "go-gojsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "php-opis-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "go-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "js-ajv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "rust-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "ruby-json_schemer", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "rust-boon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "js-hyperjump", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "js-schemasafe", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "clojure-json-schema", "expected": [true, false, false, true], "context": {"traceback": "org.everit.json.schema.SchemaException: #/dependencies/bar: expected type is one of JsonArray or JsonObject, found: Boolean\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:161)\n    org.everit.json.schema.loader.JsonValue$Multiplexer.multiplexFailure (JsonValue.java:51)\n    org.everit.json.schema.loader.JsonValue$Multiplexer.lambda$requireAny$1 (JsonValue.java:46)\n    java.util.Optional.orElseThrow (Optional.java:403)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 70, "implementation": "python-fastjsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "java-openapiprocessor", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "js-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "lua-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 70, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[false at #/dependencies/bar failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [false at #/dependencies/bar failed against http://json-schema.org/draft-04/schema#/definitions/stringArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, instanceLocation=#/dependencies/bar}, {valid=false, error=All anyOf failed: [[true at #/dependencies/foo failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [true at #/dependencies/foo failed against http://json-schema.org/draft-04/schema#/definitions/stringArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, instanceLocation=#/dependencies/foo}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[false at #/dependencies/bar failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [false at #/dependencies/bar failed against http://json-schema.org/draft-04/schema#/definitions/stringArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, instanceLocation=#/dependencies/bar}, {valid=false, error=All anyOf failed: [[true at #/dependencies/foo failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [true at #/dependencies/foo failed against http://json-schema.org/draft-04/schema#/definitions/stringArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties, instanceLocation=#/dependencies/foo}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 70, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 71, "case": {"description": "dependencies with escaped characters", "schema": {"dependencies": {"foo\nbar": ["foo\rbar"], "foo\tbar": {"minProperties": 4}, "foo'bar": {"required": ["foo\"bar"]}, "foo\"bar": ["foo'bar"]}}, "tests": [{"description": "valid object 1", "instance": {"foo\nbar": 1, "foo\rbar": 2}, "valid": true}, {"description": "valid object 2", "instance": {"foo\tbar": 1, "a": 2, "b": 3, "c": 4}, "valid": true}, {"description": "valid object 3", "instance": {"foo'bar": 1, "foo\"bar": 2}, "valid": true}, {"description": "invalid object 1", "instance": {"foo\nbar": 1, "foo": 2}, "valid": false}, {"description": "invalid object 2", "instance": {"foo\tbar": 1, "a": 2}, "valid": false}, {"description": "invalid object 3", "instance": {"foo'bar": 1}, "valid": false}, {"description": "invalid object 4", "instance": {"foo\"bar": 2}, "valid": false}]}}
{"seq": 71, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "go-gojsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "lua-jsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "js-jsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "rust-boon", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "clojure-json-schema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 71, "implementation": "js-ajv", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 71, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 72, "case": {"description": "dependent subschema incompatible with root", "schema": {"properties": {"foo": {}}, "dependencies": {"foo": {"properties": {"bar": {}}, "additionalProperties": false}}}, "tests": [{"description": "matches root", "instance": {"foo": 1}, "valid": false}, {"description": "matches dependency", "instance": {"bar": 1}, "valid": true}, {"description": "matches both", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "no dependency", "instance": {"baz": 1}, "valid": true}]}}
{"seq": 72, "implementation": "python-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "js-ajv", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "go-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "rust-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "python-fastjsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "rust-boon", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "go-gojsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "ruby-json_schemer", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "cpp-jsontoolkit", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "js-schemasafe", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "js-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "php-opis-json-schema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "clojure-json-schema", "expected": [false, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 72, "implementation": "java-jsonschemafriend", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "java-openapiprocessor", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "lua-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "js-hyperjump", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 72, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 73, "case": {"description": "simple enum validation", "schema": {"enum": [1, 2, 3]}, "tests": [{"description": "one of the enum is valid", "instance": 1, "valid": true}, {"description": "something else is invalid", "instance": 4, "valid": false}]}}
{"seq": 73, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 73, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 73, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 74, "case": {"description": "heterogeneous enum validation", "schema": {"enum": [6, "foo", [], true, {"foo": 12}]}, "tests": [{"description": "one of the enum is valid", "instance": [], "valid": true}, {"description": "something else is invalid", "instance": null, "valid": false}, {"description": "objects are deep compared", "instance": {"foo": false}, "valid": false}, {"description": "valid object matches", "instance": {"foo": 12}, "valid": true}, {"description": "extra properties in object is invalid", "instance": {"foo": 12, "boo": 42}, "valid": false}]}}
{"seq": 74, "implementation": "python-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "go-gojsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "python-fastjsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "rust-boon", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "rust-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "js-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "go-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "lua-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "js-hyperjump", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "js-schemasafe", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "js-ajv", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "clojure-json-schema", "expected": [true, false, false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 74, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 74, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 75, "case": {"description": "heterogeneous enum-with-null validation", "schema": {"enum": [6, null]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "number is valid", "instance": 6, "valid": true}, {"description": "something else is invalid", "instance": "test", "valid": false}]}}
{"seq": 75, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "clojure-json-schema", "expected": [true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 75, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "lua-jsonschema", "expected": [true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "python-fastjsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 75, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 76, "case": {"description": "enums in properties", "schema": {"type": "object", "properties": {"foo": {"enum": ["foo"]}, "bar": {"enum": ["bar"]}}, "required": ["bar"]}, "tests": [{"description": "both properties are valid", "instance": {"foo": "foo", "bar": "bar"}, "valid": true}, {"description": "wrong foo value", "instance": {"foo": "foot", "bar": "bar"}, "valid": false}, {"description": "wrong bar value", "instance": {"foo": "foo", "bar": "bart"}, "valid": false}, {"description": "missing optional property is valid", "instance": {"bar": "bar"}, "valid": true}, {"description": "missing required property is invalid", "instance": {"foo": "foo"}, "valid": false}, {"description": "missing all properties is invalid", "instance": {}, "valid": false}]}}
{"seq": 76, "implementation": "python-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "rust-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "rust-boon", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "js-hyperjump", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "js-schemasafe", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "lua-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "js-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "go-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "go-gojsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "js-ajv", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "python-fastjsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "clojure-json-schema", "expected": [true, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 76, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 77, "case": {"description": "enum with escaped characters", "schema": {"enum": ["foo\nbar", "foo\rbar"]}, "tests": [{"description": "member 1 is valid", "instance": "foo\nbar", "valid": true}, {"description": "member 2 is valid", "instance": "foo\rbar", "valid": true}, {"description": "another string is invalid", "instance": "abc", "valid": false}]}}
{"seq": 77, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "lua-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "python-fastjsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 77, "implementation": "clojure-json-schema", "expected": [true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 77, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 78, "case": {"description": "enum with false does not match 0", "schema": {"enum": [false]}, "tests": [{"description": "false is valid", "instance": false, "valid": true}, {"description": "integer zero is invalid", "instance": 0, "valid": false}, {"description": "float zero is invalid", "instance": 0.0, "valid": false}]}}
{"seq": 78, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 78, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 78, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "case": {"description": "enum with [false] does not match [0]", "schema": {"enum": [[false]]}, "tests": [{"description": "[false] is valid", "instance": [false], "valid": true}, {"description": "[0] is invalid", "instance": [0], "valid": false}, {"description": "[0.0] is invalid", "instance": [0.0], "valid": false}]}}
{"seq": 79, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 79, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 79, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "case": {"description": "enum with true does not match 1", "schema": {"enum": [true]}, "tests": [{"description": "true is valid", "instance": true, "valid": true}, {"description": "integer one is invalid", "instance": 1, "valid": false}, {"description": "float one is invalid", "instance": 1.0, "valid": false}]}}
{"seq": 80, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 80, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 80, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "case": {"description": "enum with [true] does not match [1]", "schema": {"enum": [[true]]}, "tests": [{"description": "[true] is valid", "instance": [true], "valid": true}, {"description": "[1] is invalid", "instance": [1], "valid": false}, {"description": "[1.0] is invalid", "instance": [1.0], "valid": false}]}}
{"seq": 81, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 81, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 81, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 82, "case": {"description": "enum with 0 does not match false", "schema": {"enum": [0]}, "tests": [{"description": "false is invalid", "instance": false, "valid": false}, {"description": "integer zero is valid", "instance": 0, "valid": true}, {"description": "float zero is valid", "instance": 0.0, "valid": true}]}}
{"seq": 82, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "lua-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "cpp-jsontoolkit", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "go-gojsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "python-fastjsonschema", "expected": [false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "js-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 82, "implementation": "clojure-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 82, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "case": {"description": "enum with [0] does not match [false]", "schema": {"enum": [[0]]}, "tests": [{"description": "[false] is invalid", "instance": [false], "valid": false}, {"description": "[0] is valid", "instance": [0], "valid": true}, {"description": "[0.0] is valid", "instance": [0.0], "valid": true}]}}
{"seq": 83, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "go-gojsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "lua-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "cpp-jsontoolkit", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "python-fastjsonschema", "expected": [false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "clojure-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 83, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "js-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 83, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 83, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "case": {"description": "enum with 1 does not match true", "schema": {"enum": [1]}, "tests": [{"description": "true is invalid", "instance": true, "valid": false}, {"description": "integer one is valid", "instance": 1, "valid": true}, {"description": "float one is valid", "instance": 1.0, "valid": true}]}}
{"seq": 84, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "go-gojsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "python-fastjsonschema", "expected": [false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "lua-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "cpp-jsontoolkit", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "js-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 84, "implementation": "clojure-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 84, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "case": {"description": "enum with [1] does not match [true]", "schema": {"enum": [[1]]}, "tests": [{"description": "[true] is invalid", "instance": [true], "valid": false}, {"description": "[1] is valid", "instance": [1], "valid": true}, {"description": "[1.0] is valid", "instance": [1.0], "valid": true}]}}
{"seq": 85, "implementation": "python-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "rust-boon", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "go-gojsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "rust-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "cpp-jsontoolkit", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "js-hyperjump", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "lua-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "ruby-json_schemer", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "go-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "php-opis-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "java-jsonschemafriend", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 85, "implementation": "python-fastjsonschema", "expected": [false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "js-schemasafe", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "java-openapiprocessor", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "js-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "js-ajv", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 85, "implementation": "clojure-json-schema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 85, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 86, "case": {"description": "nul characters in strings", "schema": {"enum": ["hello\u0000there"]}, "tests": [{"description": "match string with nul", "instance": "hello\u0000there", "valid": true}, {"description": "do not match string lacking nul", "instance": "hellothere", "valid": false}]}}
{"seq": 86, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 86, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 86, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 87, "case": {"description": "exclusiveMaximum validation", "schema": {"exclusiveMaximum": 3.0}, "tests": [{"description": "below the exclusiveMaximum is valid", "instance": 2.2, "valid": true}, {"description": "boundary point is invalid", "instance": 3.0, "valid": false}, {"description": "above the exclusiveMaximum is invalid", "instance": 3.5, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 87, "implementation": "python-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "ruby-json_schemer", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "php-opis-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "go-gojsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-schemasafe", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "rust-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "go-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "lua-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "rust-boon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "python-fastjsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-hyperjump", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-ajv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "clojure-json-schema", "expected": [true, false, false, true], "context": {"traceback": "org.everit.json.schema.SchemaException: #/exclusiveMaximum: expected type: Boolean, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireBoolean (JsonValue.java:197)\n    org.everit.json.schema.loader.JsonValue.requireBoolean (JsonValue.java:190)\n    org.everit.json.schema.loader.V4ExclusiveLimitHandler.handleExclusiveMaximum (ExclusiveLimitHandler.java:14)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 87, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "js-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "java-openapiprocessor", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 87, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [boolean] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum, instanceLocation=#/exclusiveMaximum}, {valid=false, error=Missing dependency exclusiveMaximum -> maximum, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [boolean] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum, instanceLocation=#/exclusiveMaximum}, {valid=false, error=Missing dependency exclusiveMaximum -> maximum, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 87, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "case": {"description": "exclusiveMinimum validation", "schema": {"exclusiveMinimum": 1.1}, "tests": [{"description": "above the exclusiveMinimum is valid", "instance": 1.2, "valid": true}, {"description": "boundary point is invalid", "instance": 1.1, "valid": false}, {"description": "below the exclusiveMinimum is invalid", "instance": 0.6, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 88, "implementation": "python-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "rust-boon", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "js-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "js-hyperjump", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "lua-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "go-gojsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "go-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "clojure-json-schema", "expected": [true, false, false, true], "context": {"traceback": "org.everit.json.schema.SchemaException: #/exclusiveMinimum: expected type: Boolean, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireBoolean (JsonValue.java:197)\n    org.everit.json.schema.loader.JsonValue.requireBoolean (JsonValue.java:190)\n    org.everit.json.schema.loader.V4ExclusiveLimitHandler.handleExclusiveMinimum (ExclusiveLimitHandler.java:9)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 88, "implementation": "php-opis-json-schema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "ruby-json_schemer", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "python-fastjsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "js-ajv", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "js-schemasafe", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [boolean] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum, instanceLocation=#/exclusiveMinimum}, {valid=false, error=Missing dependency exclusiveMinimum -> minimum, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [boolean] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum, instanceLocation=#/exclusiveMinimum}, {valid=false, error=Missing dependency exclusiveMinimum -> minimum, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 88, "implementation": "rust-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "java-openapiprocessor", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 88, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 89, "case": {"description": "email format", "schema": {"format": "email"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 89, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"email\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"email\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 89, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 89, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "case": {"description": "ipv4 format", "schema": {"format": "ipv4"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 90, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"ipv4\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"ipv4\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 90, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 90, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "case": {"description": "ipv6 format", "schema": {"format": "ipv6"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 91, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"ipv6\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"ipv6\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 91, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 91, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "case": {"description": "hostname format", "schema": {"format": "hostname"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 92, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"hostname\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"hostname\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 92, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 92, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "case": {"description": "date-time format", "schema": {"format": "date-time"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 93, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"date-time\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"date-time\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 93, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 93, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "case": {"description": "json-pointer format", "schema": {"format": "json-pointer"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 94, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"json-pointer\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"json-pointer\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 94, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 94, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "case": {"description": "uri format", "schema": {"format": "uri"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 95, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"uri\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"uri\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 95, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 95, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "case": {"description": "uri-reference format", "schema": {"format": "uri-reference"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 96, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"uri-reference\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"uri-reference\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 96, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 96, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "case": {"description": "uri-template format", "schema": {"format": "uri-template"}, "tests": [{"description": "all string formats ignore integers", "instance": 12, "valid": true}, {"description": "all string formats ignore floats", "instance": 13.7, "valid": true}, {"description": "all string formats ignore objects", "instance": {}, "valid": true}, {"description": "all string formats ignore arrays", "instance": [], "valid": true}, {"description": "all string formats ignore booleans", "instance": false, "valid": true}, {"description": "all string formats ignore nulls", "instance": null, "valid": true}]}}
{"seq": 97, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "rust-boon", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "js-ajv", "expected": [true, true, true, true, true, true], "context": {"traceback": "Error: unknown format \"uri-template\" ignored in schema at path \"#\"\n    at unknownFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:63:23)\n    at validateFormat (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:50:17)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/format/format.js:22:13)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:192:13", "message": "unknown format \"uri-template\" ignored in schema at path \"#\""}, "message": "", "caught": true, "errored": true}
{"seq": 97, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 97, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 98, "case": {"description": "evaluating the same schema location against the same data location twice is not a sign of an infinite loop", "schema": {"definitions": {"int": {"type": "integer"}}, "allOf": [{"properties": {"foo": {"$ref": "#/definitions/int"}}}, {"additionalProperties": {"$ref": "#/definitions/int"}}]}, "tests": [{"description": "passing case", "instance": {"foo": 1}, "valid": true}, {"description": "failing case", "instance": {"foo": "a string"}, "valid": false}]}}
{"seq": 98, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 98, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 98, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 99, "case": {"description": "a schema given for items", "schema": {"items": {"type": "integer"}}, "tests": [{"description": "valid items", "instance": [1, 2, 3], "valid": true}, {"description": "wrong type of items", "instance": [1, "x"], "valid": false}, {"description": "ignores non-arrays", "instance": {"foo": "bar"}, "valid": true}, {"description": "JavaScript pseudo-array is valid", "instance": {"0": "invalid", "length": 1}, "valid": true}]}}
{"seq": 99, "implementation": "python-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "lua-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "rust-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "go-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "go-gojsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "php-opis-json-schema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "js-hyperjump", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "python-fastjsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "js-ajv", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "clojure-json-schema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "ruby-json_schemer", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "rust-boon", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "js-schemasafe", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "js-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "java-openapiprocessor", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 99, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 100, "case": {"description": "an array of schemas for items", "schema": {"items": [{"type": "integer"}, {"type": "string"}]}, "tests": [{"description": "correct types", "instance": [1, "foo"], "valid": true}, {"description": "wrong types", "instance": ["foo", 1], "valid": false}, {"description": "incomplete array of items", "instance": [1], "valid": true}, {"description": "array with additional items", "instance": [1, "foo", true], "valid": true}, {"description": "empty array", "instance": [], "valid": true}, {"description": "JavaScript pseudo-array is valid", "instance": {"0": "invalid", "1": "valid", "length": 2}, "valid": true}]}}
{"seq": 100, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "go-gojsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "python-fastjsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "rust-boon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "clojure-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "lua-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "js-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "js-ajv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 100, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 101, "case": {"description": "items with boolean schema (true)", "schema": {"items": true}, "tests": [{"description": "any array is valid", "instance": [1, "foo", true], "valid": true}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 101, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "cpp-jsontoolkit", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "java-jsonschemafriend", "expected": [true, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[true at #/items failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [true at #/items failed against http://json-schema.org/draft-04/schema#/definitions/schemaArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/items, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/items, instanceLocation=#/items}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[true at #/items failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [true at #/items failed against http://json-schema.org/draft-04/schema#/definitions/schemaArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/items, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/items, instanceLocation=#/items}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 101, "implementation": "lua-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "js-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "go-gojsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "python-fastjsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "clojure-json-schema", "expected": [true, true], "context": {"traceback": "org.everit.json.schema.SchemaException: #/items: expected type is one of JsonArray or JsonObject, found: Boolean\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:161)\n    org.everit.json.schema.loader.JsonValue$Multiplexer.multiplexFailure (JsonValue.java:51)\n    org.everit.json.schema.loader.JsonValue$Multiplexer.lambda$requireAny$1 (JsonValue.java:46)\n    java.util.Optional.orElseThrow (Optional.java:403)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 101, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 101, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 102, "case": {"description": "items with boolean schema (false)", "schema": {"items": false}, "tests": [{"description": "any non-empty array is invalid", "instance": [1, "foo", true], "valid": false}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 102, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "go-gojsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "js-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "lua-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "python-fastjsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "clojure-json-schema", "expected": [false, true], "context": {"traceback": "org.everit.json.schema.SchemaException: #/items: expected type is one of JsonArray or JsonObject, found: Boolean\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:161)\n    org.everit.json.schema.loader.JsonValue$Multiplexer.multiplexFailure (JsonValue.java:51)\n    org.everit.json.schema.loader.JsonValue$Multiplexer.lambda$requireAny$1 (JsonValue.java:46)\n    java.util.Optional.orElseThrow (Optional.java:403)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 102, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "cpp-jsontoolkit", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 102, "implementation": "java-jsonschemafriend", "expected": [false, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[false at #/items failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [false at #/items failed against http://json-schema.org/draft-04/schema#/definitions/schemaArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/items, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/items, instanceLocation=#/items}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[false at #/items failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"], [false at #/items failed against http://json-schema.org/draft-04/schema#/definitions/schemaArray with \"Expected: [array] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/items, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/items, instanceLocation=#/items}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 102, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 103, "case": {"description": "items with boolean schemas", "schema": {"items": [true, false]}, "tests": [{"description": "array with one item is valid", "instance": [1], "valid": true}, {"description": "array with two items is invalid", "instance": [1, "foo"], "valid": false}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 103, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "clojure-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 103, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "cpp-jsontoolkit", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "js-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[[true,false] at #/items failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [array]\"], [true at #/items/0 failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\", false at #/items/1 failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/items, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/items, instanceLocation=#/items}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=All anyOf failed: [[[true,false] at #/items failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [array]\"], [true at #/items/0 failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\", false at #/items/1 failed against http://json-schema.org/draft-04/schema with \"Expected: [object] Found: [boolean]\"]], keywordLocation=http://json-schema.org/draft-04/schema#/properties/items, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/properties/items, instanceLocation=#/items}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 103, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "python-fastjsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "lua-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "go-gojsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 103, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 104, "case": {"description": "items and subitems", "schema": {"definitions": {"item": {"type": "array", "additionalItems": false, "items": [{"$ref": "#/definitions/sub-item"}, {"$ref": "#/definitions/sub-item"}]}, "sub-item": {"type": "object", "required": ["foo"]}}, "type": "array", "additionalItems": false, "items": [{"$ref": "#/definitions/item"}, {"$ref": "#/definitions/item"}, {"$ref": "#/definitions/item"}]}, "tests": [{"description": "valid items", "instance": [[{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": true}, {"description": "too many items", "instance": [[{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "too many sub-items", "instance": [[{"foo": null}, {"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "wrong item", "instance": [{"foo": null}, [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "wrong sub-item", "instance": [[{}, {"foo": null}], [{"foo": null}, {"foo": null}], [{"foo": null}, {"foo": null}]], "valid": false}, {"description": "fewer items is valid", "instance": [[{"foo": null}], [{"foo": null}]], "valid": true}]}}
{"seq": 104, "implementation": "python-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "rust-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "rust-boon", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "go-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "python-fastjsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "js-schemasafe", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "clojure-json-schema", "expected": [true, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 104, "implementation": "lua-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 104, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "go-gojsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "js-hyperjump", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "js-ajv", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "js-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 104, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 105, "case": {"description": "nested items", "schema": {"type": "array", "items": {"type": "array", "items": {"type": "array", "items": {"type": "array", "items": {"type": "number"}}}}}, "tests": [{"description": "valid nested array", "instance": [[[[1]], [[2], [3]]], [[[4], [5], [6]]]], "valid": true}, {"description": "nested array with invalid type", "instance": [[[["1"]], [[2], [3]]], [[[4], [5], [6]]]], "valid": false}, {"description": "not deep enough", "instance": [[[1], [2], [3]], [[4], [5], [6]]], "valid": false}]}}
{"seq": 105, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 105, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 106, "case": {"description": "single-form items with null instance elements", "schema": {"items": {"type": "null"}}, "tests": [{"description": "allows null elements", "instance": [null], "valid": true}]}}
{"seq": 106, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 106, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "case": {"description": "array-form items with null instance elements", "schema": {"items": [{"type": "null"}]}, "tests": [{"description": "allows null elements", "instance": [null], "valid": true}]}}
{"seq": 107, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 107, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 108, "case": {"description": "maxItems validation", "schema": {"maxItems": 2}, "tests": [{"description": "shorter is valid", "instance": [1], "valid": true}, {"description": "exact length is valid", "instance": [1, 2], "valid": true}, {"description": "too long is invalid", "instance": [1, 2, 3], "valid": false}, {"description": "ignores non-arrays", "instance": "foobar", "valid": true}]}}
{"seq": 108, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "go-gojsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "python-fastjsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "lua-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "clojure-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 108, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 108, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 109, "case": {"description": "maxItems validation with a decimal", "schema": {"maxItems": 2.0}, "tests": [{"description": "shorter is valid", "instance": [1], "valid": true}, {"description": "too long is invalid", "instance": [1, 2, 3], "valid": false}]}}
{"seq": 109, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "org.everit.json.schema.SchemaException: #/maxItems: expected type: Integer, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:235)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:228)\n    java.util.Optional.map (Optional.java:260)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 109, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "maxItems must be of an integer"}, "message": "", "caught": true, "errored": true}
{"seq": 109, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 338, in generate_max_items\n    raise JsonSchemaDefinitionException('maxItems must be a number')\nfastjsonschema.exceptions.JsonSchemaDefinitionException: maxItems must be a number\n"}, "message": "", "caught": true, "errored": true}
{"seq": 109, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "maxItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 109, "implementation": "rust-jsonschema", "expected": [true, false], "context": {"message": "ValidationError { instance: Number(2.0), kind: Type { kind: Single(Integer) }, instance_path: JSONPointer([Property(\"maxItems\")]), schema_path: JSONPointer([]) }", "traceback": "   0: bowtie_rust_jsonschema::main\n   1: std::sys_common::backtrace::__rust_begin_short_backtrace\n   2: std::rt::lang_start::{{closure}}\n   3: std::rt::lang_start_internal\n   4: main\n"}, "message": "", "caught": true, "errored": true}
{"seq": 109, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "java-jsonschemafriend", "expected": [true, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/maxItems}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/maxItems}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 109, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 109, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 110, "case": {"description": "maxLength validation", "schema": {"maxLength": 2}, "tests": [{"description": "shorter is valid", "instance": "f", "valid": true}, {"description": "exact length is valid", "instance": "fo", "valid": true}, {"description": "too long is invalid", "instance": "foo", "valid": false}, {"description": "ignores non-strings", "instance": 100, "valid": true}, {"description": "two graphemes is long enough", "instance": "\ud83d\udca9\ud83d\udca9", "valid": true}]}}
{"seq": 110, "implementation": "python-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "rust-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "js-hyperjump", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "python-fastjsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "go-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "go-gojsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "js-schemasafe", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "clojure-json-schema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "js-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "js-ajv", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "rust-boon", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "lua-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 110, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 111, "case": {"description": "maxLength validation with a decimal", "schema": {"maxLength": 2.0}, "tests": [{"description": "shorter is valid", "instance": "f", "valid": true}, {"description": "too long is invalid", "instance": "foo", "valid": false}]}}
{"seq": 111, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "rust-jsonschema", "expected": [true, false], "context": {"message": "ValidationError { instance: Number(2.0), kind: Type { kind: Single(Integer) }, instance_path: JSONPointer([Property(\"maxLength\")]), schema_path: JSONPointer([]) }", "traceback": "   0: bowtie_rust_jsonschema::main\n   1: std::sys_common::backtrace::__rust_begin_short_backtrace\n   2: std::rt::lang_start::{{closure}}\n   3: std::rt::lang_start_internal\n   4: main\n"}, "message": "", "caught": true, "errored": true}
{"seq": 111, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "maxLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('f', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('f', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 111, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "maxLength must be of an integer"}, "message": "", "caught": true, "errored": true}
{"seq": 111, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 235, in generate_max_length\n    raise JsonSchemaDefinitionException('maxLength must be a number')\nfastjsonschema.exceptions.JsonSchemaDefinitionException: maxLength must be a number\n"}, "message": "", "caught": true, "errored": true}
{"seq": 111, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "org.everit.json.schema.SchemaException: #/maxLength: expected type: Integer, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:235)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:228)\n    java.util.Optional.map (Optional.java:260)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 111, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 111, "implementation": "java-jsonschemafriend", "expected": [true, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/maxLength}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/maxLength}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 111, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 112, "case": {"description": "maxProperties validation", "schema": {"maxProperties": 2}, "tests": [{"description": "shorter is valid", "instance": {"foo": 1}, "valid": true}, {"description": "exact length is valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "too long is invalid", "instance": {"foo": 1, "bar": 2, "baz": 3}, "valid": false}, {"description": "ignores arrays", "instance": [1, 2, 3], "valid": true}, {"description": "ignores strings", "instance": "foobar", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 112, "implementation": "python-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "rust-boon", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "go-gojsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "lua-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "go-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "python-fastjsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "js-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "js-ajv", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "js-hyperjump", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "rust-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "js-schemasafe", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "clojure-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 112, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 113, "case": {"description": "maxProperties validation with a decimal", "schema": {"maxProperties": 2.0}, "tests": [{"description": "shorter is valid", "instance": {"foo": 1}, "valid": true}, {"description": "too long is invalid", "instance": {"foo": 1, "bar": 2, "baz": 3}, "valid": false}]}}
{"seq": 113, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "maxProperties must be of an integer"}, "message": "", "caught": true, "errored": true}
{"seq": 113, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "org.everit.json.schema.SchemaException: #/maxProperties: expected type: Integer, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:235)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:228)\n    java.util.Optional.map (Optional.java:260)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 113, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "maxProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "maxProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MaxPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MaxPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 113, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 453, in generate_max_properties\n    raise JsonSchemaDefinitionException('maxProperties must be a number')\nfastjsonschema.exceptions.JsonSchemaDefinitionException: maxProperties must be a number\n"}, "message": "", "caught": true, "errored": true}
{"seq": 113, "implementation": "rust-jsonschema", "expected": [true, false], "context": {"message": "ValidationError { instance: Number(2.0), kind: Type { kind: Single(Integer) }, instance_path: JSONPointer([Property(\"maxProperties\")]), schema_path: JSONPointer([]) }", "traceback": "   0: bowtie_rust_jsonschema::main\n   1: std::sys_common::backtrace::__rust_begin_short_backtrace\n   2: std::rt::lang_start::{{closure}}\n   3: std::rt::lang_start_internal\n   4: main\n"}, "message": "", "caught": true, "errored": true}
{"seq": 113, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "java-jsonschemafriend", "expected": [true, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/maxProperties}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/maxProperties}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 113, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 113, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "case": {"description": "maxProperties = 0 means the object is empty", "schema": {"maxProperties": 0}, "tests": [{"description": "no properties is valid", "instance": {}, "valid": true}, {"description": "one property is invalid", "instance": {"foo": 1}, "valid": false}]}}
{"seq": 114, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 114, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 114, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 115, "case": {"description": "maximum validation", "schema": {"maximum": 3.0}, "tests": [{"description": "below the maximum is valid", "instance": 2.6, "valid": true}, {"description": "boundary point is valid", "instance": 3.0, "valid": true}, {"description": "above the maximum is invalid", "instance": 3.5, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 115, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "js-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "python-fastjsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "go-gojsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "lua-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 115, "implementation": "clojure-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 115, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 116, "case": {"description": "maximum validation with unsigned integer", "schema": {"maximum": 300}, "tests": [{"description": "below the maximum is invalid", "instance": 299.97, "valid": true}, {"description": "boundary point integer is valid", "instance": 300, "valid": true}, {"description": "boundary point float is valid", "instance": 300.0, "valid": true}, {"description": "above the maximum is invalid", "instance": 300.5, "valid": false}]}}
{"seq": 116, "implementation": "python-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "go-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "js-schemasafe", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "go-gojsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "rust-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "rust-boon", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "lua-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "ruby-json_schemer", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "php-opis-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "js-hyperjump", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "js-ajv", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "clojure-json-schema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 116, "implementation": "js-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "python-fastjsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "java-openapiprocessor", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 116, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 117, "case": {"description": "minItems validation", "schema": {"minItems": 1}, "tests": [{"description": "longer is valid", "instance": [1, 2], "valid": true}, {"description": "exact length is valid", "instance": [1], "valid": true}, {"description": "too short is invalid", "instance": [], "valid": false}, {"description": "ignores non-arrays", "instance": "", "valid": true}]}}
{"seq": 117, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "clojure-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 117, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "js-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "python-fastjsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "lua-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "go-gojsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 117, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 118, "case": {"description": "minItems validation with a decimal", "schema": {"minItems": 1.0}, "tests": [{"description": "longer is valid", "instance": [1, 2], "valid": true}, {"description": "too short is invalid", "instance": [], "valid": false}]}}
{"seq": 118, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "rust-jsonschema", "expected": [true, false], "context": {"message": "ValidationError { instance: Number(1.0), kind: Type { kind: Single(Integer) }, instance_path: JSONPointer([Property(\"minItems\")]), schema_path: JSONPointer([]) }", "traceback": "   0: bowtie_rust_jsonschema::main\n   1: std::sys_common::backtrace::__rust_begin_short_backtrace\n   2: std::rt::lang_start::{{closure}}\n   3: std::rt::lang_start_internal\n   4: main\n"}, "message": "", "caught": true, "errored": true}
{"seq": 118, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 329, in generate_min_items\n    raise JsonSchemaDefinitionException('minItems must be a number')\nfastjsonschema.exceptions.JsonSchemaDefinitionException: minItems must be a number\n"}, "message": "", "caught": true, "errored": true}
{"seq": 118, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "org.everit.json.schema.SchemaException: #/minItems: expected type: Integer, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:235)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:228)\n    java.util.Optional.map (Optional.java:260)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 118, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "minItems must be of an integer"}, "message": "", "caught": true, "errored": true}
{"seq": 118, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "minItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "minItems most be a positive integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinItemsKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} most ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinItemsKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Array, Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 118, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "java-jsonschemafriend", "expected": [true, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/minItems}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/minItems}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 118, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 118, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 119, "case": {"description": "minLength validation", "schema": {"minLength": 2}, "tests": [{"description": "longer is valid", "instance": "foo", "valid": true}, {"description": "exact length is valid", "instance": "fo", "valid": true}, {"description": "too short is invalid", "instance": "f", "valid": false}, {"description": "ignores non-strings", "instance": 1, "valid": true}, {"description": "one grapheme is not long enough", "instance": "\ud83d\udca9", "valid": false}]}}
{"seq": 119, "implementation": "python-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "rust-boon", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "js-ajv", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "go-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "js-hyperjump", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "lua-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "python-fastjsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "rust-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "js-schemasafe", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "clojure-json-schema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 119, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "go-gojsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "js-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 119, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 120, "case": {"description": "minLength validation with a decimal", "schema": {"minLength": 2.0}, "tests": [{"description": "longer is valid", "instance": "foo", "valid": true}, {"description": "too short is invalid", "instance": "f", "valid": false}]}}
{"seq": 120, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "rust-jsonschema", "expected": [true, false], "context": {"message": "ValidationError { instance: Number(2.0), kind: Type { kind: Single(Integer) }, instance_path: JSONPointer([Property(\"minLength\")]), schema_path: JSONPointer([]) }", "traceback": "   0: bowtie_rust_jsonschema::main\n   1: std::sys_common::backtrace::__rust_begin_short_backtrace\n   2: std::rt::lang_start::{{closure}}\n   3: std::rt::lang_start_internal\n   4: main\n"}, "message": "", "caught": true, "errored": true}
{"seq": 120, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "minLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "minLength must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinLengthKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinLengthKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 120, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "minLength must be of an integer"}, "message": "", "caught": true, "errored": true}
{"seq": 120, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "org.everit.json.schema.SchemaException: #/minLength: expected type: Integer, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:235)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:228)\n    java.util.Optional.map (Optional.java:260)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 120, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 227, in generate_min_length\n    raise JsonSchemaDefinitionException('minLength must be a number')\nfastjsonschema.exceptions.JsonSchemaDefinitionException: minLength must be a number\n"}, "message": "", "caught": true, "errored": true}
{"seq": 120, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 120, "implementation": "java-jsonschemafriend", "expected": [true, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/minLength}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/minLength}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 120, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 121, "case": {"description": "minProperties validation", "schema": {"minProperties": 1}, "tests": [{"description": "longer is valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "exact length is valid", "instance": {"foo": 1}, "valid": true}, {"description": "too short is invalid", "instance": {}, "valid": false}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores strings", "instance": "", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 121, "implementation": "python-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "rust-boon", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "rust-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "go-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-schemasafe", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "php-opis-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-hyperjump", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "go-gojsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-ajv", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "python-fastjsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "clojure-json-schema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "lua-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "ruby-json_schemer", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "java-openapiprocessor", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "js-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 121, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 122, "case": {"description": "minProperties validation with a decimal", "schema": {"minProperties": 1.0}, "tests": [{"description": "longer is valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "too short is invalid", "instance": {}, "valid": false}]}}
{"seq": 122, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "minProperties must be of an integer"}, "message": "", "caught": true, "errored": true}
{"seq": 122, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "minProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "minProperties must be a non-negative integer", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/MinPropertiesKeywordParser.php(58): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} must ...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\MinPropertiesKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 122, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "org.everit.json.schema.SchemaException: #/minProperties: expected type: Integer, found: BigDecimal\n at org.everit.json.schema.loader.LoadingState.createSchemaException (LoadingState.java:151)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:235)\n    org.everit.json.schema.loader.JsonValue.requireInteger (JsonValue.java:228)\n    java.util.Optional.map (Optional.java:260)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 122, "implementation": "rust-jsonschema", "expected": [true, false], "context": {"message": "ValidationError { instance: Number(1.0), kind: Type { kind: Single(Integer) }, instance_path: JSONPointer([Property(\"minProperties\")]), schema_path: JSONPointer([]) }", "traceback": "   0: bowtie_rust_jsonschema::main\n   1: std::sys_common::backtrace::__rust_begin_short_backtrace\n   2: std::rt::lang_start::{{closure}}\n   3: std::rt::lang_start_internal\n   4: main\n"}, "message": "", "caught": true, "errored": true}
{"seq": 122, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "java-jsonschemafriend", "expected": [true, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/minProperties}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [integer] Found: [number], keywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/positiveInteger, instanceLocation=#/minProperties}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 122, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 444, in generate_min_properties\n    raise JsonSchemaDefinitionException('minProperties must be a number')\nfastjsonschema.exceptions.JsonSchemaDefinitionException: minProperties must be a number\n"}, "message": "", "caught": true, "errored": true}
{"seq": 122, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 122, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 123, "case": {"description": "minimum validation", "schema": {"minimum": 1.1}, "tests": [{"description": "above the minimum is valid", "instance": 2.6, "valid": true}, {"description": "boundary point is valid", "instance": 1.1, "valid": true}, {"description": "below the minimum is invalid", "instance": 0.6, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 123, "implementation": "python-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "go-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "js-ajv", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "rust-boon", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "ruby-json_schemer", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "rust-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "python-fastjsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "lua-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "go-gojsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "php-opis-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "java-openapiprocessor", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "js-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "clojure-json-schema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 123, "implementation": "js-hyperjump", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "js-schemasafe", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "java-jsonschemafriend", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 123, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 124, "case": {"description": "minimum validation with signed integer", "schema": {"minimum": -2}, "tests": [{"description": "negative above the minimum is valid", "instance": -1, "valid": true}, {"description": "positive above the minimum is valid", "instance": 0, "valid": true}, {"description": "boundary point is valid", "instance": -2, "valid": true}, {"description": "boundary point with float is valid", "instance": -2.0, "valid": true}, {"description": "float below the minimum is invalid", "instance": -2.0001, "valid": false}, {"description": "int below the minimum is invalid", "instance": -3, "valid": false}, {"description": "ignores non-numbers", "instance": "x", "valid": true}]}}
{"seq": 124, "implementation": "python-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "go-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "js-schemasafe", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "js-hyperjump", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "rust-boon", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "rust-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "clojure-json-schema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 124, "implementation": "lua-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "js-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "go-gojsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "js-ajv", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 124, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 125, "case": {"description": "by int", "schema": {"multipleOf": 2}, "tests": [{"description": "int by int", "instance": 10, "valid": true}, {"description": "int by int fail", "instance": 7, "valid": false}, {"description": "ignores non-numbers", "instance": "foo", "valid": true}]}}
{"seq": 125, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "go-gojsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "lua-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "clojure-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 125, "implementation": "cpp-jsontoolkit", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "python-fastjsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "js-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 125, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 126, "case": {"description": "by number", "schema": {"multipleOf": 1.5}, "tests": [{"description": "zero is multiple of anything", "instance": 0, "valid": true}, {"description": "4.5 is multiple of 1.5", "instance": 4.5, "valid": true}, {"description": "35 is not multiple of 1.5", "instance": 35, "valid": false}]}}
{"seq": 126, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "lua-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "python-fastjsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "clojure-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 126, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 126, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 127, "case": {"description": "by small number", "schema": {"multipleOf": 0.0001}, "tests": [{"description": "0.0075 is multiple of 0.0001", "instance": 0.0075, "valid": true}, {"description": "0.00751 is not multiple of 0.0001", "instance": 0.00751, "valid": false}]}}
{"seq": 127, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 127, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 127, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 128, "case": {"description": "float division = inf", "schema": {"type": "integer", "multipleOf": 0.123456789}, "tests": [{"description": "always invalid, but naive implementations may raise an overflow error", "instance": 1e+308, "valid": false}]}}
{"seq": 128, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": true}]}
{"seq": 128, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": true}]}
{"seq": 128, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "dotnet-jsonschema-net", "expected": [false], "message": "System.Decimal does not support large values like 1e308", "skipped": true}
{"seq": 128, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "java-jsonschemafriend", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 128, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 129, "case": {"description": "small multiple of large integer", "schema": {"type": "integer", "multipleOf": 1e-08}, "tests": [{"description": "any integer is a multiple of 1e-8", "instance": 12391239123, "valid": true}]}}
{"seq": 129, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": false}]}
{"seq": 129, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 129, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 130, "case": {"description": "not", "schema": {"not": {"type": "integer"}}, "tests": [{"description": "allowed", "instance": "foo", "valid": true}, {"description": "disallowed", "instance": 1, "valid": false}]}}
{"seq": 130, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 130, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 130, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 131, "case": {"description": "not multiple types", "schema": {"not": {"type": ["integer", "boolean"]}}, "tests": [{"description": "valid", "instance": "foo", "valid": true}, {"description": "mismatch", "instance": 1, "valid": false}, {"description": "other mismatch", "instance": true, "valid": false}]}}
{"seq": 131, "implementation": "python-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "js-ajv", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "rust-boon", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "go-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "go-gojsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "rust-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "js-schemasafe", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "cpp-jsontoolkit", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "lua-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "python-fastjsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "php-opis-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "clojure-json-schema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 131, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "js-hyperjump", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "ruby-json_schemer", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "js-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "java-jsonschemafriend", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "java-openapiprocessor", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 131, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 132, "case": {"description": "not more complex schema", "schema": {"not": {"type": "object", "properties": {"foo": {"type": "string"}}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "other match", "instance": {"foo": 1}, "valid": true}, {"description": "mismatch", "instance": {"foo": "bar"}, "valid": false}]}}
{"seq": 132, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "lua-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "clojure-json-schema", "expected": [true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 132, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "python-fastjsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 132, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 133, "case": {"description": "forbidden property", "schema": {"properties": {"foo": {"not": {}}}}, "tests": [{"description": "property present", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "property absent", "instance": {"bar": 1, "baz": 2}, "valid": true}]}}
{"seq": 133, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "cpp-jsontoolkit", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "go-gojsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "lua-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "python-fastjsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "clojure-json-schema", "expected": [false, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 133, "implementation": "js-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 133, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 134, "case": {"description": "forbid everything with empty schema", "schema": {"not": {}}, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "boolean true is invalid", "instance": true, "valid": false}, {"description": "boolean false is invalid", "instance": false, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}, {"description": "object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 134, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "lua-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "go-gojsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "python-fastjsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 134, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "js-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "clojure-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 134, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "case": {"description": "forbid everything with boolean schema true", "schema": {"not": true}, "tests": [{"description": "number is invalid", "instance": 1, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "boolean true is invalid", "instance": true, "valid": false}, {"description": "boolean false is invalid", "instance": false, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}, {"description": "object is invalid", "instance": {"foo": "bar"}, "valid": false}, {"description": "empty object is invalid", "instance": {}, "valid": false}, {"description": "array is invalid", "instance": ["foo"], "valid": false}, {"description": "empty array is invalid", "instance": [], "valid": false}]}}
{"seq": 135, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/not}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/not}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 135, "implementation": "go-gojsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "python-fastjsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "lua-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "js-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "clojure-json-schema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 135, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 136, "case": {"description": "allow everything with boolean schema false", "schema": {"not": false}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "string is valid", "instance": "foo", "valid": true}, {"description": "boolean true is valid", "instance": true, "valid": true}, {"description": "boolean false is valid", "instance": false, "valid": true}, {"description": "null is valid", "instance": null, "valid": true}, {"description": "object is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "empty object is valid", "instance": {}, "valid": true}, {"description": "array is valid", "instance": ["foo"], "valid": true}, {"description": "empty array is valid", "instance": [], "valid": true}]}}
{"seq": 136, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/not}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/not}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 136, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 136, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 137, "case": {"description": "double negation", "schema": {"not": {"not": {}}}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 137, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 137, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 138, "case": {"description": "oneOf", "schema": {"oneOf": [{"type": "integer"}, {"minimum": 2}]}, "tests": [{"description": "first oneOf valid", "instance": 1, "valid": true}, {"description": "second oneOf valid", "instance": 2.5, "valid": true}, {"description": "both oneOf valid", "instance": 3, "valid": false}, {"description": "neither oneOf valid", "instance": 1.5, "valid": false}]}}
{"seq": 138, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "lua-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "go-gojsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "python-fastjsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "clojure-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 138, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "js-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 138, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 139, "case": {"description": "oneOf with base schema", "schema": {"type": "string", "oneOf": [{"minLength": 2}, {"maxLength": 4}]}, "tests": [{"description": "mismatch base schema", "instance": 3, "valid": false}, {"description": "one oneOf valid", "instance": "foobar", "valid": true}, {"description": "both oneOf valid", "instance": "foo", "valid": false}]}}
{"seq": 139, "implementation": "python-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "go-gojsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "rust-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "php-opis-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-ajv", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "ruby-json_schemer", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "lua-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "rust-boon", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-schemasafe", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "java-openapiprocessor", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-hyperjump", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "dotnet-jsonschema-net", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "go-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "js-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "cpp-jsontoolkit", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "python-fastjsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "clojure-json-schema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 139, "implementation": "java-jsonschemafriend", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 139, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 140, "case": {"description": "oneOf with boolean schemas, all true", "schema": {"oneOf": [true, true, true]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 140, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "oneOf contains multiple true values", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/OneOfKeywordParser.php(64): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\OneOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 140, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "java-jsonschemafriend", "expected": [false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 140, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 140, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 141, "case": {"description": "oneOf with boolean schemas, one true", "schema": {"oneOf": [true, false, false]}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 141, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 141, "implementation": "java-jsonschemafriend", "expected": [true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 141, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 142, "case": {"description": "oneOf with boolean schemas, more than one true", "schema": {"oneOf": [true, true, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 142, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"context": {"message": "oneOf contains multiple true values", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/Keywords/OneOfKeywordParser.php(64): Opis\\JsonSchema\\Parsers\\KeywordParser->keywordException('{keyword} conta...', Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(577): Opis\\JsonSchema\\Parsers\\Keywords\\OneOfKeywordParser->parse(Object(Opis\\JsonSchema\\Info\\SchemaInfo), Object(Opis\\JsonSchema\\Parsers\\SchemaParser), Object(stdClass))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(504): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaKeywords(Object(Opis\\JsonSchema\\Info\\SchemaInfo), NULL, Array, Object(stdClass), false)\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(407): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchemaObject(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/LazySchema.php(55): Opis\\JsonSchema\\Parsers\\SchemaParser->parseSchema(Object(Opis\\JsonSchema\\Info\\SchemaInfo))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(252): Opis\\JsonSchema\\Schemas\\LazySchema->schema()\n#6 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(112): Opis\\JsonSchema\\SchemaLoader->checkExistingObject(Object(stdClass))\n#7 /usr/src/myapp/vendor/opis/json-schema/src/Parsers/SchemaParser.php(387): Opis\\JsonSchema\\SchemaLoader->{closure:Opis\\JsonSchema\\SchemaLoader::loadObjectSchema():109}(Object(stdClass), Object(Opis\\JsonSchema\\Uri), '06')\n#8 /usr/src/myapp/vendor/opis/json-schema/src/SchemaLoader.php(115): Opis\\JsonSchema\\Parsers\\SchemaParser->parseRootSchema(Object(stdClass), Object(Opis\\JsonSchema\\Uri), Object(Closure), Object(Closure), '06')\n#9 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(138): Opis\\JsonSchema\\SchemaLoader->loadObjectSchema(Object(stdClass), 'schema:///00000...', '06')\n#10 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation('foo', Object(stdClass), NULL, NULL, NULL, '06')\n#11 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#12 {main}"}, "errored": true, "skipped": false}]}
{"seq": 142, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 142, "implementation": "java-jsonschemafriend", "expected": [false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 142, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "case": {"description": "oneOf with boolean schemas, all false", "schema": {"oneOf": [false, false, false]}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 143, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "java-jsonschemafriend", "expected": [false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/2}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 143, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 143, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 144, "case": {"description": "oneOf complex types", "schema": {"oneOf": [{"properties": {"bar": {"type": "integer"}}, "required": ["bar"]}, {"properties": {"foo": {"type": "string"}}, "required": ["foo"]}]}, "tests": [{"description": "first oneOf valid (complex)", "instance": {"bar": 2}, "valid": true}, {"description": "second oneOf valid (complex)", "instance": {"foo": "baz"}, "valid": true}, {"description": "both oneOf valid (complex)", "instance": {"foo": "baz", "bar": 2}, "valid": false}, {"description": "neither oneOf valid (complex)", "instance": {"foo": 2, "bar": "quux"}, "valid": false}]}}
{"seq": 144, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "go-gojsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "lua-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "python-fastjsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "clojure-json-schema", "expected": [true, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "js-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 144, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 145, "case": {"description": "oneOf with empty schema", "schema": {"oneOf": [{"type": "number"}, {}]}, "tests": [{"description": "one valid - valid", "instance": "foo", "valid": true}, {"description": "both valid - invalid", "instance": 123, "valid": false}]}}
{"seq": 145, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 145, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 145, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 146, "case": {"description": "oneOf with required", "schema": {"type": "object", "oneOf": [{"required": ["foo", "bar"]}, {"required": ["foo", "baz"]}]}, "tests": [{"description": "both invalid - invalid", "instance": {"bar": 2}, "valid": false}, {"description": "first valid - valid", "instance": {"foo": 1, "bar": 2}, "valid": true}, {"description": "second valid - valid", "instance": {"foo": 1, "baz": 3}, "valid": true}, {"description": "both valid - invalid", "instance": {"foo": 1, "bar": 2, "baz": 3}, "valid": false}]}}
{"seq": 146, "implementation": "python-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "ruby-json_schemer", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "rust-boon", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "js-ajv", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "go-gojsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "rust-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "go-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "php-opis-json-schema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "clojure-json-schema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 146, "implementation": "dotnet-jsonschema-net", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "java-networknt-json-schema-validator", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "lua-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "cpp-jsontoolkit", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "js-hyperjump", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "ts-vscode-json-languageservice", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "java-openapiprocessor", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "js-schemasafe", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "java-jsonschemafriend", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "python-fastjsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "js-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 146, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 147, "case": {"description": "oneOf with missing optional property", "schema": {"oneOf": [{"properties": {"bar": true, "baz": true}, "required": ["bar"]}, {"properties": {"foo": true}, "required": ["foo"]}]}, "tests": [{"description": "first oneOf valid", "instance": {"bar": 8}, "valid": true}, {"description": "second oneOf valid", "instance": {"foo": "foo"}, "valid": true}, {"description": "both oneOf valid", "instance": {"foo": "foo", "bar": 8}, "valid": false}, {"description": "neither oneOf valid", "instance": {"baz": "quux"}, "valid": false}]}}
{"seq": 147, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "go-gojsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "python-fastjsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "lua-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "clojure-json-schema", "expected": [true, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "js-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 147, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0/properties/bar}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0/properties/baz}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1/properties/foo}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0/properties/bar}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/0/properties/baz}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/oneOf/1/properties/foo}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 147, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 148, "case": {"description": "nested oneOf, to check validation semantics", "schema": {"oneOf": [{"oneOf": [{"type": "null"}]}]}, "tests": [{"description": "null is valid", "instance": null, "valid": true}, {"description": "anything non-null is invalid", "instance": 123, "valid": false}]}}
{"seq": 148, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 148, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 148, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 149, "case": {"description": "pattern validation", "schema": {"pattern": "^a*$"}, "tests": [{"description": "a matching pattern is valid", "instance": "aaa", "valid": true}, {"description": "a non-matching pattern is invalid", "instance": "abc", "valid": false}, {"description": "ignores booleans", "instance": true, "valid": true}, {"description": "ignores integers", "instance": 123, "valid": true}, {"description": "ignores floats", "instance": 1.0, "valid": true}, {"description": "ignores objects", "instance": {}, "valid": true}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores null", "instance": null, "valid": true}]}}
{"seq": 149, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "lua-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "rust-boon", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "js-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "js-ajv", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "clojure-json-schema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "go-gojsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "python-fastjsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 149, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 150, "case": {"description": "pattern is not anchored", "schema": {"pattern": "a+"}, "tests": [{"description": "matches a substring", "instance": "xxaayy", "valid": true}]}}
{"seq": 150, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 150, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 151, "case": {"description": "patternProperties validates properties matching a regex", "schema": {"patternProperties": {"f.*o": {"type": "integer"}}}, "tests": [{"description": "a single valid match is valid", "instance": {"foo": 1}, "valid": true}, {"description": "multiple valid matches is valid", "instance": {"foo": 1, "foooooo": 2}, "valid": true}, {"description": "a single invalid match is invalid", "instance": {"foo": "bar", "fooooo": 2}, "valid": false}, {"description": "multiple invalid matches is invalid", "instance": {"foo": "bar", "foooooo": "baz"}, "valid": false}, {"description": "ignores arrays", "instance": ["foo"], "valid": true}, {"description": "ignores strings", "instance": "foo", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 151, "implementation": "python-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "go-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "js-ajv", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "js-schemasafe", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "rust-boon", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "clojure-json-schema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "go-gojsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "rust-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "js-hyperjump", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "lua-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "js-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 151, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 152, "case": {"description": "multiple simultaneous patternProperties are validated", "schema": {"patternProperties": {"a*": {"type": "integer"}, "aaa*": {"maximum": 20}}}, "tests": [{"description": "a single valid match is valid", "instance": {"a": 21}, "valid": true}, {"description": "a simultaneous match is valid", "instance": {"aaaa": 18}, "valid": true}, {"description": "multiple matches is valid", "instance": {"a": 21, "aaaa": 18}, "valid": true}, {"description": "an invalid due to one is invalid", "instance": {"a": "bar"}, "valid": false}, {"description": "an invalid due to the other is invalid", "instance": {"aaaa": 31}, "valid": false}, {"description": "an invalid due to both is invalid", "instance": {"aaa": "foo", "aaaa": 31}, "valid": false}]}}
{"seq": 152, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "rust-boon", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "lua-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "go-gojsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 152, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "js-ajv", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "js-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "clojure-json-schema", "expected": [true, true, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 152, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 153, "case": {"description": "regexes are not anchored by default and are case sensitive", "schema": {"patternProperties": {"[0-9]{2,}": {"type": "boolean"}, "X_": {"type": "string"}}}, "tests": [{"description": "non recognized members are ignored", "instance": {"answer 1": "42"}, "valid": true}, {"description": "recognized members are accounted for", "instance": {"a31b": null}, "valid": false}, {"description": "regexes are case sensitive", "instance": {"a_x_3": 3}, "valid": true}, {"description": "regexes are case sensitive, 2", "instance": {"a_X_3": 3}, "valid": false}]}}
{"seq": 153, "implementation": "python-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "go-gojsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "php-opis-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-schemasafe", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "go-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-hyperjump", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "lua-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "rust-boon", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "python-fastjsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "rust-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "ruby-json_schemer", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-ajv", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "java-jsonschemafriend", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "java-openapiprocessor", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "js-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "clojure-json-schema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 153, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 153, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}]}
{"seq": 154, "case": {"description": "patternProperties with boolean schemas", "schema": {"patternProperties": {"f.*": true, "b.*": false}}, "tests": [{"description": "object with property matching schema true is valid", "instance": {"foo": 1}, "valid": true}, {"description": "object with property matching schema false is invalid", "instance": {"bar": 2}, "valid": false}, {"description": "object with both properties is invalid", "instance": {"foo": 1, "bar": 2}, "valid": false}, {"description": "object with a property matching both true and false is invalid", "instance": {"foobar": 1}, "valid": false}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 154, "implementation": "python-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-schemasafe", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "python-fastjsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "go-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-ajv", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "lua-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/patternProperties/f.*}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/patternProperties/b.*}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/patternProperties/f.*}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/patternProperties/b.*}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 154, "implementation": "rust-boon", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "clojure-json-schema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 154, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "js-hyperjump", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 154, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "go-gojsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "rust-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 154, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 155, "case": {"description": "patternProperties with null valued instance properties", "schema": {"patternProperties": {"^.*bar$": {"type": "null"}}}, "tests": [{"description": "allows null values", "instance": {"foobar": null}, "valid": true}]}}
{"seq": 155, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 155, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 156, "case": {"description": "object properties validation", "schema": {"properties": {"foo": {"type": "integer"}, "bar": {"type": "string"}}}, "tests": [{"description": "both properties present and valid is valid", "instance": {"foo": 1, "bar": "baz"}, "valid": true}, {"description": "one property invalid is invalid", "instance": {"foo": 1, "bar": {}}, "valid": false}, {"description": "both properties invalid is invalid", "instance": {"foo": [], "bar": {}}, "valid": false}, {"description": "doesn't invalidate other properties", "instance": {"quux": []}, "valid": true}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 156, "implementation": "python-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "lua-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "go-gojsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "rust-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-schemasafe", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "rust-boon", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "python-fastjsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "go-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-ajv", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "clojure-json-schema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-hyperjump", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "js-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 156, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 157, "case": {"description": "properties, patternProperties, additionalProperties interaction", "schema": {"properties": {"foo": {"type": "array", "maxItems": 3}, "bar": {"type": "array"}}, "patternProperties": {"f.o": {"minItems": 2}}, "additionalProperties": {"type": "integer"}}, "tests": [{"description": "property validates property", "instance": {"foo": [1, 2]}, "valid": true}, {"description": "property invalidates property", "instance": {"foo": [1, 2, 3, 4]}, "valid": false}, {"description": "patternProperty invalidates property", "instance": {"foo": []}, "valid": false}, {"description": "patternProperty validates nonproperty", "instance": {"fxo": [1, 2]}, "valid": true}, {"description": "patternProperty invalidates nonproperty", "instance": {"fxo": []}, "valid": false}, {"description": "additionalProperty ignores property", "instance": {"bar": []}, "valid": true}, {"description": "additionalProperty validates others", "instance": {"quux": 3}, "valid": true}, {"description": "additionalProperty invalidates others", "instance": {"quux": "foo"}, "valid": false}]}}
{"seq": 157, "implementation": "python-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "lua-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "rust-boon", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "rust-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "java-jsonschemafriend", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "java-openapiprocessor", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-hyperjump", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "go-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "ruby-json_schemer", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "go-gojsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "php-opis-json-schema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "python-fastjsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-schemasafe", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 157, "implementation": "js-ajv", "expected": [true, false, false, true, false, true, true, false], "context": {"traceback": "Error: strict mode: property foo matches pattern f.o (use allowMatchingProperties)\n    at checkStrictMode (/usr/app/node_modules/ajv/dist/compile/util.js:174:15)\n    at checkMatchingProperties (/usr/app/node_modules/ajv/dist/vocabularies/applicator/patternProperties.js:45:48)\n    at validatePatternProperties (/usr/app/node_modules/ajv/dist/vocabularies/applicator/patternProperties.js:31:21)\n    at Object.code (/usr/app/node_modules/ajv/dist/vocabularies/applicator/patternProperties.js:27:9)\n    at keywordCode (/usr/app/node_modules/ajv/dist/compile/validate/index.js:464:13)\n    at /usr/app/node_modules/ajv/dist/compile/validate/index.js:222:17\n    at CodeGen.code (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:439:13)\n    at CodeGen.block (/usr/app/node_modules/ajv/dist/compile/codegen/index.js:568:18)\n    at iterateKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:219:9)\n    at groupKeywords (/usr/app/node_modules/ajv/dist/compile/validate/index.js:200:13)", "message": "strict mode: property foo matches pattern f.o (use allowMatchingProperties)"}, "message": "", "caught": true, "errored": true}
{"seq": 157, "implementation": "clojure-json-schema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 157, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, true, false, true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 158, "case": {"description": "properties with boolean schema", "schema": {"properties": {"foo": true, "bar": false}}, "tests": [{"description": "no property present is valid", "instance": {}, "valid": true}, {"description": "only 'true' property present is valid", "instance": {"foo": 1}, "valid": true}, {"description": "only 'false' property present is invalid", "instance": {"bar": 2}, "valid": false}, {"description": "both properties present is invalid", "instance": {"foo": 1, "bar": 2}, "valid": false}]}}
{"seq": 158, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "go-gojsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "lua-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "js-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "python-fastjsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "clojure-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 158, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 158, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/properties/bar}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/properties/foo}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/properties/bar}, {valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/properties/foo}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 158, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 159, "case": {"description": "properties with escaped characters", "schema": {"properties": {"foo\nbar": {"type": "number"}, "foo\"bar": {"type": "number"}, "foo\\bar": {"type": "number"}, "foo\rbar": {"type": "number"}, "foo\tbar": {"type": "number"}, "foo\fbar": {"type": "number"}}}, "tests": [{"description": "object with all numbers is valid", "instance": {"foo\nbar": 1, "foo\"bar": 1, "foo\\bar": 1, "foo\rbar": 1, "foo\tbar": 1, "foo\fbar": 1}, "valid": true}, {"description": "object with strings is invalid", "instance": {"foo\nbar": "1", "foo\"bar": "1", "foo\\bar": "1", "foo\rbar": "1", "foo\tbar": "1", "foo\fbar": "1"}, "valid": false}]}}
{"seq": 159, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 159, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 159, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 160, "case": {"description": "properties with null valued instance properties", "schema": {"properties": {"foo": {"type": "null"}}}, "tests": [{"description": "allows null values", "instance": {"foo": null}, "valid": true}]}}
{"seq": 160, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 160, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 161, "case": {"description": "properties whose names are Javascript object property names", "schema": {"properties": {"__proto__": {"type": "number"}, "toString": {"properties": {"length": {"type": "string"}}}, "constructor": {"type": "number"}}}, "tests": [{"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}, {"description": "none of the properties mentioned", "instance": {}, "valid": true}, {"description": "__proto__ not valid", "instance": {"__proto__": "foo"}, "valid": false}, {"description": "toString not valid", "instance": {"toString": {"length": 37}}, "valid": false}, {"description": "constructor not valid", "instance": {"constructor": {"length": 37}}, "valid": false}, {"description": "all present and valid", "instance": {"__proto__": 12, "toString": {"length": "foo"}, "constructor": 37}, "valid": true}], "comment": "Ensure JS implementations don't universally consider e.g. __proto__ to always be present in an object."}}
{"seq": 161, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "js-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "js-ajv", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "go-gojsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "lua-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "rust-boon", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "clojure-json-schema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 161, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 161, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 162, "case": {"description": "propertyNames validation", "schema": {"propertyNames": {"maxLength": 3}}, "tests": [{"description": "all property names valid", "instance": {"f": {}, "foo": {}}, "valid": true}, {"description": "some property names invalid", "instance": {"foo": {}, "foobar": {}}, "valid": false}, {"description": "object without properties is valid", "instance": {}, "valid": true}, {"description": "ignores arrays", "instance": [1, 2, 3, 4], "valid": true}, {"description": "ignores strings", "instance": "foobar", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 162, "implementation": "python-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "lua-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "go-gojsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "go-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "rust-boon", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "js-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "js-schemasafe", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "clojure-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "js-hyperjump", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "js-ajv", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "python-fastjsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 162, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 163, "case": {"description": "propertyNames validation with pattern", "schema": {"propertyNames": {"pattern": "^a+$"}}, "tests": [{"description": "matching property names valid", "instance": {"a": {}, "aa": {}, "aaa": {}}, "valid": true}, {"description": "non-matching property name is invalid", "instance": {"aaA": {}}, "valid": false}, {"description": "object without properties is valid", "instance": {}, "valid": true}]}}
{"seq": 163, "implementation": "python-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "ruby-json_schemer", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "rust-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "lua-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "rust-boon", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "go-gojsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "go-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "python-fastjsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "php-opis-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "java-jsonschemafriend", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "clojure-json-schema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 163, "implementation": "cpp-jsontoolkit", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "js-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "js-schemasafe", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "js-hyperjump", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "js-ajv", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "java-openapiprocessor", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 163, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}]}
{"seq": 164, "case": {"description": "propertyNames with boolean schema true", "schema": {"propertyNames": true}, "tests": [{"description": "object with any properties is valid", "instance": {"foo": 1}, "valid": true}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 164, "implementation": "python-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "go-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "ruby-json_schemer", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "dotnet-jsonschema-net", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "ts-vscode-json-languageservice", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "rust-boon", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-hyperjump", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "lua-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "rust-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "python-fastjsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "java-openapiprocessor", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "clojure-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "go-gojsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "php-opis-json-schema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "cpp-jsontoolkit", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-ajv", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "java-networknt-json-schema-validator", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "java-jsonschemafriend", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "js-schemasafe", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 164, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 165, "case": {"description": "propertyNames with boolean schema false", "schema": {"propertyNames": false}, "tests": [{"description": "object with any properties is invalid", "instance": {"foo": 1}, "valid": false}, {"description": "empty object is valid", "instance": {}, "valid": true}]}}
{"seq": 165, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "lua-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "clojure-json-schema", "expected": [false, true], "results": [{"valid": true}, {"valid": true}]}
{"seq": 165, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "python-fastjsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "cpp-jsontoolkit", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "go-gojsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "js-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 165, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 166, "case": {"description": "root pointer ref", "schema": {"properties": {"foo": {"$ref": "#"}}, "additionalProperties": false}, "tests": [{"description": "match", "instance": {"foo": false}, "valid": true}, {"description": "recursive match", "instance": {"foo": {"foo": false}}, "valid": true}, {"description": "mismatch", "instance": {"bar": false}, "valid": false}, {"description": "recursive mismatch", "instance": {"foo": {"bar": false}}, "valid": false}]}}
{"seq": 166, "implementation": "python-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "rust-boon", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "go-gojsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "go-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "python-fastjsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "rust-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "js-hyperjump", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "clojure-json-schema", "expected": [true, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "ruby-json_schemer", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "js-schemasafe", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "js-ajv", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "php-opis-json-schema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "lua-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "java-openapiprocessor", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "js-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 166, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 167, "case": {"description": "relative pointer ref to object", "schema": {"properties": {"foo": {"type": "integer"}, "bar": {"$ref": "#/properties/foo"}}}, "tests": [{"description": "match", "instance": {"bar": 3}, "valid": true}, {"description": "mismatch", "instance": {"bar": true}, "valid": false}]}}
{"seq": 167, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 167, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 167, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "case": {"description": "relative pointer ref to array", "schema": {"items": [{"type": "integer"}, {"$ref": "#/items/0"}]}, "tests": [{"description": "match array", "instance": [1, 2], "valid": true}, {"description": "mismatch array", "instance": [1, "foo"], "valid": false}]}}
{"seq": 168, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 168, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 168, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 169, "case": {"description": "escaped pointer ref", "schema": {"definitions": {"tilde~field": {"type": "integer"}, "slash/field": {"type": "integer"}, "percent%field": {"type": "integer"}}, "properties": {"tilde": {"$ref": "#/definitions/tilde~0field"}, "slash": {"$ref": "#/definitions/slash~1field"}, "percent": {"$ref": "#/definitions/percent%25field"}}}, "tests": [{"description": "slash invalid", "instance": {"slash": "aoeu"}, "valid": false}, {"description": "tilde invalid", "instance": {"tilde": "aoeu"}, "valid": false}, {"description": "percent invalid", "instance": {"percent": "aoeu"}, "valid": false}, {"description": "slash valid", "instance": {"slash": 123}, "valid": true}, {"description": "tilde valid", "instance": {"tilde": 123}, "valid": true}, {"description": "percent valid", "instance": {"percent": 123}, "valid": true}]}}
{"seq": 169, "implementation": "python-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "rust-boon", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "rust-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "go-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "go-gojsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "php-opis-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "lua-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "python-fastjsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-hyperjump", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "java-jsonschemafriend", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "clojure-json-schema", "expected": [false, false, false, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-schemasafe", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "ruby-json_schemer", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "java-openapiprocessor", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "js-ajv", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 169, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 170, "case": {"description": "nested refs", "schema": {"definitions": {"a": {"type": "integer"}, "b": {"$ref": "#/definitions/a"}, "c": {"$ref": "#/definitions/b"}}, "allOf": [{"$ref": "#/definitions/c"}]}, "tests": [{"description": "nested ref valid", "instance": 5, "valid": true}, {"description": "nested ref invalid", "instance": "a", "valid": false}]}}
{"seq": 170, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 170, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 170, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 171, "case": {"description": "ref overrides any sibling keywords", "schema": {"definitions": {"reffed": {"type": "array"}}, "properties": {"foo": {"$ref": "#/definitions/reffed", "maxItems": 2}}}, "tests": [{"description": "ref valid", "instance": {"foo": []}, "valid": true}, {"description": "ref valid, maxItems ignored", "instance": {"foo": [1, 2, 3]}, "valid": true}, {"description": "ref invalid", "instance": {"foo": "string"}, "valid": false}]}}
{"seq": 171, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "clojure-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 171, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 171, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 171, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "python-fastjsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "lua-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 171, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 171, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 172, "case": {"description": "$ref prevents a sibling $id from changing the base uri", "schema": {"$id": "http://localhost:1234/sibling_id/base/", "definitions": {"foo": {"$id": "http://localhost:1234/sibling_id/foo.json", "type": "string"}, "base_foo": {"$comment": "this canonical uri is http://localhost:1234/sibling_id/base/foo.json", "$id": "foo.json", "type": "number"}}, "allOf": [{"$comment": "$ref resolves to http://localhost:1234/sibling_id/base/foo.json, not http://localhost:1234/sibling_id/foo.json", "$id": "http://localhost:1234/sibling_id/", "$ref": "foo.json"}]}, "tests": [{"description": "$ref resolves to /definitions/base_foo, data does not validate", "instance": "a", "valid": false}, {"description": "$ref resolves to /definitions/base_foo, data validates", "instance": 1, "valid": true}]}}
{"seq": 172, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "js-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "python-fastjsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "clojure-json-schema", "expected": [false, true], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: foo.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: foo.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 172, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "go-gojsonschema", "expected": [false, true], "results": [{"valid": true}, {"valid": false}]}
{"seq": 172, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"message": "Ignoring schema meta-data keywords in places that are not schemas (such as a $id in a const) is not supported. Because this implementation is dialect agnostic, there's no way to know whether a location is a schema or not. Especially because there's no reason for a schema to use keywords in places that aren't schemas, I'm not concerned about making it work.", "skipped": true}, {"message": "Ignoring schema meta-data keywords in places that are not schemas (such as a $id in a const) is not supported. Because this implementation is dialect agnostic, there's no way to know whether a location is a schema or not. Especially because there's no reason for a schema to use keywords in places that aren't schemas, I'm not concerned about making it work.", "skipped": true}]}
{"seq": 172, "implementation": "lua-jsonschema", "expected": [false, true], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/sibling_id/base/\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 172, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "cpp-jsontoolkit", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 172, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 173, "case": {"description": "remote ref, containing refs itself", "schema": {"$ref": "http://json-schema.org/draft-06/schema#"}, "tests": [{"description": "remote ref valid", "instance": {"minLength": 1}, "valid": true}, {"description": "remote ref invalid", "instance": {"minLength": -1}, "valid": false}]}}
{"seq": 173, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 173, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"context": {"message": "Unresolved reference: http://json-schema.org/draft-06/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(113): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(158): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(141): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '06')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}, {"context": {"message": "Unresolved reference: http://json-schema.org/draft-06/schema#", "traceback": "#0 /usr/src/myapp/vendor/opis/json-schema/src/Keywords/AbstractRefKeyword.php(58): Opis\\JsonSchema\\Keywords\\URIRefKeyword->doValidate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#1 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(113): Opis\\JsonSchema\\Keywords\\AbstractRefKeyword->validate(Object(Opis\\JsonSchema\\ValidationContext), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema))\n#2 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(98): Opis\\JsonSchema\\Schemas\\ObjectSchema->applyKeywords(Array, Object(Opis\\JsonSchema\\ValidationContext))\n#3 /usr/src/myapp/vendor/opis/json-schema/src/Schemas/ObjectSchema.php(67): Opis\\JsonSchema\\Schemas\\ObjectSchema->doValidate(Object(Opis\\JsonSchema\\ValidationContext))\n#4 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(158): Opis\\JsonSchema\\Schemas\\ObjectSchema->validate(Object(Opis\\JsonSchema\\ValidationContext))\n#5 /usr/src/myapp/vendor/opis/json-schema/src/Validator.php(141): Opis\\JsonSchema\\Validator->schemaValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL)\n#6 /usr/src/myapp/bowtieJsonSchema.php(84): Opis\\JsonSchema\\Validator->dataValidation(Object(stdClass), Object(Opis\\JsonSchema\\Schemas\\ObjectSchema), NULL, NULL, NULL, '06')\n#7 /usr/src/myapp/bowtieJsonSchema.php(121): run(Object(stdClass))\n#8 {main}"}, "errored": true, "skipped": false}]}
{"seq": 173, "implementation": "js-schemasafe", "expected": [true, false], "context": {"traceback": "Error: failed to resolve $ref: \"http://json-schema.org/draft-06/schema#\" at #\n    at fail (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:234:13)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1194:11\n    at handle (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:297:29)\n    at writeMain (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1190:7)\n    at Object.if (/usr/app/node_modules/@exodus/schemasafe/src/generate-function.js:80:24)\n    at visit (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1297:13)\n    at compileSchema (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1342:27)\n    at /usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:50\n    at Array.map (<anonymous>)\n    at compile (/usr/app/node_modules/@exodus/schemasafe/src/compile.js:1372:26)", "message": "failed to resolve $ref: \"http://json-schema.org/draft-06/schema#\" at #"}, "message": "", "caught": true, "errored": true}
{"seq": 173, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "bowtie_jsonschema.lua:14: attempt to index upvalue 'registry' (a nil value)\nstack traceback:\n\tbowtie_jsonschema.lua:14: in function 'resolver'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:150: in function 'fetch'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:82: in function 'resolve'\n\t/usr/local/share/lua/5.1/jsonschema.lua:167: in function 'validator'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1184: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 173, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 173, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.UnknownHostException: json-schema.org\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.UnknownHostException: json-schema.org\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.UnknownHostException: json-schema.org\n at sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:567)\n    java.net.Socket.connect (Socket.java:752)\n    java.net.Socket.connect (Socket.java:687)\n    sun.net.NetworkClient.doConnect (NetworkClient.java:183)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 173, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 173, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 829, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 964, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsocket.gaierror: [Errno -3] Try again\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno -3] Try again>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 174, "case": {"description": "property named $ref that is not a reference", "schema": {"properties": {"$ref": {"type": "string"}}}, "tests": [{"description": "property named $ref valid", "instance": {"$ref": "a"}, "valid": true}, {"description": "property named $ref invalid", "instance": {"$ref": 2}, "valid": false}]}}
{"seq": 174, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 174, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 174, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "case": {"description": "property named $ref, containing an actual $ref", "schema": {"properties": {"$ref": {"$ref": "#/definitions/is-string"}}, "definitions": {"is-string": {"type": "string"}}}, "tests": [{"description": "property named $ref valid", "instance": {"$ref": "a"}, "valid": true}, {"description": "property named $ref invalid", "instance": {"$ref": 2}, "valid": false}]}}
{"seq": 175, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 175, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 175, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 176, "case": {"description": "$ref to boolean schema true", "schema": {"allOf": [{"$ref": "#/definitions/bool"}], "definitions": {"bool": true}}, "tests": [{"description": "any value is valid", "instance": "foo", "valid": true}]}}
{"seq": 176, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 176, "implementation": "java-jsonschemafriend", "expected": [true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/definitions/bool}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/definitions/bool}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 176, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 177, "case": {"description": "$ref to boolean schema false", "schema": {"allOf": [{"$ref": "#/definitions/bool"}], "definitions": {"bool": false}}, "tests": [{"description": "any value is invalid", "instance": "foo", "valid": false}]}}
{"seq": 177, "implementation": "python-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "java-networknt-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "js-schemasafe", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "php-opis-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "ruby-json_schemer", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "go-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "rust-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "js-hyperjump", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "rust-boon", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "ts-vscode-json-languageservice", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "dotnet-jsonschema-net", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "js-ajv", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "lua-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "go-gojsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "python-fastjsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "clojure-json-schema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "cpp-jsontoolkit", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "java-openapiprocessor", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "java-jsonschemafriend", "expected": [false], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/definitions/bool}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Expected: [object] Found: [boolean], keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=#/definitions/bool}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 177, "implementation": "js-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 177, "implementation": "dotnet-corvus-jsonschema", "expected": [false], "results": [{"valid": false}]}
{"seq": 178, "case": {"description": "Recursive references between schemas", "schema": {"$id": "http://localhost:1234/tree", "description": "tree of nodes", "type": "object", "properties": {"meta": {"type": "string"}, "nodes": {"type": "array", "items": {"$ref": "node"}}}, "required": ["meta", "nodes"], "definitions": {"node": {"$id": "http://localhost:1234/node", "description": "node", "type": "object", "properties": {"value": {"type": "number"}, "subtree": {"$ref": "tree"}}, "required": ["value"]}}}, "tests": [{"description": "valid tree", "instance": {"meta": "root", "nodes": [{"value": 1, "subtree": {"meta": "child", "nodes": [{"value": 1.1}, {"value": 1.2}]}}, {"value": 2, "subtree": {"meta": "child", "nodes": [{"value": 2.1}, {"value": 2.2}]}}]}, "valid": true}, {"description": "invalid tree", "instance": {"meta": "root", "nodes": [{"value": 1, "subtree": {"meta": "child", "nodes": [{"value": "string is invalid"}, {"value": 1.2}]}}, {"value": 2, "subtree": {"meta": "child", "nodes": [{"value": 2.1}, {"value": 2.2}]}}]}, "valid": false}]}}
{"seq": 178, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: node\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: node\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 178, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/tree\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 178, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 178, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 178, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "case": {"description": "refs with quote", "schema": {"properties": {"foo\"bar": {"$ref": "#/definitions/foo%22bar"}}, "definitions": {"foo\"bar": {"type": "number"}}}, "tests": [{"description": "object with numbers is valid", "instance": {"foo\"bar": 1}, "valid": true}, {"description": "object with strings is invalid", "instance": {"foo\"bar": "1"}, "valid": false}]}}
{"seq": 179, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 179, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 179, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "case": {"description": "Location-independent identifier", "schema": {"allOf": [{"$ref": "#foo"}], "definitions": {"A": {"$id": "#foo", "type": "integer"}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "mismatch", "instance": "a", "valid": false}]}}
{"seq": 180, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 142, in resolving\n    yield resolve_path(schema, fragment)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 40, in resolve_path\n    raise JsonSchemaDefinitionException('Unresolvable ref: {}'.format(part))\nfastjsonschema.exceptions.JsonSchemaDefinitionException: Unresolvable ref: foo\n"}, "message": "", "caught": true, "errored": true}
{"seq": 180, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.lang.StackOverflowError: null\n at org.everit.json.schema.ValidationFailureReporter.inContextOfSchema (ValidationFailureReporter.java:31)\n    org.everit.json.schema.CollectingFailureReporter.inContextOfSchema (CollectingFailureReporter.java:25)\n    org.everit.json.schema.ValidatingVisitor.getFailureOfSchema (ValidatingVisitor.java:199)\n    org.everit.json.schema.ValidatingVisitor.visitCombinedSchema (ValidatingVisitor.java:164)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 180, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 180, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "case": {"description": "Reference an anchor with a non-relative URI", "schema": {"$id": "https://example.com/schema-with-anchor", "allOf": [{"$ref": "https://example.com/schema-with-anchor#foo"}], "definitions": {"A": {"$id": "#foo", "type": "integer"}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "mismatch", "instance": "a", "valid": false}]}}
{"seq": 181, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: https://example.com/schema-with-anchor\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 181, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 142, in resolving\n    yield resolve_path(schema, fragment)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 40, in resolve_path\n    raise JsonSchemaDefinitionException('Unresolvable ref: {}'.format(part))\nfastjsonschema.exceptions.JsonSchemaDefinitionException: Unresolvable ref: foo\n"}, "message": "", "caught": true, "errored": true}
{"seq": 181, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 181, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 181, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.UnknownHostException: example.com\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.UnknownHostException: example.com\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.UnknownHostException: example.com\n at sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:567)\n    java.net.SocksSocketImpl.connect (SocksSocketImpl.java:327)\n    java.net.Socket.connect (Socket.java:752)\n    sun.security.ssl.SSLSocketImpl.connect (SSLSocketImpl.java:304)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 182, "case": {"description": "Location-independent identifier with base URI change in subschema", "schema": {"$id": "http://localhost:1234/root", "allOf": [{"$ref": "http://localhost:1234/nested.json#foo"}], "definitions": {"A": {"$id": "nested.json", "definitions": {"B": {"$id": "#foo", "type": "integer"}}}}}, "tests": [{"description": "match", "instance": 1, "valid": true}, {"description": "mismatch", "instance": "a", "valid": false}]}}
{"seq": 182, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 142, in resolving\n    yield resolve_path(schema, fragment)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 40, in resolve_path\n    raise JsonSchemaDefinitionException('Unresolvable ref: {}'.format(part))\nfastjsonschema.exceptions.JsonSchemaDefinitionException: Unresolvable ref: foo\n"}, "message": "", "caught": true, "errored": true}
{"seq": 182, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.ConnectException: Connection refused\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.ConnectException: Connection refused\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.ConnectException: Connection refused\n at sun.nio.ch.Net.connect0 (Net.java:-2)\n    sun.nio.ch.Net.connect (Net.java:589)\n    sun.nio.ch.Net.connect (Net.java:578)\n    sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:583)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 182, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/root\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 182, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 182, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 182, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 183, "case": {"description": "naive replacement of $ref with its destination is not correct", "schema": {"definitions": {"a_string": {"type": "string"}}, "enum": [{"$ref": "#/definitions/a_string"}]}, "tests": [{"description": "do not evaluate the $ref inside the enum, matching any string", "instance": "this is a string", "valid": false}, {"description": "do not evaluate the $ref inside the enum, definition exact match", "instance": {"type": "string"}, "valid": false}, {"description": "match the enum exactly", "instance": {"$ref": "#/definitions/a_string"}, "valid": true}]}}
{"seq": 183, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "js-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "lua-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "go-gojsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"message": "Ignoring schema meta-data keywords in places that are not schemas (such as a $id in a const) is not supported. Because this implementation is dialect agnostic, there's no way to know whether a location is a schema or not. Especially because there's no reason for a schema to use keywords in places that aren't schemas, I'm not concerned about making it work.", "skipped": true}, {"message": "Ignoring schema meta-data keywords in places that are not schemas (such as a $id in a const) is not supported. Because this implementation is dialect agnostic, there's no way to know whether a location is a schema or not. Especially because there's no reason for a schema to use keywords in places that aren't schemas, I'm not concerned about making it work.", "skipped": true}, {"message": "Ignoring schema meta-data keywords in places that are not schemas (such as a $id in a const) is not supported. Because this implementation is dialect agnostic, there's no way to know whether a location is a schema or not. Especially because there's no reason for a schema to use keywords in places that aren't schemas, I'm not concerned about making it work.", "skipped": true}]}
{"seq": 183, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "clojure-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 183, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "cpp-jsontoolkit", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "python-fastjsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 183, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "case": {"description": "refs with relative uris and defs", "schema": {"$id": "http://example.com/schema-relative-uri-defs1.json", "properties": {"foo": {"$id": "schema-relative-uri-defs2.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}}, "allOf": [{"$ref": "schema-relative-uri-defs2.json"}]}, "tests": [{"description": "invalid on inner field", "instance": {"foo": {"bar": 1}, "bar": "a"}, "valid": false}, {"description": "invalid on outer field", "instance": {"foo": {"bar": "a"}, "bar": 1}, "valid": false}, {"description": "valid on both fields", "instance": {"foo": {"bar": "a"}, "bar": "a"}, "valid": true}]}}
{"seq": 184, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "python-fastjsonschema", "expected": [false, false, true], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 142, in resolving\n    yield resolve_path(schema, fragment)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 40, in resolve_path\n    raise JsonSchemaDefinitionException('Unresolvable ref: {}'.format(part))\nfastjsonschema.exceptions.JsonSchemaDefinitionException: Unresolvable ref: definitions\n"}, "message": "", "caught": true, "errored": true}
{"seq": 184, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "go-gojsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "lua-jsonschema", "expected": [false, false, true], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://example.com/schema-relative-uri-defs1.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 184, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 184, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "clojure-json-schema", "expected": [false, false, true], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: schema-relative-uri-defs2.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: schema-relative-uri-defs2.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 184, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "js-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "cpp-jsontoolkit", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 184, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "case": {"description": "relative refs with absolute uris and defs", "schema": {"$id": "http://example.com/schema-refs-absolute-uris-defs1.json", "properties": {"foo": {"$id": "http://example.com/schema-refs-absolute-uris-defs2.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}}, "allOf": [{"$ref": "schema-refs-absolute-uris-defs2.json"}]}, "tests": [{"description": "invalid on inner field", "instance": {"foo": {"bar": 1}, "bar": "a"}, "valid": false}, {"description": "invalid on outer field", "instance": {"foo": {"bar": "a"}, "bar": 1}, "valid": false}, {"description": "valid on both fields", "instance": {"foo": {"bar": "a"}, "bar": "a"}, "valid": true}]}}
{"seq": 185, "implementation": "python-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "go-gojsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "go-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "python-fastjsonschema", "expected": [false, false, true], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 142, in resolving\n    yield resolve_path(schema, fragment)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 40, in resolve_path\n    raise JsonSchemaDefinitionException('Unresolvable ref: {}'.format(part))\nfastjsonschema.exceptions.JsonSchemaDefinitionException: Unresolvable ref: definitions\n"}, "message": "", "caught": true, "errored": true}
{"seq": 185, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "java-openapiprocessor", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "js-schemasafe", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "ruby-json_schemer", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 185, "implementation": "php-opis-json-schema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "rust-boon", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "js-ajv", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "js-hyperjump", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "lua-jsonschema", "expected": [false, false, true], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://example.com/schema-refs-absolute-uris-defs1.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 185, "implementation": "clojure-json-schema", "expected": [false, false, true], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: schema-refs-absolute-uris-defs2.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: schema-refs-absolute-uris-defs2.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 185, "implementation": "rust-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "js-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "java-jsonschemafriend", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "cpp-jsontoolkit", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 185, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 186, "case": {"description": "simple URN base URI with $ref via the URN", "schema": {"$comment": "URIs do not have to have HTTP(s) schemes", "$id": "urn:uuid:deadbeef-1234-ffff-ffff-4321feebdaed", "minimum": 30, "properties": {"foo": {"$ref": "urn:uuid:deadbeef-1234-ffff-ffff-4321feebdaed"}}}, "tests": [{"description": "valid under the URN IDed schema", "instance": {"foo": 37}, "valid": true}, {"description": "invalid under the URN IDed schema", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 186, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: unknown protocol: urn\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: unknown protocol: urn\n at java.net.URL.<init> (URL.java:779)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 186, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: urn:uuid:deadbeef-1234-ffff-ffff-4321feebdaed\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 186, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 186, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 186, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "case": {"description": "simple URN base URI with JSON pointer", "schema": {"$comment": "URIs do not have to have HTTP(s) schemes", "$id": "urn:uuid:deadbeef-1234-00ff-ff00-4321feebdaed", "properties": {"foo": {"$ref": "#/definitions/bar"}}, "definitions": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 187, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 187, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: urn:uuid:deadbeef-1234-00ff-ff00-4321feebdaed\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 187, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "Reference urn:#/definitions/bar must be canonical"}, "message": "", "caught": true, "errored": true}
{"seq": 187, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 187, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "case": {"description": "URN base URI with NSS", "schema": {"$comment": "RFC 8141 \u00a72.2", "$id": "urn:example:1/406/47452/2", "properties": {"foo": {"$ref": "#/definitions/bar"}}, "definitions": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 188, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "Reference urn:#/definitions/bar must be canonical"}, "message": "", "caught": true, "errored": true}
{"seq": 188, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 188, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: urn:example:1/406/47452/2\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 188, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 188, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "case": {"description": "URN base URI with r-component", "schema": {"$comment": "RFC 8141 \u00a72.3.1", "$id": "urn:example:foo-bar-baz-qux?+CCResolve:cc=uk", "properties": {"foo": {"$ref": "#/definitions/bar"}}, "definitions": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 189, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "Reference urn:?+CCResolve:cc=uk#/definitions/bar must be canonical"}, "message": "", "caught": true, "errored": true}
{"seq": 189, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: urn:example:foo-bar-baz-qux?+CCResolve:cc=uk\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 189, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 189, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 189, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "case": {"description": "URN base URI with q-component", "schema": {"$comment": "RFC 8141 \u00a72.3.2", "$id": "urn:example:weather?=op=map&lat=39.56&lon=-104.85&datetime=1969-07-21T02:56:15Z", "properties": {"foo": {"$ref": "#/definitions/bar"}}, "definitions": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 190, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "go-gojsonschema", "expected": [true, false], "context": {"message": "Reference urn:?=op=map&lat=39.56&lon=-104.85&datetime=1969-07-21T02:56:15Z#/definitions/bar must be canonical"}, "message": "", "caught": true, "errored": true}
{"seq": 190, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 190, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: urn:example:weather?=op=map&lat=39.56&lon=-104.85&datetime=1969-07-21T02:56:15Z\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 190, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 190, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "case": {"description": "URN base URI with URN and JSON pointer ref", "schema": {"$id": "urn:uuid:deadbeef-1234-0000-0000-4321feebdaed", "properties": {"foo": {"$ref": "urn:uuid:deadbeef-1234-0000-0000-4321feebdaed#/definitions/bar"}}, "definitions": {"bar": {"type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 191, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 191, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: unknown protocol: urn\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: unknown protocol: urn\n at java.net.URL.<init> (URL.java:779)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 191, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: urn:uuid:deadbeef-1234-0000-0000-4321feebdaed\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 191, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 191, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "case": {"description": "URN base URI with URN and anchor ref", "schema": {"$id": "urn:uuid:deadbeef-1234-ff00-00ff-4321feebdaed", "properties": {"foo": {"$ref": "urn:uuid:deadbeef-1234-ff00-00ff-4321feebdaed#something"}}, "definitions": {"bar": {"$id": "#something", "type": "string"}}}, "tests": [{"description": "a string is valid", "instance": {"foo": "bar"}, "valid": true}, {"description": "a non-string is invalid", "instance": {"foo": 12}, "valid": false}]}}
{"seq": 192, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: urn:uuid:deadbeef-1234-ff00-00ff-4321feebdaed\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 192, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 192, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: unknown protocol: urn\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: unknown protocol: urn\n at java.net.URL.<init> (URL.java:779)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 192, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 142, in resolving\n    yield resolve_path(schema, fragment)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 40, in resolve_path\n    raise JsonSchemaDefinitionException('Unresolvable ref: {}'.format(part))\nfastjsonschema.exceptions.JsonSchemaDefinitionException: Unresolvable ref: something\n"}, "message": "", "caught": true, "errored": true}
{"seq": 192, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 192, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 192, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "case": {"description": "ref with absolute-path-reference", "schema": {"$id": "http://example.com/ref/absref.json", "definitions": {"a": {"$id": "http://example.com/ref/absref/foobar.json", "type": "number"}, "b": {"$id": "http://example.com/absref/foobar.json", "type": "string"}}, "allOf": [{"$ref": "/absref/foobar.json"}]}, "tests": [{"description": "a string is valid", "instance": "foo", "valid": true}, {"description": "an integer is invalid", "instance": 12, "valid": false}]}}
{"seq": 193, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: /absref/foobar.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: /absref/foobar.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 193, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 193, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://example.com/ref/absref.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 193, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 193, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 193, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "case": {"description": "$id with file URI still resolves pointers - *nix", "schema": {"$id": "file:///folder/file.json", "definitions": {"foo": {"type": "number"}}, "allOf": [{"$ref": "#/definitions/foo"}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}]}}
{"seq": 194, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}, {"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}]}
{"seq": 194, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: file:///folder/file.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 194, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 194, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 194, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "case": {"description": "$id with file URI still resolves pointers - windows", "schema": {"$id": "file:///c:/folder/file.json", "definitions": {"foo": {"type": "number"}}, "allOf": [{"$ref": "#/definitions/foo"}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}]}}
{"seq": 195, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 195, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}, {"message": "Self-identifying with a `file:` URI is not allowed for security reasons.", "skipped": true}]}
{"seq": 195, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: file:///c:/folder/file.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 195, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 195, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "case": {"description": "empty tokens in $ref json-pointer", "schema": {"definitions": {"": {"definitions": {"": {"type": "number"}}}}, "allOf": [{"$ref": "#/definitions//definitions/"}]}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}]}}
{"seq": 196, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:102: reference not found: root:#/definitions//definitions/ (at \"definitions\")\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:102: in function 'resolve'\n\t/usr/local/share/lua/5.1/jsonschema.lua:167: in function 'validator'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1023: in function 'generate_validator'\n\t/usr/local/share/lua/5.1/jsonschema.lua:173: in function 'validator'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1184: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 196, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 196, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": true}]}
{"seq": 196, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 196, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "case": {"description": "remote ref", "schema": {"$ref": "http://localhost:1234/integer.json"}, "tests": [{"description": "remote ref valid", "instance": 1, "valid": true}, {"description": "remote ref invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 197, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 197, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.ConnectException: Connection refused\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.ConnectException: Connection refused\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.ConnectException: Connection refused\n at sun.nio.ch.Net.connect0 (Net.java:-2)\n    sun.nio.ch.Net.connect (Net.java:589)\n    sun.nio.ch.Net.connect (Net.java:578)\n    sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:583)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 197, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 197, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 197, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "case": {"description": "fragment within remote ref", "schema": {"$ref": "http://localhost:1234/subSchemas.json#/definitions/integer"}, "tests": [{"description": "remote fragment valid", "instance": 1, "valid": true}, {"description": "remote fragment invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 198, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 198, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.ConnectException: Connection refused\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.ConnectException: Connection refused\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.ConnectException: Connection refused\n at sun.nio.ch.Net.connect0 (Net.java:-2)\n    sun.nio.ch.Net.connect (Net.java:589)\n    sun.nio.ch.Net.connect (Net.java:578)\n    sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:583)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 198, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 198, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 198, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "case": {"description": "ref within remote ref", "schema": {"$ref": "http://localhost:1234/subSchemas.json#/definitions/refToInteger"}, "tests": [{"description": "ref within ref valid", "instance": 1, "valid": true}, {"description": "ref within ref invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 199, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.ConnectException: Connection refused\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.ConnectException: Connection refused\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.ConnectException: Connection refused\n at sun.nio.ch.Net.connect0 (Net.java:-2)\n    sun.nio.ch.Net.connect (Net.java:589)\n    sun.nio.ch.Net.connect (Net.java:578)\n    sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:583)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 199, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 199, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 199, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 199, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "case": {"description": "base URI change", "schema": {"$id": "http://localhost:1234/", "items": {"$id": "baseUriChange/", "items": {"$ref": "folderInteger.json"}}}, "tests": [{"description": "base URI change ref valid", "instance": [[1]], "valid": true}, {"description": "base URI change ref invalid", "instance": [["a"]], "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 200, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: folderInteger.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: folderInteger.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 200, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 200, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 200, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 200, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 200, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "case": {"description": "base URI change - change folder", "schema": {"$id": "http://localhost:1234/scope_change_defs1.json", "type": "object", "properties": {"list": {"$ref": "#/definitions/baz"}}, "definitions": {"baz": {"$id": "baseUriChangeFolder/", "type": "array", "items": {"$ref": "folderInteger.json"}}}}, "tests": [{"description": "number is valid", "instance": {"list": [1]}, "valid": true}, {"description": "string is invalid", "instance": {"list": ["a"]}, "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 201, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/scope_change_defs1.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 201, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 201, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"context": {"traceback": "SchemaError: no such schema <http://localhost:1234/folderInteger.json>\n    at Validator.resolve (/usr/app/node_modules/jsonschema/lib/validator.js:269:11)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:196:25)\n    at /usr/app/node_modules/jsonschema/lib/attribute.js:455:20\n    at Array.every (<anonymous>)\n    at Validator.validateItems (/usr/app/node_modules/jsonschema/lib/attribute.js:439:12)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:198:17)\n    at Validator.validateProperties (/usr/app/node_modules/jsonschema/lib/attribute.js:277:20)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validate (/usr/app/node_modules/jsonschema/lib/validator.js:135:21)", "message": "no such schema <http://localhost:1234/folderInteger.json>"}, "errored": true, "skipped": false}, {"context": {"traceback": "SchemaError: no such schema <http://localhost:1234/folderInteger.json>\n    at Validator.resolve (/usr/app/node_modules/jsonschema/lib/validator.js:269:11)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:196:25)\n    at /usr/app/node_modules/jsonschema/lib/attribute.js:455:20\n    at Array.every (<anonymous>)\n    at Validator.validateItems (/usr/app/node_modules/jsonschema/lib/attribute.js:439:12)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:198:17)\n    at Validator.validateProperties (/usr/app/node_modules/jsonschema/lib/attribute.js:277:20)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validate (/usr/app/node_modules/jsonschema/lib/validator.js:135:21)", "message": "no such schema <http://localhost:1234/folderInteger.json>"}, "errored": true, "skipped": false}]}
{"seq": 201, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: folderInteger.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: folderInteger.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 201, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 76, in generate_type\n    self.exc('{name} must be {}', ' or '.join(types), rule='type')\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 273, in exc\n    definition = self._expand_refs(self._definition)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 283, in _expand_refs\n    with self._resolver.resolving(definition[\"$ref\"]) as schema:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 201, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 201, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "case": {"description": "base URI change - change folder in subschema", "schema": {"$id": "http://localhost:1234/scope_change_defs2.json", "type": "object", "properties": {"list": {"$ref": "#/definitions/baz/definitions/bar"}}, "definitions": {"baz": {"$id": "baseUriChangeFolderInSubschema/", "definitions": {"bar": {"type": "array", "items": {"$ref": "folderInteger.json"}}}}}}, "tests": [{"description": "number is valid", "instance": {"list": [1]}, "valid": true}, {"description": "string is invalid", "instance": {"list": ["a"]}, "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 202, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 202, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 76, in generate_type\n    self.exc('{name} must be {}', ' or '.join(types), rule='type')\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 273, in exc\n    definition = self._expand_refs(self._definition)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 2 more times]\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 283, in _expand_refs\n    with self._resolver.resolving(definition[\"$ref\"]) as schema:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 202, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"context": {"traceback": "SchemaError: no such schema <http://localhost:1234/folderInteger.json>\n    at Validator.resolve (/usr/app/node_modules/jsonschema/lib/validator.js:269:11)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:196:25)\n    at /usr/app/node_modules/jsonschema/lib/attribute.js:455:20\n    at Array.every (<anonymous>)\n    at Validator.validateItems (/usr/app/node_modules/jsonschema/lib/attribute.js:439:12)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:198:17)\n    at Validator.validateProperties (/usr/app/node_modules/jsonschema/lib/attribute.js:277:20)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validate (/usr/app/node_modules/jsonschema/lib/validator.js:135:21)", "message": "no such schema <http://localhost:1234/folderInteger.json>"}, "errored": true, "skipped": false}, {"context": {"traceback": "SchemaError: no such schema <http://localhost:1234/folderInteger.json>\n    at Validator.resolve (/usr/app/node_modules/jsonschema/lib/validator.js:269:11)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:196:25)\n    at /usr/app/node_modules/jsonschema/lib/attribute.js:455:20\n    at Array.every (<anonymous>)\n    at Validator.validateItems (/usr/app/node_modules/jsonschema/lib/attribute.js:439:12)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:198:17)\n    at Validator.validateProperties (/usr/app/node_modules/jsonschema/lib/attribute.js:277:20)\n    at Validator.validateSchema (/usr/app/node_modules/jsonschema/lib/validator.js:208:34)\n    at Validator.validate (/usr/app/node_modules/jsonschema/lib/validator.js:135:21)", "message": "no such schema <http://localhost:1234/folderInteger.json>"}, "errored": true, "skipped": false}]}
{"seq": 202, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"message": "JSON pointers that cross schema resource boundaries are not suppported. There might be a way to solve this, but because this functionality has been removed from the spec and there is no good reason to do this in any version of the spec, it will probably never be fixed.", "skipped": true}, {"message": "JSON pointers that cross schema resource boundaries are not suppported. There might be a way to solve this, but because this functionality has been removed from the spec and there is no good reason to do this in any version of the spec, it will probably never be fixed.", "skipped": true}]}
{"seq": 202, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/scope_change_defs2.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 202, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: folderInteger.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: folderInteger.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 202, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 202, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 203, "case": {"description": "root ref in remote ref", "schema": {"$id": "http://localhost:1234/object", "type": "object", "properties": {"name": {"$ref": "name.json#/definitions/orNull"}}}, "tests": [{"description": "string is valid", "instance": {"name": "foo"}, "valid": true}, {"description": "null is valid", "instance": {"name": null}, "valid": true}, {"description": "object is invalid", "instance": {"name": {"name": null}}, "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 203, "implementation": "python-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "rust-boon", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "ruby-json_schemer", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "rust-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "lua-jsonschema", "expected": [true, true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/object\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 203, "implementation": "go-gojsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "js-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "js-schemasafe", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false], "results": [{"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 203, "implementation": "js-ajv", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "js-hyperjump", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "go-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "clojure-json-schema", "expected": [true, true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: name.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: name.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 203, "implementation": "python-fastjsonschema", "expected": [true, true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 145, in generate_validation_function\n    self.generate_func_code_block(definition, 'data', 'data', clear_variables=True)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 160, in generate_func_code_block\n    count = self._generate_func_code_block(definition)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 36, in _generate_func_code_block\n    self.run_generate_functions(definition)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 182, in run_generate_functions\n    func()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft06.py\", line 76, in generate_type\n    self.exc('{name} must be {}', ' or '.join(types), rule='type')\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 273, in exc\n    definition = self._expand_refs(self._definition)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 285, in _expand_refs\n    return {k: self._expand_refs(v) for k, v in definition.items()}\n               ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 283, in _expand_refs\n    with self._resolver.resolving(definition[\"$ref\"]) as schema:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 203, "implementation": "java-openapiprocessor", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "php-opis-json-schema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "cpp-jsontoolkit", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "java-jsonschemafriend", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 203, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 204, "case": {"description": "remote ref with ref to definitions", "schema": {"$id": "http://localhost:1234/schema-remote-ref-ref-defs1.json", "allOf": [{"$ref": "ref-and-definitions.json"}]}, "tests": [{"description": "invalid", "instance": {"bar": 1}, "valid": false}, {"description": "valid", "instance": {"bar": "a"}, "valid": true}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 204, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "lua-jsonschema", "expected": [false, true], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/schema-remote-ref-ref-defs1.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 204, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "clojure-json-schema", "expected": [false, true], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: ref-and-definitions.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: ref-and-definitions.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 204, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "js-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "python-fastjsonschema", "expected": [false, true], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 204, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "go-gojsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "cpp-jsontoolkit", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 204, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 205, "case": {"description": "Location-independent identifier in remote ref", "schema": {"$ref": "http://localhost:1234/locationIndependentIdentifierPre2019.json#/definitions/refToInteger"}, "tests": [{"description": "integer is valid", "instance": 1, "valid": true}, {"description": "string is invalid", "instance": "foo", "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 205, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.ConnectException: Connection refused\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.ConnectException: Connection refused\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.ConnectException: Connection refused\n at sun.nio.ch.Net.connect0 (Net.java:-2)\n    sun.nio.ch.Net.connect (Net.java:589)\n    sun.nio.ch.Net.connect (Net.java:578)\n    sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:583)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 205, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 205, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 205, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 205, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 205, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 206, "case": {"description": "retrieved nested refs resolve relative to their URI not $id", "schema": {"$id": "http://localhost:1234/some-id", "properties": {"name": {"$ref": "nested/foo-ref-string.json"}}}, "tests": [{"description": "number is invalid", "instance": {"name": {"foo": 1}}, "valid": false}, {"description": "string is valid", "instance": {"name": {"foo": "a"}}, "valid": true}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 206, "implementation": "python-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "ts-vscode-json-languageservice", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "go-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "java-jsonschemafriend", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "js-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "js-schemasafe", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "go-gojsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "dotnet-jsonschema-net", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "rust-boon", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "java-openapiprocessor", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "php-opis-json-schema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "lua-jsonschema", "expected": [false, true], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/some-id\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'new'\n\t/usr/local/share/lua/5.1/jsonschema.lua:323: in function 'codectx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1177: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 206, "implementation": "clojure-json-schema", "expected": [false, true], "context": {"traceback": "java.io.UncheckedIOException: java.net.MalformedURLException: no protocol: nested/foo-ref-string.json\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.MalformedURLException: no protocol: nested/foo-ref-string.json\n at java.net.URL.<init> (URL.java:772)\n    java.net.URL.<init> (URL.java:654)\n    java.net.URL.<init> (URL.java:590)\n    org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:19)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 206, "implementation": "rust-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "python-fastjsonschema", "expected": [false, true], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 206, "implementation": "java-networknt-json-schema-validator", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "js-ajv", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "ruby-json_schemer", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "js-hyperjump", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "cpp-jsontoolkit", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 206, "implementation": "dotnet-corvus-jsonschema", "expected": [false, true], "results": [{"valid": false}, {"valid": true}]}
{"seq": 207, "case": {"description": "$ref to $ref finds location-independent $id", "schema": {"$ref": "http://localhost:1234/draft6/detached-ref.json#/definitions/foo"}, "tests": [{"description": "number is valid", "instance": 1, "valid": true}, {"description": "non-number is invalid", "instance": "a", "valid": false}], "registry": {"http://localhost:1234/nested/foo-ref-string.json": {"type": "object", "properties": {"foo": {"$ref": "string.json"}}}, "http://localhost:1234/different-id-ref-string.json": {"$id": "http://localhost:1234/real-id-ref-string.json", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/subSchemas.json": {"definitions": {"integer": {"type": "integer"}, "refToInteger": {"$ref": "#/definitions/integer"}}}, "http://localhost:1234/ref-and-defs.json": {"$id": "http://localhost:1234/ref-and-defs.json", "$defs": {"inner": {"properties": {"bar": {"type": "string"}}}}, "$ref": "#/$defs/inner"}, "http://localhost:1234/locationIndependentIdentifierPre2019.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"$id": "#foo", "type": "integer"}}}, "http://localhost:1234/ref-and-definitions.json": {"$id": "http://localhost:1234/ref-and-definitions.json", "definitions": {"inner": {"properties": {"bar": {"type": "string"}}}}, "allOf": [{"$ref": "#/definitions/inner"}]}, "http://localhost:1234/name-defs.json": {"$defs": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/nested/string.json": {"type": "string"}, "http://localhost:1234/baseUriChangeFolderInSubschema/folderInteger.json": {"type": "integer"}, "http://localhost:1234/tree.json": {"description": "tree schema, extensible", "$id": "http://localhost:1234/tree.json", "$dynamicAnchor": "node", "type": "object", "properties": {"data": true, "children": {"type": "array", "items": {"$dynamicRef": "#node"}}}}, "http://localhost:1234/baseUriChangeFolder/folderInteger.json": {"type": "integer"}, "http://localhost:1234/draft6/detached-ref.json": {"$id": "http://localhost:1234/draft6/detached-ref.json", "$schema": "http://json-schema.org/draft-06/schema#", "definitions": {"foo": {"$ref": "#detached"}, "detached": {"$id": "#detached", "type": "integer"}}}, "http://localhost:1234/extendible-dynamic-ref.json": {"description": "extendible array", "$id": "http://localhost:1234/extendible-dynamic-ref.json", "type": "object", "properties": {"elements": {"type": "array", "items": {"$dynamicRef": "#elements"}}}, "required": ["elements"], "additionalProperties": false, "$defs": {"elements": {"$dynamicAnchor": "elements"}}}, "http://localhost:1234/name.json": {"definitions": {"orNull": {"anyOf": [{"type": "null"}, {"$ref": "#"}]}}, "type": "string"}, "http://localhost:1234/locationIndependentIdentifierDraft4.json": {"definitions": {"refToInteger": {"$ref": "#foo"}, "A": {"id": "#foo", "type": "integer"}}}, "http://localhost:1234/baseUriChange/folderInteger.json": {"type": "integer"}, "http://localhost:1234/integer.json": {"type": "integer"}, "http://localhost:1234/urn-ref-string.json": {"$id": "urn:uuid:feebdaed-ffff-0000-ffff-0000deadbeef", "$defs": {"bar": {"type": "string"}}, "$ref": "#/$defs/bar"}, "http://localhost:1234/locationIndependentIdentifier.json": {"$defs": {"refToInteger": {"$ref": "#foo"}, "A": {"$anchor": "foo", "type": "integer"}}}, "http://localhost:1234/nested-absolute-ref-to-string.json": {"$defs": {"bar": {"$id": "http://localhost:1234/the-nested-id.json", "type": "string"}}, "$ref": "http://localhost:1234/the-nested-id.json"}}}}
{"seq": 207, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "lua-jsonschema", "expected": [true, false], "context": {"traceback": "/usr/local/share/lua/5.1/jsonschema/store.lua:199: Only location independent id is supported. Unsupported $id: http://localhost:1234/draft6/detached-ref.json\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:199: in function 'walk'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:240: in function 'insert'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:157: in function 'fetch'\n\t/usr/local/share/lua/5.1/jsonschema/store.lua:82: in function 'resolve'\n\t/usr/local/share/lua/5.1/jsonschema.lua:167: in function 'validator'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1184: in function 'generate_main_validator_ctx'\n\t/usr/local/share/lua/5.1/jsonschema.lua:1201: in function </usr/local/share/lua/5.1/jsonschema.lua:1189>\n\t[C]: in function 'xpcall'\n\tbowtie_jsonschema.lua:68: in function <bowtie_jsonschema.lua:63>\n\tbowtie_jsonschema.lua:91: in main chunk\n\t[C]: at 0x564653702ed0"}, "message": "", "caught": true, "errored": true}
{"seq": 207, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": false}, {"valid": true}]}
{"seq": 207, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "python-fastjsonschema", "expected": [true, false], "context": {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1035, in send\n    self.connect()\n  File \"/usr/local/lib/python3.12/http/client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/socket.py\", line 853, in create_connection\n    raise exceptions[0]\n  File \"/usr/local/lib/python3.12/socket.py\", line 838, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/src/myapp/bowtie_fastjsonschema.py\", line 67, in cmd_run\n    validate = fastjsonschema.compile(schema)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/__init__.py\", line 210, in compile\n    global_state = code_generator.global_state\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/draft04.py\", line 73, in global_state\n    res = super().global_state\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 86, in global_state\n    self._generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 121, in _generate_func_code\n    self.generate_func_code()\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 135, in generate_func_code\n    self.generate_validation_function(uri, name)\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/generator.py\", line 143, in generate_validation_function\n    with self._resolver.resolving(uri) as definition:\n  File \"/usr/local/lib/python3.12/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 134, in resolving\n    schema = resolve_remote(uri, self.handlers)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/fastjsonschema/ref_resolver.py\", line 63, in resolve_remote\n    req = urlopen(uri)\n          ^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/urllib/request.py\", line 1347, in do_open\n    raise URLError(err)\nurllib.error.URLError: <urlopen error [Errno 111] Connection refused>\n"}, "message": "", "caught": true, "errored": true}
{"seq": 207, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 207, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "clojure-json-schema", "expected": [true, false], "context": {"traceback": "java.io.UncheckedIOException: java.net.ConnectException: Connection refused\n at org.everit.json.schema.loader.internal.DefaultSchemaClient.get (DefaultSchemaClient.java:27)\n    org.everit.json.schema.loader.JsonPointerEvaluator.executeWith (JsonPointerEvaluator.java:80)\n    org.everit.json.schema.loader.JsonPointerEvaluator.lambda$forURL$1 (JsonPointerEvaluator.java:121)\n    org.everit.json.schema.loader.JsonPointerEvaluator.query (JsonPointerEvaluator.java:151)\nCaused by: java.net.ConnectException: Connection refused\n at jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance (DirectConstructorHandleAccessor.java:62)\n    java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:502)\n    java.lang.reflect.Constructor.newInstance (Constructor.java:486)\n    sun.net.www.protocol.http.HttpURLConnection$10.run (HttpURLConnection.java:2071)\nCaused by: java.net.ConnectException: Connection refused\n at sun.nio.ch.Net.connect0 (Net.java:-2)\n    sun.nio.ch.Net.connect (Net.java:589)\n    sun.nio.ch.Net.connect (Net.java:578)\n    sun.nio.ch.NioSocketImpl.connect (NioSocketImpl.java:583)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 207, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 207, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 208, "case": {"description": "required validation", "schema": {"properties": {"foo": {}, "bar": {}}, "required": ["foo"]}, "tests": [{"description": "present required property is valid", "instance": {"foo": 1}, "valid": true}, {"description": "non-present required property is invalid", "instance": {"bar": 1}, "valid": false}, {"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores strings", "instance": "", "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}]}}
{"seq": 208, "implementation": "python-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "js-ajv", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "go-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "python-fastjsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "go-gojsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "ruby-json_schemer", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "lua-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "php-opis-json-schema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "js-schemasafe", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "js-hyperjump", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "rust-boon", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "cpp-jsontoolkit", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "rust-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "dotnet-jsonschema-net", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "js-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "java-jsonschemafriend", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "java-openapiprocessor", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 208, "implementation": "clojure-json-schema", "expected": [true, false, true, true, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 208, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, true, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 209, "case": {"description": "required default validation", "schema": {"properties": {"foo": {}}}, "tests": [{"description": "not required by default", "instance": {}, "valid": true}]}}
{"seq": 209, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "java-jsonschemafriend", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 209, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "case": {"description": "required with empty array", "schema": {"properties": {"foo": {}}, "required": []}, "tests": [{"description": "property not required", "instance": {}, "valid": true}]}}
{"seq": 210, "implementation": "python-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "go-gojsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "rust-boon", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "cpp-jsontoolkit", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "ts-vscode-json-languageservice", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "clojure-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "php-opis-json-schema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "dotnet-jsonschema-net", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-hyperjump", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "java-openapiprocessor", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "go-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-ajv", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-schemasafe", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "python-fastjsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "lua-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "js-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "rust-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "java-networknt-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "ruby-json_schemer", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "java-jsonschemafriend", "expected": [true], "context": {"message": "{valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Below min items: 1, keywordLocation=http://json-schema.org/draft-04/schema#/definitions/stringArray, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/stringArray, instanceLocation=#/required}]}", "traceback": "net.jimblackler.jsonschemafriend.StandardGenerationException: {valid=false, keywordLocation=http://json-schema.org/draft-04/schema, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#, instanceLocation=, errors=[{valid=false, error=Below min items: 1, keywordLocation=http://json-schema.org/draft-04/schema#/definitions/stringArray, absoluteKeywordLocation=http://json-schema.org/draft-04/schema#/definitions/stringArray, instanceLocation=#/required}]}\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:233)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:138)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:94)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchema(SchemaStore.java:86)\n\tat net.jimblackler.jsonschemafriend.SchemaStore.loadSchemaJson(SchemaStore.java:131)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:119)\n\tat BowtieJsonSchemaFriend.handle(BowtieJsonSchemaFriend.java:42)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)\n\tat BowtieJsonSchemaFriend.run(BowtieJsonSchemaFriend.java:32)\n\tat BowtieJsonSchemaFriend.main(BowtieJsonSchemaFriend.java:26)\n"}, "message": "", "caught": true, "errored": true}
{"seq": 210, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true], "results": [{"valid": true}]}
{"seq": 210, "implementation": "dotnet-corvus-jsonschema", "expected": [true], "results": [{"valid": true}]}
{"seq": 211, "case": {"description": "required with escaped characters", "schema": {"required": ["foo\nbar", "foo\"bar", "foo\\bar", "foo\rbar", "foo\tbar", "foo\fbar"]}, "tests": [{"description": "object with all properties present is valid", "instance": {"foo\nbar": 1, "foo\"bar": 1, "foo\\bar": 1, "foo\rbar": 1, "foo\tbar": 1, "foo\fbar": 1}, "valid": true}, {"description": "object with some properties missing is invalid", "instance": {"foo\nbar": "1", "foo\"bar": "1"}, "valid": false}]}}
{"seq": 211, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 211, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 211, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 212, "case": {"description": "required properties whose names are Javascript object property names", "schema": {"required": ["__proto__", "toString", "constructor"]}, "tests": [{"description": "ignores arrays", "instance": [], "valid": true}, {"description": "ignores other non-objects", "instance": 12, "valid": true}, {"description": "none of the properties mentioned", "instance": {}, "valid": false}, {"description": "__proto__ present", "instance": {"__proto__": "foo"}, "valid": false}, {"description": "toString present", "instance": {"toString": {"length": 37}}, "valid": false}, {"description": "constructor present", "instance": {"constructor": {"length": 37}}, "valid": false}, {"description": "all present", "instance": {"__proto__": 12, "toString": {"length": "foo"}, "constructor": 37}, "valid": true}], "comment": "Ensure JS implementations don't universally consider e.g. __proto__ to always be present in an object."}}
{"seq": 212, "implementation": "python-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "js-schemasafe", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "lua-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "clojure-json-schema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 212, "implementation": "js-ajv", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 212, "implementation": "js-hyperjump", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "js-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "go-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "rust-boon", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "go-gojsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 212, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false, false, true], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 213, "case": {"description": "integer type matches integers", "schema": {"type": "integer"}, "tests": [{"description": "an integer is an integer", "instance": 1, "valid": true}, {"description": "a float with zero fractional part is an integer", "instance": 1.0, "valid": true}, {"description": "a float is not an integer", "instance": 1.1, "valid": false}, {"description": "a string is not an integer", "instance": "foo", "valid": false}, {"description": "a string is still not an integer, even if it looks like one", "instance": "1", "valid": false}, {"description": "an object is not an integer", "instance": {}, "valid": false}, {"description": "an array is not an integer", "instance": [], "valid": false}, {"description": "a boolean is not an integer", "instance": true, "valid": false}, {"description": "null is not an integer", "instance": null, "valid": false}]}}
{"seq": 213, "implementation": "python-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "go-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "rust-boon", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "lua-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "js-schemasafe", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "go-gojsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "js-hyperjump", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "js-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "js-ajv", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "clojure-json-schema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 213, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "case": {"description": "number type matches numbers", "schema": {"type": "number"}, "tests": [{"description": "an integer is a number", "instance": 1, "valid": true}, {"description": "a float with zero fractional part is a number (and an integer)", "instance": 1.0, "valid": true}, {"description": "a float is a number", "instance": 1.1, "valid": true}, {"description": "a string is not a number", "instance": "foo", "valid": false}, {"description": "a string is still not a number, even if it looks like one", "instance": "1", "valid": false}, {"description": "an object is not a number", "instance": {}, "valid": false}, {"description": "an array is not a number", "instance": [], "valid": false}, {"description": "a boolean is not a number", "instance": true, "valid": false}, {"description": "null is not a number", "instance": null, "valid": false}]}}
{"seq": 214, "implementation": "python-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "go-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "rust-boon", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "js-hyperjump", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "lua-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "go-gojsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "js-schemasafe", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "js-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "js-ajv", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "clojure-json-schema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 214, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "case": {"description": "string type matches strings", "schema": {"type": "string"}, "tests": [{"description": "1 is not a string", "instance": 1, "valid": false}, {"description": "a float is not a string", "instance": 1.1, "valid": false}, {"description": "a string is a string", "instance": "foo", "valid": true}, {"description": "a string is still a string, even if it looks like a number", "instance": "1", "valid": true}, {"description": "an empty string is still a string", "instance": "", "valid": true}, {"description": "an object is not a string", "instance": {}, "valid": false}, {"description": "an array is not a string", "instance": [], "valid": false}, {"description": "a boolean is not a string", "instance": true, "valid": false}, {"description": "null is not a string", "instance": null, "valid": false}]}}
{"seq": 215, "implementation": "python-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "php-opis-json-schema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "ruby-json_schemer", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "js-ajv", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "lua-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "python-fastjsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "go-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "rust-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "rust-boon", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "dotnet-jsonschema-net", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "js-hyperjump", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "java-openapiprocessor", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "js-schemasafe", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "js-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "cpp-jsontoolkit", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "go-gojsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "clojure-json-schema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "java-jsonschemafriend", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 215, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, true, true, true, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "case": {"description": "object type matches objects", "schema": {"type": "object"}, "tests": [{"description": "an integer is not an object", "instance": 1, "valid": false}, {"description": "a float is not an object", "instance": 1.1, "valid": false}, {"description": "a string is not an object", "instance": "foo", "valid": false}, {"description": "an object is an object", "instance": {}, "valid": true}, {"description": "an array is not an object", "instance": [], "valid": false}, {"description": "a boolean is not an object", "instance": true, "valid": false}, {"description": "null is not an object", "instance": null, "valid": false}]}}
{"seq": 216, "implementation": "python-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "php-opis-json-schema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "rust-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "go-gojsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "python-fastjsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "js-schemasafe", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "js-hyperjump", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "ruby-json_schemer", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "java-openapiprocessor", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "clojure-json-schema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 216, "implementation": "go-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "rust-boon", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "lua-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "js-ajv", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "js-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "java-jsonschemafriend", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 216, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, true, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 217, "case": {"description": "array type matches arrays", "schema": {"type": "array"}, "tests": [{"description": "an integer is not an array", "instance": 1, "valid": false}, {"description": "a float is not an array", "instance": 1.1, "valid": false}, {"description": "a string is not an array", "instance": "foo", "valid": false}, {"description": "an object is not an array", "instance": {}, "valid": false}, {"description": "an array is an array", "instance": [], "valid": true}, {"description": "a boolean is not an array", "instance": true, "valid": false}, {"description": "null is not an array", "instance": null, "valid": false}]}}
{"seq": 217, "implementation": "python-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-schemasafe", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-ajv", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "rust-boon", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "rust-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "go-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "go-gojsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "lua-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "python-fastjsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "js-hyperjump", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "clojure-json-schema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 217, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, true, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 218, "case": {"description": "boolean type matches booleans", "schema": {"type": "boolean"}, "tests": [{"description": "an integer is not a boolean", "instance": 1, "valid": false}, {"description": "zero is not a boolean", "instance": 0, "valid": false}, {"description": "a float is not a boolean", "instance": 1.1, "valid": false}, {"description": "a string is not a boolean", "instance": "foo", "valid": false}, {"description": "an empty string is not a boolean", "instance": "", "valid": false}, {"description": "an object is not a boolean", "instance": {}, "valid": false}, {"description": "an array is not a boolean", "instance": [], "valid": false}, {"description": "true is a boolean", "instance": true, "valid": true}, {"description": "false is a boolean", "instance": false, "valid": true}, {"description": "null is not a boolean", "instance": null, "valid": false}]}}
{"seq": 218, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "python-fastjsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "go-gojsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "lua-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "js-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "clojure-json-schema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 218, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 218, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, true, true, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 219, "case": {"description": "null type matches only the null object", "schema": {"type": "null"}, "tests": [{"description": "an integer is not null", "instance": 1, "valid": false}, {"description": "a float is not null", "instance": 1.1, "valid": false}, {"description": "zero is not null", "instance": 0, "valid": false}, {"description": "a string is not null", "instance": "foo", "valid": false}, {"description": "an empty string is not null", "instance": "", "valid": false}, {"description": "an object is not null", "instance": {}, "valid": false}, {"description": "an array is not null", "instance": [], "valid": false}, {"description": "true is not null", "instance": true, "valid": false}, {"description": "false is not null", "instance": false, "valid": false}, {"description": "null is null", "instance": null, "valid": true}]}}
{"seq": 219, "implementation": "python-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "dotnet-jsonschema-net", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "js-schemasafe", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "go-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "cpp-jsontoolkit", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "lua-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "rust-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "ts-vscode-json-languageservice", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "ruby-json_schemer", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "php-opis-json-schema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "go-gojsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "js-hyperjump", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "kotlin-kmp-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "python-fastjsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "java-networknt-json-schema-validator", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "java-openapiprocessor", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "js-ajv", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "rust-boon", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "js-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "clojure-json-schema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 219, "implementation": "java-jsonschemafriend", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 219, "implementation": "dotnet-corvus-jsonschema", "expected": [false, false, false, false, false, false, false, false, false, true], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 220, "case": {"description": "multiple types can be specified in an array", "schema": {"type": ["integer", "string"]}, "tests": [{"description": "an integer is valid", "instance": 1, "valid": true}, {"description": "a string is valid", "instance": "foo", "valid": true}, {"description": "a float is invalid", "instance": 1.1, "valid": false}, {"description": "an object is invalid", "instance": {}, "valid": false}, {"description": "an array is invalid", "instance": [], "valid": false}, {"description": "a boolean is invalid", "instance": true, "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}]}}
{"seq": 220, "implementation": "python-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "js-schemasafe", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "go-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "go-gojsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "js-hyperjump", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "js-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "rust-boon", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "lua-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "js-ajv", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "clojure-json-schema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 220, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 221, "case": {"description": "type as array with one item", "schema": {"type": ["string"]}, "tests": [{"description": "string is valid", "instance": "foo", "valid": true}, {"description": "number is invalid", "instance": 123, "valid": false}]}}
{"seq": 221, "implementation": "python-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "java-networknt-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "go-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "rust-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "lua-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "dotnet-jsonschema-net", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "go-gojsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "js-ajv", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "rust-boon", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "ts-vscode-json-languageservice", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "php-opis-json-schema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "python-fastjsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "js-schemasafe", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "cpp-jsontoolkit", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "js-hyperjump", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "ruby-json_schemer", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "js-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "java-openapiprocessor", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "java-jsonschemafriend", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 221, "implementation": "clojure-json-schema", "expected": [true, false], "results": [{"valid": false}, {"valid": false}]}
{"seq": 221, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false], "results": [{"valid": true}, {"valid": false}]}
{"seq": 222, "case": {"description": "type: array or object", "schema": {"type": ["array", "object"]}, "tests": [{"description": "array is valid", "instance": [1, 2, 3], "valid": true}, {"description": "object is valid", "instance": {"foo": 123}, "valid": true}, {"description": "number is invalid", "instance": 123, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}, {"description": "null is invalid", "instance": null, "valid": false}]}}
{"seq": 222, "implementation": "python-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "lua-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "js-ajv", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "clojure-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 222, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "rust-boon", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "go-gojsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "go-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "js-hyperjump", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "js-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "js-schemasafe", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 222, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 223, "case": {"description": "type: array, object or null", "schema": {"type": ["array", "object", "null"]}, "tests": [{"description": "array is valid", "instance": [1, 2, 3], "valid": true}, {"description": "object is valid", "instance": {"foo": 123}, "valid": true}, {"description": "null is valid", "instance": null, "valid": true}, {"description": "number is invalid", "instance": 123, "valid": false}, {"description": "string is invalid", "instance": "foo", "valid": false}]}}
{"seq": 223, "implementation": "python-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "rust-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "js-ajv", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "go-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "js-hyperjump", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "php-opis-json-schema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "js-schemasafe", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "java-openapiprocessor", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "js-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "ruby-json_schemer", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "go-gojsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "python-fastjsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "rust-boon", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "lua-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "clojure-json-schema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 223, "implementation": "java-jsonschemafriend", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 223, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 224, "case": {"description": "uniqueItems validation", "schema": {"uniqueItems": true}, "tests": [{"description": "unique array of integers is valid", "instance": [1, 2], "valid": true}, {"description": "non-unique array of integers is invalid", "instance": [1, 1], "valid": false}, {"description": "non-unique array of more than two integers is invalid", "instance": [1, 2, 1], "valid": false}, {"description": "numbers are unique if mathematically unequal", "instance": [1.0, 1.0, 1], "valid": false}, {"description": "false is not equal to zero", "instance": [0, false], "valid": true}, {"description": "true is not equal to one", "instance": [1, true], "valid": true}, {"description": "unique array of strings is valid", "instance": ["foo", "bar", "baz"], "valid": true}, {"description": "non-unique array of strings is invalid", "instance": ["foo", "bar", "foo"], "valid": false}, {"description": "unique array of objects is valid", "instance": [{"foo": "bar"}, {"foo": "baz"}], "valid": true}, {"description": "non-unique array of objects is invalid", "instance": [{"foo": "bar"}, {"foo": "bar"}], "valid": false}, {"description": "property order of array of objects is ignored", "instance": [{"foo": "bar", "bar": "foo"}, {"bar": "foo", "foo": "bar"}], "valid": false}, {"description": "unique array of nested objects is valid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": false}}}], "valid": true}, {"description": "non-unique array of nested objects is invalid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": true}}}], "valid": false}, {"description": "unique array of arrays is valid", "instance": [["foo"], ["bar"]], "valid": true}, {"description": "non-unique array of arrays is invalid", "instance": [["foo"], ["foo"]], "valid": false}, {"description": "non-unique array of more than two arrays is invalid", "instance": [["foo"], ["bar"], ["foo"]], "valid": false}, {"description": "1 and true are unique", "instance": [1, true], "valid": true}, {"description": "0 and false are unique", "instance": [0, false], "valid": true}, {"description": "[1] and [true] are unique", "instance": [[1], [true]], "valid": true}, {"description": "[0] and [false] are unique", "instance": [[0], [false]], "valid": true}, {"description": "nested [1] and [true] are unique", "instance": [[[1], "foo"], [[true], "foo"]], "valid": true}, {"description": "nested [0] and [false] are unique", "instance": [[[0], "foo"], [[false], "foo"]], "valid": true}, {"description": "unique heterogeneous types are valid", "instance": [{}, [1], true, null, 1, "{}"], "valid": true}, {"description": "non-unique heterogeneous types are invalid", "instance": [{}, [1], true, null, {}, 1], "valid": false}, {"description": "different objects are unique", "instance": [{"a": 1, "b": 2}, {"a": 2, "b": 1}], "valid": true}, {"description": "objects are non-unique despite key order", "instance": [{"a": 1, "b": 2}, {"b": 2, "a": 1}], "valid": false}, {"description": "{\"a\": false} and {\"a\": 0} are unique", "instance": [{"a": false}, {"a": 0}], "valid": true}, {"description": "{\"a\": true} and {\"a\": 1} are unique", "instance": [{"a": true}, {"a": 1}], "valid": true}]}}
{"seq": 224, "implementation": "python-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "js-ajv", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "js-hyperjump", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "ruby-json_schemer", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "js-schemasafe", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "java-networknt-json-schema-validator", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "cpp-jsontoolkit", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "go-gojsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "dotnet-jsonschema-net", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "rust-boon", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "clojure-json-schema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "php-opis-json-schema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "js-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "ts-vscode-json-languageservice", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "python-fastjsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "rust-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "go-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "lua-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "java-openapiprocessor", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "java-jsonschemafriend", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 224, "implementation": "dotnet-corvus-jsonschema", "expected": [true, false, false, false, true, true, true, false, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, false, true, true], "results": [{"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": false}, {"valid": true}, {"valid": true}]}
{"seq": 225, "case": {"description": "uniqueItems with an array of items", "schema": {"items": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": true}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is not valid", "instance": [false, false], "valid": false}, {"description": "[true, true] from items array is not valid", "instance": [true, true], "valid": false}, {"description": "unique array extended from [false, true] is valid", "instance": [false, true, "foo", "bar"], "valid": true}, {"description": "unique array extended from [true, false] is valid", "instance": [true, false, "foo", "bar"], "valid": true}, {"description": "non-unique array extended from [false, true] is not valid", "instance": [false, true, "foo", "foo"], "valid": false}, {"description": "non-unique array extended from [true, false] is not valid", "instance": [true, false, "foo", "foo"], "valid": false}]}}
{"seq": 225, "implementation": "python-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "js-ajv", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "js-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "go-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "rust-boon", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "lua-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "rust-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "go-gojsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "clojure-json-schema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 225, "implementation": "js-hyperjump", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "js-schemasafe", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 225, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, true, true, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}]}
{"seq": 226, "case": {"description": "uniqueItems with an array of items and additionalItems=false", "schema": {"items": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": true, "additionalItems": false}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is not valid", "instance": [false, false], "valid": false}, {"description": "[true, true] from items array is not valid", "instance": [true, true], "valid": false}, {"description": "extra items are invalid even if unique", "instance": [false, true, null], "valid": false}]}}
{"seq": 226, "implementation": "python-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "go-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "js-schemasafe", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "go-gojsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "rust-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "python-fastjsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "rust-boon", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "ruby-json_schemer", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "clojure-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 226, "implementation": "js-ajv", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "php-opis-json-schema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "cpp-jsontoolkit", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "lua-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": true}]}
{"seq": 226, "implementation": "js-hyperjump", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "java-jsonschemafriend", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "js-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "dotnet-jsonschema-net", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "java-openapiprocessor", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 226, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, false, false, false], "results": [{"valid": true}, {"valid": true}, {"valid": false}, {"valid": false}, {"valid": false}]}
{"seq": 227, "case": {"description": "uniqueItems=false validation", "schema": {"uniqueItems": false}, "tests": [{"description": "unique array of integers is valid", "instance": [1, 2], "valid": true}, {"description": "non-unique array of integers is valid", "instance": [1, 1], "valid": true}, {"description": "numbers are unique if mathematically unequal", "instance": [1.0, 1.0, 1], "valid": true}, {"description": "false is not equal to zero", "instance": [0, false], "valid": true}, {"description": "true is not equal to one", "instance": [1, true], "valid": true}, {"description": "unique array of objects is valid", "instance": [{"foo": "bar"}, {"foo": "baz"}], "valid": true}, {"description": "non-unique array of objects is valid", "instance": [{"foo": "bar"}, {"foo": "bar"}], "valid": true}, {"description": "unique array of nested objects is valid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": false}}}], "valid": true}, {"description": "non-unique array of nested objects is valid", "instance": [{"foo": {"bar": {"baz": true}}}, {"foo": {"bar": {"baz": true}}}], "valid": true}, {"description": "unique array of arrays is valid", "instance": [["foo"], ["bar"]], "valid": true}, {"description": "non-unique array of arrays is valid", "instance": [["foo"], ["foo"]], "valid": true}, {"description": "1 and true are unique", "instance": [1, true], "valid": true}, {"description": "0 and false are unique", "instance": [0, false], "valid": true}, {"description": "unique heterogeneous types are valid", "instance": [{}, [1], true, null, 1], "valid": true}, {"description": "non-unique heterogeneous types are valid", "instance": [{}, [1], true, null, {}, 1], "valid": true}]}}
{"seq": 227, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 227, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "case": {"description": "uniqueItems=false with an array of items", "schema": {"items": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": false}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is valid", "instance": [false, false], "valid": true}, {"description": "[true, true] from items array is valid", "instance": [true, true], "valid": true}, {"description": "unique array extended from [false, true] is valid", "instance": [false, true, "foo", "bar"], "valid": true}, {"description": "unique array extended from [true, false] is valid", "instance": [true, false, "foo", "bar"], "valid": true}, {"description": "non-unique array extended from [false, true] is valid", "instance": [false, true, "foo", "foo"], "valid": true}, {"description": "non-unique array extended from [true, false] is valid", "instance": [true, false, "foo", "foo"], "valid": true}]}}
{"seq": 228, "implementation": "python-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "rust-boon", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "go-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "js-hyperjump", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "js-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "js-ajv", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "rust-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "go-gojsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "lua-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "js-schemasafe", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "clojure-json-schema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 228, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, true, true, true, true], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 229, "case": {"description": "uniqueItems=false with an array of items and additionalItems=false", "schema": {"items": [{"type": "boolean"}, {"type": "boolean"}], "uniqueItems": false, "additionalItems": false}, "tests": [{"description": "[false, true] from items array is valid", "instance": [false, true], "valid": true}, {"description": "[true, false] from items array is valid", "instance": [true, false], "valid": true}, {"description": "[false, false] from items array is valid", "instance": [false, false], "valid": true}, {"description": "[true, true] from items array is valid", "instance": [true, true], "valid": true}, {"description": "extra items are invalid even if unique", "instance": [false, true, null], "valid": false}]}}
{"seq": 229, "implementation": "python-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "rust-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "ts-vscode-json-languageservice", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "php-opis-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "js-schemasafe", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "js-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "ruby-json_schemer", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "python-fastjsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "clojure-json-schema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 229, "implementation": "lua-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}]}
{"seq": 229, "implementation": "go-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "rust-boon", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "go-gojsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "java-openapiprocessor", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "js-ajv", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "js-hyperjump", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "cpp-jsontoolkit", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "kotlin-kmp-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "java-networknt-json-schema-validator", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "dotnet-jsonschema-net", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "java-jsonschemafriend", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"seq": 229, "implementation": "dotnet-corvus-jsonschema", "expected": [true, true, true, true, false], "results": [{"valid": true}, {"valid": true}, {"valid": true}, {"valid": true}, {"valid": false}]}
{"did_fail_fast": false}
